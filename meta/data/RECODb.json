{
  "info": {
    "title": "RECODb",
    "x-type": "odata",
    "x-connector": "mssql",
    "x-connector-version": 15
  },
  "definitions": {
    "AccountingAudit": {
      "x-view": "sp",
      "x-table": "dbo.AccountingAudit",
      "x-parameters": [
        {
          "name": "ProgramID",
          "type": "integer"
        },
        {
          "name": "StartDate",
          "type": "string",
          "format": "date-time",
          "size": 3
        },
        {
          "name": "EndDate",
          "type": "string",
          "format": "date-time",
          "size": 3
        }
      ],
      "resource": "AccountingAudits",
      "required": [
        "ClaimNo",
        "TransactionDate",
        "Amount"
      ],
      "properties": {
        "ClaimNo": {
          "x-nullable": false,
          "type": "string",
          "length": 40,
          "x-key": true,
          "x-virtual": true
        },
        "RequestID": {
          "type": "string",
          "length": 50
        },
        "TransactionDate": {
          "x-nullable": false,
          "x-precision": 23,
          "x-scale": 3,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "PayTypeDescription": {
          "x-computed": true,
          "x-nullable": false,
          "type": "string",
          "length": 202
        },
        "Payee": {
          "type": "string",
          "length": 1000
        },
        "Amount": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "AccountingRecoveryAudit": {
      "x-view": "sp",
      "x-table": "dbo.AccountingRecoveryAudit",
      "x-parameters": [
        {
          "name": "ProgramID",
          "type": "integer"
        },
        {
          "name": "StartDate",
          "type": "string",
          "format": "date-time",
          "size": 3
        },
        {
          "name": "EndDate",
          "type": "string",
          "format": "date-time",
          "size": 3
        }
      ],
      "resource": "AccountingRecoveryAudits",
      "required": [
        "ClaimNo",
        "TransactionDate",
        "Amount"
      ],
      "properties": {
        "ClaimNo": {
          "x-nullable": false,
          "type": "string",
          "length": 40,
          "x-key": true,
          "x-virtual": true
        },
        "RequestID": {
          "type": "string",
          "length": 50
        },
        "TransactionDate": {
          "x-nullable": false,
          "x-precision": 23,
          "x-scale": 3,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "PayTypeDescription": {
          "x-computed": true,
          "x-nullable": false,
          "type": "string",
          "length": 202
        },
        "Amount": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "ActiveFileHandlerDiary": {
      "x-view": true,
      "x-table": "dbo.ActiveFileHandlerDiaries",
      "resource": "ActiveFileHandlerDiaries",
      "required": [
        "ClaimID"
      ],
      "properties": {
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        }
      }
    },
    "ActiveUserDiaryReport": {
      "x-view": "sp",
      "x-table": "dbo.ActiveUserDiaryReport",
      "x-parameters": [
        {
          "name": "ReminderDateFrom",
          "type": "string",
          "format": "date-time",
          "size": 8
        },
        {
          "name": "ReminderDateTo",
          "type": "string",
          "format": "date-time",
          "size": 8
        },
        {
          "name": "UserID",
          "type": "string",
          "size": 900
        }
      ],
      "resource": "ActiveUserDiaryReports",
      "required": [
        "ClaimTypeID",
        "RECOClaim",
        "Program"
      ],
      "properties": {
        "ClaimTypeID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        },
        "ReminderDate": {
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "UserID": {
          "x-computed": true,
          "type": "string",
          "length": 400
        },
        "Subject": {
          "type": "string",
          "length": 510
        },
        "RECOClaim": {
          "x-original-name": "RECO Claim #",
          "x-nullable": false,
          "type": "string",
          "length": 40
        },
        "Program": {
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "AdjusterClaim": {
          "x-original-name": "Adjuster Claim #",
          "type": "string",
          "length": 100
        },
        "Registrants": {
          "x-computed": true,
          "type": "string"
        },
        "ClaimInitiation": {
          "x-original-name": "Claim Initiation",
          "x-computed": true,
          "type": "string",
          "length": 100
        },
        "FileHandler": {
          "x-original-name": "File Handler",
          "type": "string",
          "length": 200
        },
        "Recipients": {
          "type": "string",
          "length": 4000
        }
      }
    },
    "ActualDaysOpen": {
      "x-view": true,
      "x-table": "dbo.ActualDaysOpen",
      "resource": "ActualDaysOpens",
      "required": [
        "ClaimID"
      ],
      "properties": {
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        },
        "DaysActuallyOpen": {
          "x-precision": 10,
          "type": "integer"
        }
      }
    },
    "ActuaryBordereau": {
      "x-view": "sp",
      "x-table": "dbo.ActuaryBordereau",
      "x-parameters": [
        {
          "name": "ReportDate",
          "type": "string",
          "format": "date-time",
          "size": 8
        }
      ],
      "resource": "ActuaryBordereaus",
      "required": [
        "ContractYear",
        "ClaimNo",
        "Program",
        "CoverageIssue",
        "ClaimorIncident"
      ],
      "properties": {
        "ContractYear": {
          "x-original-name": "Contract Year",
          "x-nullable": false,
          "type": "string",
          "length": 100,
          "x-key": true,
          "x-virtual": true
        },
        "ClaimNo": {
          "x-nullable": false,
          "type": "string",
          "length": 40
        },
        "Registrants": {
          "type": "string"
        },
        "RegistrantNumbers": {
          "type": "string"
        },
        "Broker": {
          "type": "string",
          "length": 200
        },
        "Claimant": {
          "type": "string"
        },
        "Program": {
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "Status": {
          "type": "string",
          "length": 100
        },
        "CoverageIssue": {
          "x-original-name": "Coverage Issue",
          "x-nullable": false,
          "type": "string",
          "length": 3
        },
        "DefenseCounsel": {
          "x-original-name": "Defense Counsel",
          "type": "string",
          "length": 200
        },
        "DefenseFirm": {
          "x-original-name": "Defense Firm",
          "type": "string",
          "length": 200
        },
        "Adjuster": {
          "type": "string",
          "length": 200
        },
        "AdjustingFirm": {
          "x-original-name": "Adjusting Firm",
          "type": "string",
          "length": 200
        },
        "FileHandler": {
          "x-original-name": "File Handler",
          "type": "string",
          "length": 200
        },
        "CoverageCounsel": {
          "x-original-name": "Coverage Counsel",
          "type": "string",
          "length": 200
        },
        "CoverageFirm": {
          "x-original-name": "Coverage Firm",
          "type": "string",
          "length": 200
        },
        "ClaimDate": {
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "AgreementDate": {
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "ReportDate": {
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "CloseDate": {
          "x-precision": 23,
          "x-scale": 3,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "AmountOfClaim": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "StatusofFunds": {
          "x-original-name": "Status of Funds",
          "type": "string",
          "length": 100
        },
        "IndemnityReserve": {
          "x-original-name": "Indemnity Reserve",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalReserve": {
          "x-original-name": "Legal Reserve",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingReserve": {
          "x-original-name": "Adjusting Reserve",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalReserve": {
          "x-original-name": "Total Reserve",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "IndemnityPaid": {
          "x-original-name": "Indemnity Paid",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalPaid": {
          "x-original-name": "Legal Paid",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalFees": {
          "x-original-name": "Legal Fees",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalDisbursements": {
          "x-original-name": "Legal Disbursements",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalTaxes": {
          "x-original-name": "Legal Taxes",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingPaid": {
          "x-original-name": "Adjusting Paid",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjusterFees": {
          "x-original-name": "Adjuster Fees",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjusterDisbursements": {
          "x-original-name": "Adjuster Disbursements",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjusterTaxes": {
          "x-original-name": "Adjuster Taxes",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalPaid": {
          "x-original-name": "Total Paid",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Deductible": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Subrogation": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalIncurred": {
          "x-original-name": "Total Incurred",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TransactionType": {
          "type": "string",
          "length": 100
        },
        "TransactionValue": {
          "type": "string",
          "length": 100
        },
        "UrbanOrRuralDesc": {
          "type": "string",
          "length": 100
        },
        "CurrentClaimStatus": {
          "x-original-name": "Current Claim Status",
          "type": "string",
          "length": 100
        },
        "ClaimorIncident": {
          "x-original-name": "Claim or Incident",
          "x-nullable": false,
          "type": "string",
          "length": 8
        },
        "ConvertedToLitigation": {
          "x-original-name": "Converted To Litigation",
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "ClaimInitiation": {
          "x-original-name": "Claim Initiation",
          "type": "string",
          "length": 100
        },
        "LapseDate": {
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "EndofDealReason": {
          "x-original-name": "End of Deal Reason",
          "type": "string",
          "length": 100
        },
        "DeniedReason": {
          "x-original-name": "Denied Reason",
          "type": "string",
          "length": 100
        },
        "TradeAddress": {
          "type": "string"
        },
        "TradeCity": {
          "type": "string",
          "length": 200
        },
        "TradeProvince": {
          "type": "string",
          "length": 100
        },
        "TradePostalCode": {
          "type": "string",
          "length": 14
        },
        "LossCauseDesc": {
          "x-original-name": "Loss Cause Desc",
          "type": "string",
          "length": 100
        },
        "LossCauseTags": {
          "type": "string"
        },
        "ClaimDescription": {
          "type": "string",
          "length": 2000
        },
        "LastExaminerDiary": {
          "x-original-name": "Last Examiner Diary",
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "AvgYearsofExperience": {
          "x-original-name": "Avg Years of Experience",
          "x-precision": 10,
          "type": "integer"
        },
        "ApplicableParty": {
          "type": "string",
          "length": 100
        }
      }
    },
    "AddErrorLog": {
      "x-view": "sp",
      "x-table": "dbo.AddErrorLog",
      "x-parameters": [
        {
          "name": "ErrorMessage",
          "type": "string",
          "size": -1
        },
        {
          "name": "UserID",
          "type": "string",
          "size": 900
        },
        {
          "name": "ClaimID",
          "type": "integer"
        }
      ],
      "resource": "AddErrorLogs",
      "properties": {}
    },
    "Administrator": {
      "x-table": "dbo.Administrators",
      "resource": "Administrators",
      "required": [
        "Name"
      ],
      "properties": {
        "ID": {
          "x-key": true,
          "x-default-sql": "(newid())",
          "x-nullable": false,
          "type": "string",
          "format": "uuid"
        },
        "AdministratorID": {
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-navigation": [
            {
              "inversePropertyName": "Administrator",
              "name": "Brokerages",
              "type": "Brokerage"
            }
          ]
        },
        "Name": {
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "Address": {
          "type": "string",
          "length": 450
        },
        "Parameter": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "ProvinceID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Administrators"
          }
        },
        "City": {
          "type": "string",
          "length": 100
        },
        "PostalCode": {
          "type": "string",
          "length": 7
        },
        "EmailAddress": {
          "type": "string",
          "length": 450
        },
        "BusinessPhoneNum": {
          "type": "string",
          "length": 15
        },
        "CellPhoneNum": {
          "type": "string",
          "length": 15
        },
        "FaxNum": {
          "type": "string",
          "length": 15
        },
        "Parameter1": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "PreferredCommunicationMethodID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter1",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Administrators1"
          }
        },
        "Brokerages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brokerage"
          }
        }
      }
    },
    "Appointment": {
      "x-table": "dbo.Appointments",
      "resource": "Appointments",
      "required": [
        "AppointmentID",
        "ClaimID",
        "AppointmentType",
        "Subject",
        "StartDate",
        "EndDate",
        "UserID",
        "EnteredBy"
      ],
      "properties": {
        "ID": {
          "x-key": true,
          "x-default-sql": "(newid())",
          "x-nullable": false,
          "type": "string",
          "format": "uuid"
        },
        "AppointmentID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "Claim": {
          "type": "object",
          "$ref": "#/definitions/Claim"
        },
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Claims",
            "parentEntityType": "Claim",
            "type": "Claim",
            "principalKey": "ClaimID",
            "name": "Claim",
            "textProperty": "ClaimNo",
            "primaryKey": "ID",
            "navigationProperty": "Appointments"
          }
        },
        "EntryDate": {
          "x-default-sql": "(getdate())",
          "x-nullable": false,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "Parameter": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "AppointmentType": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Appointments"
          }
        },
        "Subject": {
          "x-nullable": false,
          "type": "string",
          "length": 255
        },
        "Details": {
          "type": "string",
          "length": 4000
        },
        "StartDate": {
          "x-nullable": false,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "EndDate": {
          "x-nullable": false,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "AllDay": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "VisibleTo": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "UserID": {
          "x-nullable": false,
          "type": "string",
          "length": 450
        },
        "EnteredBy": {
          "x-nullable": false,
          "type": "string",
          "length": 450
        },
        "Address": {
          "type": "string",
          "length": 500
        },
        "Parameter1": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "ProvinceID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter1",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Appointments1"
          }
        },
        "City": {
          "type": "string",
          "length": 100
        },
        "PostalCode": {
          "type": "string",
          "length": 7
        }
      }
    },
    "AuditTrail": {
      "x-table": "dbo.AuditTrail",
      "resource": "AuditTrails",
      "required": [
        "ClaimID",
        "TableAffected",
        "UserID"
      ],
      "properties": {
        "AuditTrailID": {
          "x-key": true,
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "Claim": {
          "type": "object",
          "$ref": "#/definitions/Claim"
        },
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Claims",
            "parentEntityType": "Claim",
            "type": "Claim",
            "principalKey": "ClaimID",
            "name": "Claim",
            "textProperty": "ClaimNo",
            "primaryKey": "ID",
            "navigationProperty": "AuditTrails"
          }
        },
        "AuditTrailDate": {
          "x-default-sql": "(getdate())",
          "x-nullable": false,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "TableAffected": {
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "UserID": {
          "x-nullable": false,
          "type": "string",
          "length": 450
        },
        "RowDetails": {
          "type": "string",
          "length": 4000
        }
      }
    },
    "AuditTrailDetail": {
      "x-view": true,
      "x-table": "dbo.AuditTrailDetails",
      "resource": "AuditTrailDetails",
      "required": [
        "AuditTrailDate",
        "TableAffected",
        "AuditTrailID",
        "ClaimID",
        "Name",
        "UserID"
      ],
      "properties": {
        "AuditTrailDate": {
          "x-nullable": false,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime",
          "x-key": true,
          "x-virtual": true
        },
        "ClaimNo": {
          "type": "string",
          "length": 20
        },
        "TableAffected": {
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "RowDetails": {
          "type": "string",
          "length": 4000
        },
        "AuditTrailID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "Name": {
          "x-nullable": false,
          "type": "string",
          "length": 450
        },
        "UserID": {
          "x-nullable": false,
          "type": "string",
          "length": 450
        }
      }
    },
    "AutoReserving": {
      "x-table": "dbo.AutoReserving",
      "resource": "AutoReservings",
      "required": [
        "ProgramID",
        "ClaimInitiationID"
      ],
      "properties": {
        "Parameter": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "ProgramID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "AutoReservings"
          }
        },
        "Parameter1": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "ClaimInitiationID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter1",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "AutoReservings1"
          }
        },
        "ClaimOrIncident": {
          "x-key": true,
          "x-nullable": false,
          "type": "boolean"
        },
        "AdjusterReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "AvailableIncurredCategory": {
      "x-view": true,
      "x-table": "dbo.AvailableIncurredCategories",
      "resource": "AvailableIncurredCategories",
      "required": [
        "ParameterID",
        "ParamDesc",
        "ParamTypeDesc",
        "ParamTypeID",
        "ID",
        "OccurrenceMade",
        "FiscalYear",
        "SeparateIncidents",
        "Active"
      ],
      "properties": {
        "ParameterID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        },
        "ParamAbbrev": {
          "type": "string",
          "length": 6
        },
        "ParamDesc": {
          "x-nullable": false,
          "type": "string",
          "length": 50
        },
        "ParamValue": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ParamTypeDesc": {
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "ParamTypeID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "ParentParamType": {
          "type": "string",
          "length": 100
        },
        "ParentParameterDesc": {
          "type": "string",
          "length": 50
        },
        "ParentParameterID": {
          "x-precision": 10,
          "type": "integer"
        },
        "ID": {
          "x-nullable": false,
          "type": "string",
          "format": "uuid"
        },
        "OccurrenceMade": {
          "x-nullable": false,
          "type": "boolean"
        },
        "FiscalYear": {
          "x-nullable": false,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "SeparateIncidents": {
          "x-nullable": false,
          "type": "boolean"
        },
        "ShowLegal": {
          "type": "boolean"
        },
        "ShowTradeFlags": {
          "type": "boolean"
        },
        "LocationName": {
          "type": "string",
          "length": 25
        },
        "TradeTypeName": {
          "type": "string",
          "length": 25
        },
        "ShowExpense": {
          "type": "boolean"
        },
        "ShowAdjusting": {
          "type": "boolean"
        },
        "ShowRecovery": {
          "type": "boolean"
        },
        "ApplicationName": {
          "type": "string",
          "length": 50
        },
        "ClaimantName": {
          "type": "string",
          "length": 25
        },
        "ContractYear": {
          "type": "string",
          "length": 25
        },
        "Active": {
          "x-nullable": false,
          "type": "boolean"
        },
        "BrokerOfRecordName": {
          "type": "string",
          "length": 50
        },
        "IncidentName": {
          "type": "string",
          "length": 50
        },
        "LossCauseName": {
          "type": "string",
          "length": 50
        },
        "SubrogationName": {
          "type": "string",
          "length": 50
        },
        "FloatAccount": {
          "type": "string",
          "length": 50
        },
        "ClaimInitiation": {
          "type": "string",
          "length": 50
        }
      }
    },
    "AvailableIncurredType": {
      "x-view": true,
      "x-table": "dbo.AvailableIncurredTypes",
      "resource": "AvailableIncurredTypes",
      "required": [
        "ParameterID",
        "ParamDesc",
        "ParamTypeDesc",
        "ParamTypeID",
        "ID",
        "OccurrenceMade",
        "FiscalYear",
        "SeparateIncidents",
        "Active"
      ],
      "properties": {
        "ParameterID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        },
        "ParamAbbrev": {
          "type": "string",
          "length": 6
        },
        "ParamDesc": {
          "x-nullable": false,
          "type": "string",
          "length": 50
        },
        "ParamValue": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ParamTypeDesc": {
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "ParamTypeID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "ParentParamType": {
          "type": "string",
          "length": 100
        },
        "ParentParameterDesc": {
          "type": "string",
          "length": 50
        },
        "ParentParameterID": {
          "x-precision": 10,
          "type": "integer"
        },
        "ID": {
          "x-nullable": false,
          "type": "string",
          "format": "uuid"
        },
        "OccurrenceMade": {
          "x-nullable": false,
          "type": "boolean"
        },
        "FiscalYear": {
          "x-nullable": false,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "SeparateIncidents": {
          "x-nullable": false,
          "type": "boolean"
        },
        "ShowLegal": {
          "type": "boolean"
        },
        "ShowTradeFlags": {
          "type": "boolean"
        },
        "LocationName": {
          "type": "string",
          "length": 25
        },
        "TradeTypeName": {
          "type": "string",
          "length": 25
        },
        "ShowExpense": {
          "type": "boolean"
        },
        "ShowAdjusting": {
          "type": "boolean"
        },
        "ShowRecovery": {
          "type": "boolean"
        },
        "ApplicationName": {
          "type": "string",
          "length": 50
        },
        "ClaimantName": {
          "type": "string",
          "length": 25
        },
        "ContractYear": {
          "type": "string",
          "length": 25
        },
        "Active": {
          "x-nullable": false,
          "type": "boolean"
        },
        "BrokerOfRecordName": {
          "type": "string",
          "length": 50
        },
        "IncidentName": {
          "type": "string",
          "length": 50
        },
        "LossCauseName": {
          "type": "string",
          "length": 50
        },
        "SubrogationName": {
          "type": "string",
          "length": 50
        },
        "FloatAccount": {
          "type": "string",
          "length": 50
        },
        "ClaimInitiation": {
          "type": "string",
          "length": 50
        }
      }
    },
    "BinaryRoleValue": {
      "x-table": "dbo.BinaryRoleValues",
      "resource": "BinaryRoleValues",
      "required": [
        "RoleID",
        "BinaryValue"
      ],
      "properties": {
        "RoleID": {
          "x-key": true,
          "x-nullable": false,
          "type": "string",
          "length": 450
        },
        "BinaryValue": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        }
      }
    },
    "Brokerage": {
      "x-table": "dbo.Brokerages",
      "resource": "Brokerages",
      "required": [
        "Name"
      ],
      "properties": {
        "BrokerageID": {
          "x-key": true,
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-navigation": [
            {
              "inversePropertyName": "Brokerage",
              "name": "Claimants",
              "type": "Claimant"
            },
            {
              "inversePropertyName": "Brokerage",
              "name": "BrokerageContacts",
              "type": "BrokerageContact"
            },
            {
              "inversePropertyName": "Brokerage",
              "name": "Occurrences",
              "type": "Occurrence"
            },
            {
              "inversePropertyName": "Brokerage",
              "name": "Insureds",
              "type": "Insured"
            },
            {
              "inversePropertyName": "Brokerage",
              "name": "Claims",
              "type": "Claim"
            },
            {
              "inversePropertyName": "Brokerage",
              "name": "Registrants",
              "type": "Registrant"
            },
            {
              "inversePropertyName": "Brokerage",
              "name": "OtherParties",
              "type": "OtherParty"
            }
          ]
        },
        "Name": {
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "RegistrantNo": {
          "type": "string",
          "length": 7
        },
        "RegistrationExpiryDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "Registrant": {
          "type": "object",
          "$ref": "#/definitions/Registrant"
        },
        "BrokerOfRecordID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Registrants",
            "parentEntityType": "Registrant",
            "type": "Registrant",
            "principalKey": "RegistrantID",
            "name": "Registrant",
            "textProperty": "Name",
            "primaryKey": "ID",
            "navigationProperty": "Brokerages"
          }
        },
        "ContactPerson": {
          "type": "string",
          "length": 100
        },
        "Street1": {
          "type": "string",
          "length": 500
        },
        "Street2": {
          "type": "string",
          "length": 500
        },
        "UnitNumber": {
          "type": "string",
          "length": 20
        },
        "ProvinceID": {
          "x-precision": 10,
          "type": "integer"
        },
        "City": {
          "type": "string",
          "length": 100
        },
        "PostalCode": {
          "type": "string",
          "length": 7
        },
        "EmailAddress": {
          "type": "string",
          "length": 450
        },
        "BusinessPhoneNum": {
          "type": "string",
          "length": 50
        },
        "CellPhoneNum": {
          "type": "string",
          "length": 25
        },
        "FaxNum": {
          "type": "string",
          "length": 25
        },
        "Parameter": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "PreferredCommunicationMethodID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Brokerages"
          }
        },
        "Administrator": {
          "type": "object",
          "$ref": "#/definitions/Administrator"
        },
        "AdministratorID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Administrators",
            "parentEntityType": "Administrator",
            "type": "Administrator",
            "principalKey": "AdministratorID",
            "name": "Administrator",
            "textProperty": "Name",
            "primaryKey": "ID",
            "navigationProperty": "Brokerages"
          }
        },
        "BrokerOfRecordName": {
          "type": "string",
          "length": 100
        },
        "Address": {
          "type": "string",
          "length": 450
        },
        "ContactPersonEmail": {
          "type": "string",
          "length": 450
        },
        "ContactPersonPhoneNum": {
          "type": "string",
          "length": 50
        },
        "Claimants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Claimant"
          }
        },
        "BrokerageContacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BrokerageContact"
          }
        },
        "Occurrences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Occurrence"
          }
        },
        "Insureds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Insured"
          }
        },
        "Claims": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Claim"
          }
        },
        "Registrants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Registrant"
          }
        },
        "OtherParties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OtherParty"
          }
        }
      }
    },
    "BrokerageContact": {
      "x-table": "dbo.BrokerageContacts",
      "resource": "BrokerageContacts",
      "required": [
        "ClaimID",
        "BrokerageID",
        "Name"
      ],
      "properties": {
        "BrokerageContactID": {
          "x-key": true,
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "Brokerage": {
          "type": "object",
          "$ref": "#/definitions/Brokerage"
        },
        "BrokerageID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Brokerages",
            "parentEntityType": "Brokerage",
            "type": "Brokerage",
            "principalKey": "BrokerageID",
            "name": "Brokerage",
            "textProperty": "Name",
            "navigationProperty": "BrokerageContacts"
          }
        },
        "Name": {
          "x-nullable": false,
          "type": "string",
          "length": 255
        },
        "Email": {
          "type": "string",
          "length": 255
        },
        "PhoneNum": {
          "type": "string",
          "length": 50
        },
        "Parameter": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "BrokerageRoleID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "BrokerageContacts"
          }
        }
      }
    },
    "Builder": {
      "x-table": "dbo.Builders",
      "resource": "Builders",
      "required": [
        "Name"
      ],
      "properties": {
        "ID": {
          "x-key": true,
          "x-default-sql": "(newid())",
          "x-nullable": false,
          "type": "string",
          "format": "uuid"
        },
        "BuilderID": {
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-navigation": [
            {
              "inversePropertyName": "Builder",
              "name": "Trades",
              "type": "Trade"
            }
          ]
        },
        "Name": {
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "Address": {
          "type": "string",
          "length": 450
        },
        "Parameter": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "ProvinceID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Builders"
          }
        },
        "City": {
          "type": "string",
          "length": 100
        },
        "PostalCode": {
          "type": "string",
          "length": 7
        },
        "EmailAddress": {
          "type": "string",
          "length": 450
        },
        "BusinessPhoneNum": {
          "type": "string",
          "length": 15
        },
        "CellPhoneNum": {
          "type": "string",
          "length": 15
        },
        "FaxNum": {
          "type": "string",
          "length": 15
        },
        "Parameter1": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "PreferredCommunicationMethodID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter1",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Builders1"
          }
        },
        "ContactName": {
          "type": "string",
          "length": 100
        },
        "Trades": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Trade"
          }
        }
      }
    },
    "BuilderDetail": {
      "x-view": true,
      "x-table": "dbo.BuilderDetails",
      "resource": "BuilderDetails",
      "required": [
        "BuilderID",
        "BuilderDetails",
        "Name"
      ],
      "properties": {
        "BuilderID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        },
        "BuilderDetails": {
          "x-nullable": false,
          "type": "string",
          "length": 707
        },
        "Name": {
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "Address": {
          "type": "string",
          "length": 450
        },
        "ProvinceID": {
          "x-precision": 10,
          "type": "integer"
        },
        "City": {
          "type": "string",
          "length": 100
        },
        "PostalCode": {
          "type": "string",
          "length": 7
        },
        "EmailAddress": {
          "type": "string",
          "length": 450
        },
        "BusinessPhoneNum": {
          "type": "string",
          "length": 15
        },
        "CellPhoneNum": {
          "type": "string",
          "length": 15
        },
        "FaxNum": {
          "type": "string",
          "length": 15
        },
        "PreferredCommunicationMethodID": {
          "x-precision": 10,
          "type": "integer"
        },
        "ContactName": {
          "type": "string",
          "length": 100
        },
        "Province": {
          "type": "string",
          "length": 50
        },
        "PreferredCommunicationMethod": {
          "x-original-name": "Preferred Communication Method",
          "type": "string",
          "length": 50
        }
      }
    },
    "CdiNoticeOfClaimDetail": {
      "x-table": "dbo.CDINoticeOfClaimDetails",
      "resource": "CdiNoticeOfClaimDetails",
      "required": [
        "NoticeOfClaimID"
      ],
      "properties": {
        "ID": {
          "x-key": true,
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "NoticeOfClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "AmountClaimed": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Details": {
          "type": "string",
          "length": 2000
        },
        "PurchasePrice": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AddressOfProperty": {
          "type": "string",
          "length": 2000
        },
        "NameOfSeller": {
          "type": "string",
          "length": 100
        },
        "SellerSolicitorName": {
          "type": "string",
          "length": 100
        },
        "BuyerName": {
          "type": "string",
          "length": 100
        },
        "BuyerSolicitorName": {
          "type": "string",
          "length": 100
        },
        "PurchaseAndSaleAgreeementFileId": {
          "x-precision": 10,
          "type": "integer"
        },
        "InitialDepositDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "SecondDepositDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "ThirdDepositDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "OtherDepositDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "InitialDepositAmount": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "SecondDepositAmount": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ThirdDepositAmount": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "OtherDepositAmount": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "BrokerageAccountBank": {
          "type": "string",
          "length": 100
        },
        "BrokerageAccountNumber": {
          "type": "string",
          "length": 100
        },
        "BrokerageAccountAddress": {
          "type": "string",
          "length": 100
        },
        "BrokerageFailure": {
          "type": "string",
          "length": 100
        },
        "DateOfDiscoveryOfLoss": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "DiscoveryOfLossDetails": {
          "type": "string",
          "length": 2000
        },
        "PoliceReported": {
          "x-nullable": false,
          "type": "boolean"
        },
        "PoliceReportedDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "PoliceOfficerName": {
          "type": "string",
          "length": 100
        },
        "PoliceOfficerPhoneNumber": {
          "type": "string",
          "length": 100
        },
        "ClaimentEffortToRecoverDeposit": {
          "type": "string",
          "length": 2000
        },
        "CounterClaimExists": {
          "x-nullable": false,
          "type": "boolean"
        },
        "Agree": {
          "x-nullable": false,
          "type": "boolean"
        }
      }
    },
    "CdpClaimDetail": {
      "x-table": "dbo.CDPClaimDetails",
      "resource": "CdpClaimDetails",
      "required": [
        "ClaimID"
      ],
      "properties": {
        "Claim": {
          "type": "object",
          "$ref": "#/definitions/Claim"
        },
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-foreignKey": {
            "parentTable": "Claims",
            "parentEntityType": "Claim",
            "type": "Claim",
            "principalKey": "ClaimID",
            "name": "Claim",
            "textProperty": "ClaimNo",
            "primaryKey": "ID",
            "navigationProperty": "CdpClaimDetails"
          }
        },
        "Parameter": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "StatusOfFundsID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "CdpClaimDetails"
          }
        },
        "TransactionClosingDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "Verified": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "ClaimedAmount": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustedGrossClaim": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpectedPayout": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ValueOfTransaction": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "PreconstructionDeal": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "Comments": {
          "type": "string",
          "length": 2000
        },
        "ClaimCalculation": {
          "type": "string",
          "length": 1000
        },
        "Claim1": {
          "type": "object",
          "$ref": "#/definitions/Claim"
        },
        "CDFileID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Claims",
            "parentEntityType": "Claim",
            "type": "Claim",
            "principalKey": "ClaimID",
            "name": "Claim1",
            "textProperty": "ClaimNo",
            "primaryKey": "ID",
            "navigationProperty": "CdpClaimDetails1"
          }
        },
        "ClaimVerification": {
          "type": "string",
          "length": 500
        },
        "TrustAccountBank": {
          "type": "string",
          "length": 1000
        },
        "PartialIncluded": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "AgreementDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "InitialDepositAmount": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "InitialDepositDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "SecondDepositAmount": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "SecondDepositDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "ThirdDepositAmount": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ThirdDepositDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "BrokerFailureReason": {
          "type": "string",
          "length": 2048
        },
        "RecoveryEfforts": {
          "type": "string",
          "length": 2048
        },
        "TrustAccountNum": {
          "type": "string",
          "length": 25
        },
        "TrustAccountAddress": {
          "type": "string",
          "length": 450
        },
        "AmountClaimed": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Details": {
          "type": "string",
          "length": 2000
        },
        "PurchasePrice": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AddressOfProperty": {
          "type": "string",
          "length": 2000
        },
        "NameOfSeller": {
          "type": "string",
          "length": 100
        },
        "SellerSolicitorName": {
          "type": "string",
          "length": 100
        },
        "BuyerName": {
          "type": "string",
          "length": 100
        },
        "BuyerSolicitorName": {
          "type": "string",
          "length": 100
        },
        "PurchaseAndSaleAgreeementFileId": {
          "x-precision": 10,
          "type": "integer"
        },
        "OtherDepositDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "OtherDepositAmount": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "BrokerageAccountBank": {
          "type": "string",
          "length": 100
        },
        "BrokerageAccountNumber": {
          "type": "string",
          "length": 100
        },
        "BrokerageAccountAddress": {
          "type": "string",
          "length": 100
        },
        "BrokerageFailure": {
          "type": "string",
          "length": 100
        },
        "DateOfDiscoveryOfLoss": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "DiscoveryOfLossDetails": {
          "type": "string",
          "length": 2000
        },
        "PoliceReported": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "PoliceReportedDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "PoliceOfficerName": {
          "type": "string",
          "length": 100
        },
        "PoliceOfficerPhoneNumber": {
          "type": "string",
          "length": 100
        },
        "ClaimentEffortToRecoverDeposit": {
          "type": "string",
          "length": 2000
        },
        "CounterClaimExists": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "Agree": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "SharedCommission": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "ClaimedAmount1": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "PaymentsOwing": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "ByInsurerOrReceiver": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "ClaimantStatus": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "PaymentMade": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "ReasonNoPayment": {
          "type": "string",
          "length": 500
        },
        "CoverageCap": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "Parameter1": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "ByInsurerOrReceiverID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter1",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "CdpClaimDetails1"
          }
        },
        "Claim2": {
          "type": "object",
          "$ref": "#/definitions/Claim"
        },
        "RelatedClaimID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Claims",
            "parentEntityType": "Claim",
            "type": "Claim",
            "principalKey": "ClaimID",
            "name": "Claim2",
            "textProperty": "ClaimNo",
            "primaryKey": "ID",
            "navigationProperty": "CdpClaimDetails2"
          }
        },
        "AmountClaimedDetails": {
          "type": "string",
          "length": 2000
        },
        "CommissionCalculations": {
          "type": "string",
          "length": 2000
        },
        "InitialStatus": {
          "type": "string",
          "length": 150
        },
        "CurrentDevelopments": {
          "type": "string",
          "length": 2000
        },
        "Resolution": {
          "type": "string",
          "length": 2000
        },
        "OtherParties": {
          "type": "string",
          "length": 500
        },
        "Miscellaneous": {
          "type": "string",
          "length": 2000
        }
      }
    },
    "CheckInvoicesForError": {
      "x-view": "sp",
      "x-table": "dbo.CheckInvoicesForErrors",
      "x-parameters": [
        {
          "name": "FirmID",
          "type": "integer"
        }
      ],
      "resource": "CheckInvoicesForErrors",
      "properties": {}
    },
    "CheckSystemNotice": {
      "x-view": "sp",
      "x-table": "dbo.CheckSystemNotice",
      "x-parameters": [
        {
          "name": "UserID",
          "type": "string",
          "size": 900
        }
      ],
      "resource": "CheckSystemNotices",
      "required": [],
      "properties": {
        "SystemNotice": {
          "x-computed": true,
          "type": "string",
          "length": 4000,
          "x-key": true,
          "x-virtual": true
        }
      }
    },
    "CheckTransactionLimit": {
      "x-view": "sp",
      "x-table": "dbo.CheckTransactionLimit",
      "x-parameters": [
        {
          "name": "UserID",
          "type": "string",
          "size": 900
        },
        {
          "name": "IncurredCategoryID",
          "type": "integer"
        },
        {
          "name": "IncurredTypeID",
          "type": "integer"
        },
        {
          "name": "ProgramID",
          "type": "integer"
        }
      ],
      "resource": "CheckTransactionLimits",
      "required": [],
      "properties": {
        "ApprovalLimit": {
          "x-computed": true,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        }
      }
    },
    "Claim": {
      "x-table": "dbo.Claims",
      "resource": "Claims",
      "required": [
        "ClaimNo",
        "ProgramID",
        "ContractYearID",
        "ClaimStatusID"
      ],
      "properties": {
        "ID": {
          "x-key": true,
          "x-default-sql": "(newid())",
          "x-nullable": false,
          "type": "string",
          "format": "uuid"
        },
        "ClaimID": {
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-navigation": [
            {
              "inversePropertyName": "Claim",
              "name": "Diaries",
              "type": "Diary"
            },
            {
              "inversePropertyName": "Claim",
              "name": "Claimants",
              "type": "Claimant"
            },
            {
              "inversePropertyName": "Claim",
              "name": "Experts",
              "type": "Expert"
            },
            {
              "inversePropertyName": "Claim",
              "name": "ErrorLogs",
              "type": "ErrorLog"
            },
            {
              "inversePropertyName": "Claim",
              "name": "Trades",
              "type": "Trade"
            },
            {
              "inversePropertyName": "Claim",
              "name": "Notes",
              "type": "Note"
            },
            {
              "inversePropertyName": "Claim",
              "name": "ClaimStatusHistories",
              "type": "ClaimStatusHistory"
            },
            {
              "inversePropertyName": "Claim",
              "name": "Transactions",
              "type": "Transaction"
            },
            {
              "inversePropertyName": "Claim",
              "name": "ClaimReports",
              "type": "ClaimReport"
            },
            {
              "inversePropertyName": "Claim",
              "name": "NoticeOfClaims",
              "type": "NoticeOfClaim"
            },
            {
              "inversePropertyName": "Claim",
              "name": "Insureds",
              "type": "Insured"
            },
            {
              "inversePropertyName": "Claim1",
              "name": "Claims1",
              "type": "Claim"
            },
            {
              "inversePropertyName": "Claim",
              "name": "CdpClaimDetails",
              "type": "CdpClaimDetail"
            },
            {
              "inversePropertyName": "Claim1",
              "name": "CdpClaimDetails1",
              "type": "CdpClaimDetail"
            },
            {
              "inversePropertyName": "Claim2",
              "name": "CdpClaimDetails2",
              "type": "CdpClaimDetail"
            },
            {
              "inversePropertyName": "Claim",
              "name": "ClaimLitigationDates",
              "type": "ClaimLitigationDate"
            },
            {
              "inversePropertyName": "Claim",
              "name": "CrossReferencedClaims",
              "type": "CrossReferencedClaim"
            },
            {
              "inversePropertyName": "Claim1",
              "name": "CrossReferencedClaims1",
              "type": "CrossReferencedClaim"
            },
            {
              "inversePropertyName": "Claim",
              "name": "ClaimFileReportings",
              "type": "ClaimFileReporting"
            },
            {
              "inversePropertyName": "Claim",
              "name": "CostAwards",
              "type": "CostAward"
            },
            {
              "inversePropertyName": "Claim",
              "name": "SentLetters",
              "type": "SentLetter"
            },
            {
              "inversePropertyName": "Claim",
              "name": "EoClaimDetails",
              "type": "EoClaimDetail"
            },
            {
              "inversePropertyName": "Claim",
              "name": "AuditTrails",
              "type": "AuditTrail"
            },
            {
              "inversePropertyName": "Claim",
              "name": "CourtDates",
              "type": "CourtDate"
            },
            {
              "inversePropertyName": "Claim",
              "name": "OtherParties",
              "type": "OtherParty"
            },
            {
              "inversePropertyName": "Claim",
              "name": "LossCauseTags",
              "type": "LossCauseTag"
            },
            {
              "inversePropertyName": "Claim",
              "name": "ServiceProviderClaimPreferences",
              "type": "ServiceProviderClaimPreference"
            },
            {
              "inversePropertyName": "Claim",
              "name": "Appointments",
              "type": "Appointment"
            }
          ]
        },
        "ClaimNo": {
          "x-nullable": false,
          "type": "string",
          "length": 20
        },
        "AdjusterClaimNo": {
          "type": "string",
          "length": 50
        },
        "Parameter": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "ProgramID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Claims"
          }
        },
        "Parameter1": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "ContractYearID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter1",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Claims1"
          }
        },
        "Parameter2": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "ClaimStatusID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter2",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Claims2"
          }
        },
        "ServiceProvider": {
          "type": "object",
          "$ref": "#/definitions/ServiceProvider"
        },
        "AdjusterID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "ServiceProviders",
            "parentEntityType": "ServiceProvider",
            "type": "ServiceProvider",
            "principalKey": "ServiceProviderID",
            "name": "ServiceProvider",
            "textProperty": "Name",
            "primaryKey": "ID",
            "navigationProperty": "Claims"
          }
        },
        "ServiceProvider1": {
          "type": "object",
          "$ref": "#/definitions/ServiceProvider"
        },
        "DefenseCounselID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "ServiceProviders",
            "parentEntityType": "ServiceProvider",
            "type": "ServiceProvider",
            "principalKey": "ServiceProviderID",
            "name": "ServiceProvider1",
            "textProperty": "Name",
            "primaryKey": "ID",
            "navigationProperty": "Claims1"
          }
        },
        "ServiceProvider2": {
          "type": "object",
          "$ref": "#/definitions/ServiceProvider"
        },
        "CoverageCounselID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "ServiceProviders",
            "parentEntityType": "ServiceProvider",
            "type": "ServiceProvider",
            "principalKey": "ServiceProviderID",
            "name": "ServiceProvider2",
            "textProperty": "Name",
            "primaryKey": "ID",
            "navigationProperty": "Claims2"
          }
        },
        "ServiceProvider3": {
          "type": "object",
          "$ref": "#/definitions/ServiceProvider"
        },
        "FileHandlerID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "ServiceProviders",
            "parentEntityType": "ServiceProvider",
            "type": "ServiceProvider",
            "principalKey": "ServiceProviderID",
            "name": "ServiceProvider3",
            "textProperty": "Name",
            "primaryKey": "ID",
            "navigationProperty": "Claims3"
          }
        },
        "Brokerage": {
          "type": "object",
          "$ref": "#/definitions/Brokerage"
        },
        "BrokerageID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Brokerages",
            "parentEntityType": "Brokerage",
            "type": "Brokerage",
            "principalKey": "BrokerageID",
            "name": "Brokerage",
            "textProperty": "Name",
            "navigationProperty": "Claims"
          }
        },
        "Parameter3": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "BrokerageTransactionRoleID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter3",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Claims3"
          }
        },
        "EntryDate": {
          "x-default-sql": "(getdate())",
          "x-nullable": false,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "ClaimDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "AgreementDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "ReportDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "ClaimPaidDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "LapseDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "ServedDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "CoverageIssue": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "ClassAction": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "NotYetReported": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "Parameter4": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "BrokerageOnly": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter4",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Claims4"
          }
        },
        "ClaimDescription": {
          "type": "string",
          "length": 1000
        },
        "Parameter5": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "LossCauseID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter5",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Claims5"
          }
        },
        "SurveyOnClose": {
          "x-default-sql": "((1))",
          "x-nullable": false,
          "type": "boolean"
        },
        "Occurrence": {
          "type": "object",
          "$ref": "#/definitions/Occurrence"
        },
        "OccurrenceID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Occurrences",
            "parentEntityType": "Occurrence",
            "type": "Occurrence",
            "principalKey": "OccurrenceID",
            "name": "Occurrence",
            "textProperty": "OccurrenceNo",
            "primaryKey": "ID",
            "navigationProperty": "Claims"
          }
        },
        "CloseDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "ServiceProvider4": {
          "type": "object",
          "$ref": "#/definitions/ServiceProvider"
        },
        "OriginalFileHandlerID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "ServiceProviders",
            "parentEntityType": "ServiceProvider",
            "type": "ServiceProvider",
            "principalKey": "ServiceProviderID",
            "name": "ServiceProvider4",
            "textProperty": "Name",
            "primaryKey": "ID",
            "navigationProperty": "Claims4"
          }
        },
        "CounselFileNo": {
          "type": "string",
          "length": 50
        },
        "Parameter6": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "ReservationOfRightsID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter6",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Claims6"
          }
        },
        "Parameter7": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "Deductible": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter7",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Claims7"
          }
        },
        "ReservationOfRightsOther": {
          "type": "string",
          "length": 255
        },
        "Parameter8": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "PolicyID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter8",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Claims8"
          }
        },
        "ReportingDays": {
          "x-default-sql": "((90))",
          "x-precision": 10,
          "type": "integer"
        },
        "ServiceProvider5": {
          "type": "object",
          "$ref": "#/definitions/ServiceProvider"
        },
        "MediatorID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "ServiceProviders",
            "parentEntityType": "ServiceProvider",
            "type": "ServiceProvider",
            "principalKey": "ServiceProviderID",
            "name": "ServiceProvider5",
            "textProperty": "Name",
            "primaryKey": "ID",
            "navigationProperty": "Claims5"
          }
        },
        "Liability": {
          "type": "string",
          "length": 512
        },
        "Apportionment": {
          "type": "string",
          "length": 512
        },
        "RealDamages": {
          "type": "string",
          "length": 255
        },
        "LossPotential": {
          "type": "string",
          "length": 255
        },
        "CoverageIssues": {
          "type": "string",
          "length": 255
        },
        "CurrentPlan": {
          "type": "string",
          "length": 255
        },
        "AmountClaimed": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ReservationOfRightsDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "MasterFile": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "Parameter9": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "ClaimTypeID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter9",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Claims9"
          }
        },
        "SurveySent": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "Claimant": {
          "type": "object",
          "$ref": "#/definitions/Claimant"
        },
        "ClaimantID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Claimants",
            "parentEntityType": "Claimant",
            "type": "Claimant",
            "principalKey": "ClaimantID",
            "name": "Claimant",
            "textProperty": "Name",
            "primaryKey": "ID",
            "navigationProperty": "Claims"
          }
        },
        "Claim1": {
          "type": "object",
          "$ref": "#/definitions/Claim"
        },
        "MasterFileID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Claims",
            "parentEntityType": "Claim",
            "type": "Claim",
            "principalKey": "ClaimID",
            "name": "Claim1",
            "textProperty": "ClaimNo",
            "primaryKey": "ID",
            "navigationProperty": "Claims1"
          }
        },
        "Parameter10": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "NotYetReportedByID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter10",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Claims10"
          }
        },
        "ClaimDetails": {
          "type": "string"
        },
        "Diaries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Diary"
          }
        },
        "Claimants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Claimant"
          }
        },
        "Experts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Expert"
          }
        },
        "ErrorLogs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorLog"
          }
        },
        "Trades": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Trade"
          }
        },
        "Notes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Note"
          }
        },
        "ClaimStatusHistories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimStatusHistory"
          }
        },
        "Transactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Transaction"
          }
        },
        "ClaimReports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimReport"
          }
        },
        "NoticeOfClaims": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NoticeOfClaim"
          }
        },
        "Insureds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Insured"
          }
        },
        "Claims": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Claim"
          }
        },
        "CdpClaimDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CdpClaimDetail"
          }
        },
        "ClaimLitigationDates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimLitigationDate"
          }
        },
        "CrossReferencedClaims": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CrossReferencedClaim"
          }
        },
        "ClaimFileReportings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimFileReporting"
          }
        },
        "CostAwards": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CostAward"
          }
        },
        "SentLetters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SentLetter"
          }
        },
        "EoClaimDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EoClaimDetail"
          }
        },
        "AuditTrails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuditTrail"
          }
        },
        "CourtDates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CourtDate"
          }
        },
        "OtherParties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OtherParty"
          }
        },
        "LossCauseTags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LossCauseTag"
          }
        },
        "ServiceProviderClaimPreferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceProviderClaimPreference"
          }
        },
        "Appointments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Appointment"
          }
        }
      }
    },
    "ClaimActivityLog": {
      "x-view": "sp",
      "x-table": "dbo.ClaimActivityLog",
      "x-parameters": [
        {
          "name": "ClaimID",
          "type": "integer"
        },
        {
          "name": "UserID",
          "type": "string",
          "size": 900
        }
      ],
      "resource": "ClaimActivityLogs",
      "required": [
        "ID",
        "NoteID",
        "ClaimID",
        "EntryDate",
        "Subject",
        "Sticky",
        "LargeLoss",
        "LogType",
        "Confidential",
        "AbeyanceDate"
      ],
      "properties": {
        "ID": {
          "x-nullable": false,
          "type": "string",
          "format": "uuid",
          "x-key": true,
          "x-virtual": true
        },
        "NoteID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "EntryDate": {
          "x-nullable": false,
          "x-precision": 23,
          "x-scale": 3,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "Subject": {
          "x-nullable": false,
          "type": "string",
          "length": 510
        },
        "NoteType": {
          "type": "string",
          "length": 100
        },
        "Sticky": {
          "x-nullable": false,
          "x-precision": 1,
          "type": "boolean"
        },
        "LargeLoss": {
          "x-nullable": false,
          "x-precision": 1,
          "type": "boolean"
        },
        "Name": {
          "type": "string",
          "length": 900
        },
        "LogType": {
          "x-nullable": false,
          "type": "string",
          "length": 5
        },
        "Details": {
          "type": "string"
        },
        "Confidential": {
          "x-nullable": false,
          "x-precision": 1,
          "type": "boolean"
        },
        "AbeyanceDate": {
          "x-nullable": false,
          "x-precision": 23,
          "x-scale": 3,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        }
      }
    },
    "ClaimBasePrincipal": {
      "x-view": true,
      "x-table": "dbo.ClaimBasePrincipals",
      "resource": "ClaimBasePrincipals",
      "required": [
        "ClaimID"
      ],
      "properties": {
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        },
        "Claimants": {
          "type": "string"
        },
        "Insureds": {
          "type": "string"
        },
        "InsuredRegNo": {
          "type": "string"
        },
        "Address": {
          "type": "string"
        },
        "Brokerage1": {
          "type": "string",
          "length": 100
        },
        "Broker1": {
          "type": "string",
          "length": 100
        },
        "Builder1": {
          "type": "string",
          "length": 100
        }
      }
    },
    "ClaimClaimant": {
      "x-view": true,
      "x-table": "dbo.ClaimClaimants",
      "resource": "ClaimClaimants",
      "required": [
        "ID",
        "ClaimantID",
        "ClaimantOrder"
      ],
      "properties": {
        "ID": {
          "x-nullable": false,
          "type": "string",
          "format": "uuid",
          "x-key": true,
          "x-virtual": true
        },
        "ClaimID": {
          "x-precision": 10,
          "type": "integer"
        },
        "ClaimantID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "length": 100
        },
        "Address": {
          "type": "string",
          "length": 450
        },
        "ProvinceID": {
          "x-precision": 10,
          "type": "integer"
        },
        "City": {
          "type": "string",
          "length": 100
        },
        "PostalCode": {
          "type": "string",
          "length": 7
        },
        "EmailAddress": {
          "type": "string",
          "length": 450
        },
        "BusinessPhoneNum": {
          "type": "string",
          "length": 25
        },
        "CellPhoneNum": {
          "type": "string",
          "length": 25
        },
        "FaxNum": {
          "type": "string",
          "length": 25
        },
        "PreferredCommunicationMethod": {
          "x-precision": 10,
          "type": "integer"
        },
        "ClaimantOrder": {
          "x-nullable": false,
          "x-precision": 5,
          "type": "integer",
          "format": "int16"
        },
        "ClaimantSolicitorID": {
          "x-precision": 10,
          "type": "integer"
        },
        "RegistrantID": {
          "x-precision": 10,
          "type": "integer"
        },
        "RegistrantNo": {
          "type": "string",
          "length": 7
        },
        "RegistrationExpiryDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "YearsOfExperience": {
          "x-precision": 5,
          "type": "integer",
          "format": "int16"
        },
        "BrokerageID": {
          "x-precision": 10,
          "type": "integer"
        },
        "TradeRecordSheetID": {
          "x-precision": 10,
          "type": "integer"
        },
        "AgreementofSaleID": {
          "x-precision": 10,
          "type": "integer"
        },
        "CommissionInvoiceID": {
          "x-precision": 10,
          "type": "integer"
        },
        "StatementOfAdjustmentsID": {
          "x-precision": 10,
          "type": "integer"
        },
        "BuilderAgreementsID": {
          "x-precision": 10,
          "type": "integer"
        },
        "SplitCommissionChequeID": {
          "x-precision": 10,
          "type": "integer"
        },
        "NSFCommissionChequeID": {
          "x-precision": 10,
          "type": "integer"
        },
        "NoticeOfClaimID": {
          "x-precision": 10,
          "type": "integer"
        },
        "ClaimantSolicitor": {
          "type": "string",
          "length": 100
        },
        "SolicitorFirm": {
          "type": "string",
          "length": 100
        },
        "SolicitorEmail": {
          "type": "string",
          "length": 450
        },
        "TransactionRole": {
          "type": "string"
        }
      }
    },
    "ClaimCurrentPayment": {
      "x-view": true,
      "x-table": "dbo.ClaimCurrentPayments",
      "resource": "ClaimCurrentPayments",
      "required": [
        "ClaimID",
        "IncurredTypeID",
        "IncurredType"
      ],
      "properties": {
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        },
        "IncurredTypeID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "TotalPayment": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "IncurredType": {
          "x-nullable": false,
          "type": "string",
          "length": 50
        }
      }
    },
    "ClaimCurrentReserf": {
      "x-view": true,
      "x-table": "dbo.ClaimCurrentReserves",
      "resource": "ClaimCurrentReserves",
      "required": [
        "ClaimID",
        "IncurredTypeID",
        "IncurredType"
      ],
      "properties": {
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        },
        "IncurredTypeID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "TotalReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "IncurredType": {
          "x-nullable": false,
          "type": "string",
          "length": 50
        }
      }
    },
    "ClaimDetailsBordereau": {
      "x-view": true,
      "x-table": "dbo.ClaimDetailsBordereau",
      "resource": "ClaimDetailsBordereaus",
      "required": [
        "ClaimID",
        "ClaimNo",
        "ProgramID",
        "ProgramName",
        "ContractYearID",
        "ContractYear",
        "ClaimStatusID",
        "ClaimStatus",
        "EntryDate",
        "CoverageIssue",
        "NotYetReported",
        "ClassAction",
        "ClaimorIncident"
      ],
      "properties": {
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        },
        "ClaimNo": {
          "x-nullable": false,
          "type": "string",
          "length": 20
        },
        "AdjusterClaimNo": {
          "type": "string",
          "length": 50
        },
        "ProgramID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "ProgramName": {
          "x-original-name": "Program Name",
          "x-nullable": false,
          "type": "string",
          "length": 50
        },
        "ContractYearID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "ContractYear": {
          "x-original-name": "Contract Year",
          "x-nullable": false,
          "type": "string",
          "length": 50
        },
        "ClaimStatusID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "ClaimStatus": {
          "x-original-name": "Claim Status",
          "x-nullable": false,
          "type": "string",
          "length": 50
        },
        "StatusAbbrev": {
          "x-original-name": "Status Abbrev",
          "type": "string",
          "length": 6
        },
        "Adjuster": {
          "type": "string",
          "length": 100
        },
        "AdjustingFirmID": {
          "x-precision": 10,
          "type": "integer"
        },
        "DefenseCounsel": {
          "x-original-name": "Defense Counsel",
          "type": "string",
          "length": 100
        },
        "CounselFileNo": {
          "type": "string",
          "length": 50
        },
        "CoverageCounsel": {
          "x-original-name": "Coverage Counsel",
          "type": "string",
          "length": 100
        },
        "FileHandler": {
          "x-original-name": "File Handler",
          "type": "string",
          "length": 100
        },
        "OriginalFileHandler": {
          "x-original-name": "Original File Handler",
          "type": "string",
          "length": 100
        },
        "Brokerage": {
          "type": "string",
          "length": 100
        },
        "BrokerageTransactionRole": {
          "x-original-name": "Brokerage Transaction Role",
          "type": "string",
          "length": 50
        },
        "CloseDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "EntryDate": {
          "x-nullable": false,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "ClaimDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "AgreementDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "ReportDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "ClaimPaidDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "LapseDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "ServedDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "BrokerageOnly": {
          "x-original-name": "Brokerage Only ?",
          "type": "string",
          "length": 50
        },
        "LossCause": {
          "x-original-name": "Loss Cause",
          "type": "string",
          "length": 50
        },
        "OccurrenceID": {
          "x-precision": 10,
          "type": "integer"
        },
        "OccurrenceNo": {
          "type": "string",
          "length": 15
        },
        "ValueOfTransaction": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpectedPayout": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustedGrossClaim": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Insureds": {
          "type": "string"
        },
        "InsuredRegNo": {
          "type": "string"
        },
        "Claimants": {
          "type": "string"
        },
        "ClaimantSolicitors": {
          "type": "string"
        },
        "ClaimantSolicitorFirms": {
          "type": "string"
        },
        "Address": {
          "type": "string"
        },
        "CoverageIssue": {
          "x-original-name": "Coverage Issue",
          "x-nullable": false,
          "type": "string",
          "length": 3
        },
        "NotYetReported": {
          "x-original-name": "Not Yet Reported",
          "x-nullable": false,
          "type": "string",
          "length": 3
        },
        "ClassAction": {
          "x-original-name": "Class Action",
          "x-nullable": false,
          "type": "string",
          "length": 3
        },
        "OpenOrClosed": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AmountClaimed": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Brokerage1": {
          "type": "string",
          "length": 100
        },
        "Broker1": {
          "type": "string",
          "length": 100
        },
        "ClaimType": {
          "type": "string",
          "length": 50
        },
        "DefenseCounselFirmID": {
          "x-precision": 10,
          "type": "integer"
        },
        "CoverageCounselFirmID": {
          "x-precision": 10,
          "type": "integer"
        },
        "LitigationType": {
          "type": "string",
          "length": 50
        },
        "ClaimDescription": {
          "type": "string",
          "length": 1000
        },
        "ClaimorIncident": {
          "x-original-name": "Claim or Incident",
          "x-nullable": false,
          "type": "string",
          "length": 8
        },
        "ApplicableParty": {
          "type": "string",
          "length": 50
        },
        "AvgYearsOfExperience": {
          "x-precision": 10,
          "type": "integer"
        },
        "RegistrantEmailAddresses": {
          "type": "string"
        },
        "ClaimantEmails": {
          "type": "string"
        },
        "UrbanOrRural": {
          "type": "boolean"
        },
        "ConvertedToLitigation": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "ClaimInitiation": {
          "type": "string",
          "length": 50
        },
        "EndOfDeal": {
          "type": "string",
          "length": 50
        },
        "DenialCode": {
          "type": "string",
          "length": 50
        },
        "LossCauseTags": {
          "type": "string"
        },
        "ClaimConvertedTo": {
          "type": "string",
          "length": 50
        },
        "UrbanOrRuralDesc": {
          "type": "string",
          "length": 50
        },
        "StatusOfFunds": {
          "type": "string",
          "length": 50
        },
        "MasterFile": {
          "type": "string",
          "length": 20
        },
        "MasterBrokerage": {
          "type": "string",
          "length": 100
        },
        "OccurrenceBrokerage": {
          "type": "string",
          "length": 100
        }
      }
    },
    "ClaimDetailsReport": {
      "x-view": "sp",
      "x-table": "dbo.ClaimDetailsReport",
      "x-parameters": [
        {
          "name": "StartDate",
          "type": "string",
          "format": "date-time",
          "size": 8
        },
        {
          "name": "EndDate",
          "type": "string",
          "format": "date-time",
          "size": 8
        },
        {
          "name": "ClaimStatusID",
          "type": "integer"
        }
      ],
      "resource": "ClaimDetailsReports",
      "required": [
        "ClaimNo",
        "ClaimStatusID"
      ],
      "properties": {
        "ClaimNo": {
          "x-nullable": false,
          "type": "string",
          "length": 40,
          "x-key": true,
          "x-virtual": true
        },
        "DateReported": {
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "ClaimStatus": {
          "x-original-name": "Claim Status",
          "type": "string",
          "length": 12
        },
        "Claimants": {
          "x-computed": true,
          "type": "string"
        },
        "BrokerageAtTimeOfLoss": {
          "x-original-name": "Brokerage At Time Of Loss",
          "x-computed": true,
          "type": "string",
          "length": 200
        },
        "AgencyType": {
          "x-original-name": "Agency Type",
          "x-computed": true,
          "type": "string",
          "length": 100
        },
        "ClaimType": {
          "x-original-name": "Claim Type",
          "type": "string",
          "length": 100
        },
        "Allegation": {
          "type": "string",
          "length": 12
        },
        "LossCause": {
          "x-original-name": "Loss Cause",
          "type": "string",
          "length": 12
        },
        "ClaimDescription": {
          "type": "string",
          "length": 2000
        },
        "Closed": {
          "x-computed": true,
          "x-nullable": false,
          "type": "string",
          "length": 1
        },
        "ClaimStatusID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        }
      }
    },
    "ClaimDiaryDetail": {
      "x-view": true,
      "x-table": "dbo.ClaimDiaryDetails",
      "resource": "ClaimDiaryDetails",
      "required": [
        "DiaryStatus",
        "DiaryID",
        "ID",
        "ClaimID",
        "EntryDate",
        "Subject",
        "AbeyanceDate",
        "Recipients"
      ],
      "properties": {
        "DiaryStatus": {
          "x-original-name": "Diary Status",
          "x-nullable": false,
          "type": "string",
          "length": 50,
          "x-key": true,
          "x-virtual": true
        },
        "DiaryID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "ID": {
          "x-nullable": false,
          "type": "string",
          "format": "uuid"
        },
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "EntryDate": {
          "x-nullable": false,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "Subject": {
          "x-nullable": false,
          "type": "string",
          "length": 255
        },
        "AbeyanceDate": {
          "x-nullable": false,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "Recipients": {
          "x-nullable": false,
          "type": "string",
          "length": 2000
        },
        "EnteredBy": {
          "type": "string",
          "length": 450
        }
      }
    },
    "ClaimEmailAddress": {
      "x-view": "sp",
      "x-table": "dbo.ClaimEmailAddresses",
      "x-parameters": [
        {
          "name": "ClaimID",
          "type": "integer"
        }
      ],
      "resource": "ClaimEmailAddresses",
      "required": [
        "ClaimID"
      ],
      "properties": {
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        },
        "EmailAddress": {
          "type": "string",
          "length": 900
        }
      }
    },
    "ClaimExpert": {
      "x-view": true,
      "x-table": "dbo.ClaimExperts",
      "resource": "ClaimExperts",
      "required": [
        "ExpertID",
        "ClaimID",
        "DisplayOrder",
        "ServiceProviderRoleID",
        "ServiceProviderID"
      ],
      "properties": {
        "ExpertID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        },
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "DisplayOrder": {
          "x-nullable": false,
          "x-precision": 5,
          "type": "integer",
          "format": "int16"
        },
        "ServiceProviderRoleID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "ServiceProviderRole": {
          "type": "string",
          "length": 50
        },
        "ServiceProviderID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "length": 100
        },
        "Address": {
          "type": "string",
          "length": 450
        },
        "ProvinceID": {
          "x-precision": 10,
          "type": "integer"
        },
        "City": {
          "type": "string",
          "length": 100
        },
        "PostalCode": {
          "type": "string",
          "length": 7
        },
        "EmailAddress": {
          "type": "string",
          "length": 450
        },
        "BusinessPhoneNum": {
          "type": "string",
          "length": 15
        },
        "CellPhoneNum": {
          "type": "string",
          "length": 15
        },
        "FaxNum": {
          "type": "string",
          "length": 15
        },
        "Province": {
          "type": "string",
          "length": 50
        },
        "PreferredCommunicationMethodID": {
          "x-precision": 10,
          "type": "integer"
        },
        "PreferredCommunicationMethod": {
          "type": "string",
          "length": 50
        },
        "FirmName": {
          "type": "string",
          "length": 100
        }
      }
    },
    "ClaimFileHandlerAndReport": {
      "x-view": true,
      "x-table": "dbo.ClaimFileHandlerAndReports",
      "resource": "ClaimFileHandlerAndReports",
      "required": [
        "Name",
        "ClaimID",
        "ServiceProviderID"
      ],
      "properties": {
        "Initials": {
          "type": "string",
          "length": 2000
        },
        "Name": {
          "x-nullable": false,
          "type": "string",
          "length": 100,
          "x-key": true,
          "x-virtual": true
        },
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "EmailAddress": {
          "type": "string",
          "length": 450
        },
        "ServiceProviderID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        }
      }
    },
    "ClaimFileReporting": {
      "x-table": "dbo.ClaimFileReporting",
      "resource": "ClaimFileReportings",
      "required": [
        "ClaimID",
        "ServiceProviderID"
      ],
      "properties": {
        "FileReportID": {
          "x-key": true,
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "Claim": {
          "type": "object",
          "$ref": "#/definitions/Claim"
        },
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Claims",
            "parentEntityType": "Claim",
            "type": "Claim",
            "principalKey": "ClaimID",
            "name": "Claim",
            "textProperty": "ClaimNo",
            "primaryKey": "ID",
            "navigationProperty": "ClaimFileReportings"
          }
        },
        "ServiceProvider": {
          "type": "object",
          "$ref": "#/definitions/ServiceProvider"
        },
        "ServiceProviderID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "ServiceProviders",
            "parentEntityType": "ServiceProvider",
            "type": "ServiceProvider",
            "principalKey": "ServiceProviderID",
            "name": "ServiceProvider",
            "textProperty": "Name",
            "primaryKey": "ID",
            "navigationProperty": "ClaimFileReportings"
          }
        }
      }
    },
    "ClaimFileSummary": {
      "x-view": "sp",
      "x-table": "dbo.ClaimFileSummary",
      "x-parameters": [
        {
          "name": "ClaimID",
          "type": "integer"
        },
        {
          "name": "UserID",
          "type": "string",
          "size": 900
        }
      ],
      "resource": "ClaimFileSummaries",
      "required": [],
      "properties": {
        "ID": {
          "x-computed": true,
          "type": "string",
          "format": "uuid",
          "x-key": true,
          "x-virtual": true
        },
        "NoteID": {
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "ClaimID": {
          "x-computed": true,
          "x-precision": 10,
          "type": "integer"
        },
        "EntryDate": {
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 23,
          "x-scale": 3,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "Subject": {
          "x-computed": true,
          "x-nullable": false,
          "type": "string",
          "length": 12
        },
        "NoteType": {
          "x-computed": true,
          "x-nullable": false,
          "type": "string",
          "length": 12
        },
        "Sticky": {
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "LargeLoss": {
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "Name": {
          "x-computed": true,
          "x-nullable": false,
          "type": "string",
          "length": 14
        },
        "VisibleTo": {
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "LogType": {
          "x-computed": true,
          "x-nullable": false,
          "type": "string",
          "length": 12
        },
        "Details": {
          "x-computed": true,
          "type": "string"
        }
      }
    },
    "ClaimFilesByUser": {
      "x-view": "sp",
      "x-table": "dbo.ClaimFilesByUser",
      "x-parameters": [
        {
          "name": "UserID",
          "type": "string",
          "size": 900
        },
        {
          "name": "ClaimID",
          "type": "integer"
        }
      ],
      "resource": "ClaimFilesByUsers",
      "required": [
        "FileID",
        "EntryDate",
        "Subject",
        "VisibleTo",
        "LargeLoss",
        "Sticky",
        "Filename",
        "ClaimID",
        "ID",
        "Confidential"
      ],
      "properties": {
        "FileID": {
          "x-key": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-virtual": true
        },
        "EntryDate": {
          "x-nullable": false,
          "x-precision": 23,
          "x-scale": 3,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "Subject": {
          "x-nullable": false,
          "type": "string",
          "length": 510
        },
        "VisibleTo": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "UploadedById": {
          "type": "string",
          "length": 900
        },
        "FileTypeID": {
          "x-precision": 10,
          "type": "integer"
        },
        "LargeLoss": {
          "x-nullable": false,
          "x-precision": 1,
          "type": "boolean"
        },
        "Sticky": {
          "x-nullable": false,
          "x-precision": 1,
          "type": "boolean"
        },
        "Filename": {
          "x-nullable": false,
          "type": "string",
          "length": 2000
        },
        "Extension": {
          "type": "string",
          "length": 30
        },
        "Filesize": {
          "x-computed": true,
          "type": "string",
          "length": 22
        },
        "ContentType": {
          "type": "string",
          "length": 510
        },
        "UploadedBy": {
          "x-computed": true,
          "type": "string",
          "length": 200
        },
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "ID": {
          "x-nullable": false,
          "type": "string",
          "format": "uuid"
        },
        "FileType": {
          "type": "string",
          "length": 100
        },
        "Comments": {
          "type": "string"
        },
        "FileDescription": {
          "type": "string",
          "length": 510
        },
        "Confidential": {
          "x-nullable": false,
          "x-precision": 1,
          "type": "boolean"
        }
      }
    },
    "ClaimIndividualTransaction": {
      "x-view": true,
      "x-table": "dbo.ClaimIndividualTransactions",
      "resource": "ClaimIndividualTransactions",
      "required": [
        "ID",
        "TransactionID",
        "ClaimID",
        "IncurredType",
        "IncurredCategory",
        "TransactionDate",
        "EntryDate",
        "IncurredTypeID",
        "IncurredCategoryID"
      ],
      "properties": {
        "ID": {
          "x-nullable": false,
          "type": "string",
          "format": "uuid",
          "x-key": true,
          "x-virtual": true
        },
        "TransactionID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "IncurredType": {
          "x-nullable": false,
          "type": "string",
          "length": 50
        },
        "IncurredCategory": {
          "x-nullable": false,
          "type": "string",
          "length": 50
        },
        "TransactionDate": {
          "x-nullable": false,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "Amount": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "EntryDate": {
          "x-nullable": false,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "PayableTo": {
          "type": "string",
          "length": 500
        },
        "ChequeNum": {
          "type": "string",
          "length": 50
        },
        "InvoiceNum": {
          "type": "string",
          "length": 25
        },
        "Comments": {
          "type": "string",
          "length": 500
        },
        "EnteredByID": {
          "type": "string",
          "length": 450
        },
        "RelatedTransactionID": {
          "x-precision": 10,
          "type": "integer"
        },
        "Fees": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Disbursements": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Taxes": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ApplicableDeductible": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "FirmID": {
          "x-precision": 10,
          "type": "integer"
        },
        "IncurredTypeID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "IncurredCategoryID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "JournalNumber": {
          "type": "string",
          "length": 25
        },
        "VoidDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "ReserveTypeID": {
          "x-precision": 10,
          "type": "integer"
        },
        "ReserveReason": {
          "x-original-name": "Reserve Reason",
          "type": "string",
          "length": 6
        },
        "EnteredBy": {
          "x-original-name": "Entered By",
          "type": "string",
          "length": 100
        }
      }
    },
    "ClaimInsured": {
      "x-view": true,
      "x-table": "dbo.ClaimInsureds",
      "resource": "ClaimInsureds",
      "required": [
        "ClaimID",
        "ID",
        "DisplayOrder",
        "TransactionRole",
        "InsuredID",
        "BrokerageAddress",
        "PrimaryInsured"
      ],
      "properties": {
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        },
        "Name": {
          "type": "string",
          "length": 100
        },
        "RegistrantNo": {
          "type": "string",
          "length": 7
        },
        "RegistrationExpiryDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "YearsOfExperience": {
          "x-precision": 5,
          "type": "integer",
          "format": "int16"
        },
        "Address": {
          "type": "string",
          "length": 450
        },
        "ProvinceID": {
          "x-precision": 10,
          "type": "integer"
        },
        "City": {
          "type": "string",
          "length": 100
        },
        "PostalCode": {
          "type": "string",
          "length": 7
        },
        "EmailAddress": {
          "type": "string",
          "length": 450
        },
        "BusinessPhoneNum": {
          "type": "string",
          "length": 50
        },
        "CellPhoneNum": {
          "type": "string",
          "length": 50
        },
        "FaxNum": {
          "type": "string",
          "length": 50
        },
        "PreferredCommunicationMethodID": {
          "x-precision": 10,
          "type": "integer"
        },
        "BrokerageID": {
          "x-precision": 10,
          "type": "integer"
        },
        "ID": {
          "x-nullable": false,
          "type": "string",
          "format": "uuid"
        },
        "DisplayOrder": {
          "x-nullable": false,
          "x-precision": 5,
          "type": "integer",
          "format": "int16"
        },
        "TransactionRole": {
          "x-nullable": false,
          "type": "string",
          "length": 50
        },
        "Province": {
          "type": "string",
          "length": 50
        },
        "PreferredCommunicationMethod": {
          "x-original-name": "Preferred Communication Method",
          "type": "string",
          "length": 50
        },
        "InsuredID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "BrokerOfRecord": {
          "type": "string",
          "length": 100
        },
        "Brokerage": {
          "type": "string",
          "length": 100
        },
        "RegistrantID": {
          "x-precision": 10,
          "type": "integer"
        },
        "BrokerageAddress": {
          "x-nullable": false,
          "type": "string",
          "length": 1001
        },
        "BrokerageEmail": {
          "type": "string",
          "length": 450
        },
        "BrokerageContactPerson": {
          "type": "string",
          "length": 100
        },
        "BrokerageContactEmail": {
          "type": "string",
          "length": 450
        },
        "BrokerageContactPhoneNum": {
          "type": "string",
          "length": 50
        },
        "PrimaryInsured": {
          "x-nullable": false,
          "type": "string",
          "length": 7
        }
      }
    },
    "ClaimLagTimeReport": {
      "x-view": "sp",
      "x-table": "dbo.ClaimLagTimeReport",
      "x-parameters": [
        {
          "name": "StartDate",
          "type": "string",
          "format": "date-time",
          "size": 8
        },
        {
          "name": "EndDate",
          "type": "string",
          "format": "date-time",
          "size": 8
        }
      ],
      "resource": "ClaimLagTimeReports",
      "required": [
        "ClaimNo",
        "EntryDate"
      ],
      "properties": {
        "ClaimNo": {
          "x-nullable": false,
          "type": "string",
          "length": 40,
          "x-key": true,
          "x-virtual": true
        },
        "Insureds": {
          "x-computed": true,
          "type": "string"
        },
        "ClaimType": {
          "x-original-name": "Claim Type",
          "type": "string",
          "length": 100
        },
        "EntryDate": {
          "x-nullable": false,
          "x-precision": 23,
          "x-scale": 3,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "ClaimDate": {
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "ClaimLag": {
          "x-original-name": "Claim Lag",
          "x-computed": true,
          "x-precision": 10,
          "type": "integer"
        }
      }
    },
    "ClaimList": {
      "x-view": true,
      "x-table": "dbo.ClaimList",
      "resource": "ClaimLists",
      "required": [
        "CoverageIssue",
        "ClaimOrIncident",
        "FullAddress",
        "Insured1Display",
        "Insured2Display",
        "Insured3Display",
        "Claimant1Display",
        "Claimant2Display",
        "Claimant3Display",
        "NotYetReported"
      ],
      "properties": {
        "Program": {
          "type": "string",
          "length": 50
        },
        "ClaimNo": {
          "type": "string",
          "length": 20
        },
        "Address": {
          "type": "string"
        },
        "Insureds": {
          "type": "string"
        },
        "Claimants": {
          "type": "string"
        },
        "Broker": {
          "type": "string",
          "length": 100
        },
        "BrokerOfRecord": {
          "type": "string",
          "length": 100
        },
        "DefenceCounsel": {
          "type": "string",
          "length": 100
        },
        "Occurences": {
          "type": "string",
          "length": 15
        },
        "ClaimID": {
          "x-precision": 10,
          "type": "integer"
        },
        "AdjusterClaimNo": {
          "type": "string",
          "length": 50
        },
        "ProgramID": {
          "x-precision": 10,
          "type": "integer"
        },
        "AdjusterID": {
          "x-precision": 10,
          "type": "integer"
        },
        "DefenseCounselID": {
          "x-precision": 10,
          "type": "integer"
        },
        "CoverageCounselID": {
          "x-precision": 10,
          "type": "integer"
        },
        "Status": {
          "type": "string",
          "length": 50
        },
        "FilehandlerID": {
          "x-precision": 10,
          "type": "integer"
        },
        "CoverageIssue": {
          "x-nullable": false,
          "type": "boolean",
          "x-key": true,
          "x-virtual": true
        },
        "BrokerageOnly": {
          "x-precision": 10,
          "type": "integer"
        },
        "LossCauseID": {
          "x-precision": 10,
          "type": "integer"
        },
        "BrokerageID": {
          "x-precision": 10,
          "type": "integer"
        },
        "AdjusterFirmID": {
          "x-precision": 10,
          "type": "integer"
        },
        "DefenseCounselFirmID": {
          "x-precision": 10,
          "type": "integer"
        },
        "Adjuster": {
          "type": "string",
          "length": 100
        },
        "ClaimStatusID": {
          "x-precision": 10,
          "type": "integer"
        },
        "CounselFileNo": {
          "type": "string",
          "length": 50
        },
        "Insured1": {
          "type": "string",
          "length": 100
        },
        "Insured2": {
          "type": "string",
          "length": 100
        },
        "Insured3": {
          "type": "string",
          "length": 100
        },
        "Claimant1": {
          "type": "string",
          "length": 100
        },
        "Claimant2": {
          "type": "string",
          "length": 100
        },
        "Claimant3": {
          "type": "string",
          "length": 100
        },
        "TotalReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalPayment": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalRecovery": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalIncurred": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalIndemnity": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalAdjusting": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalLegal": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalExpense": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ClaimOrIncident": {
          "x-nullable": false,
          "type": "boolean"
        },
        "FullAddress": {
          "x-nullable": false,
          "type": "string",
          "length": 587
        },
        "ClaimNoDisplay": {
          "type": "string",
          "length": 83
        },
        "FullAddressDisplay": {
          "type": "string",
          "length": 596
        },
        "TotalIncurredDisplay": {
          "type": "string",
          "length": 4000
        },
        "TotalReserveDisplay": {
          "type": "string",
          "length": 4000
        },
        "TotalPaymentDisplay": {
          "type": "string",
          "length": 4000
        },
        "TotalRecoveryDisplay": {
          "type": "string",
          "length": 4000
        },
        "Insured1Display": {
          "x-nullable": false,
          "type": "string",
          "length": 114
        },
        "Insured2Display": {
          "x-nullable": false,
          "type": "string",
          "length": 111
        },
        "Insured3Display": {
          "x-nullable": false,
          "type": "string",
          "length": 111
        },
        "Claimant1Display": {
          "x-nullable": false,
          "type": "string",
          "length": 115
        },
        "Claimant2Display": {
          "x-nullable": false,
          "type": "string",
          "length": 112
        },
        "Claimant3Display": {
          "x-nullable": false,
          "type": "string",
          "length": 112
        },
        "FileHandler": {
          "type": "string",
          "length": 100
        },
        "ReportsTo": {
          "type": "string"
        },
        "NotYetReported": {
          "x-nullable": false,
          "type": "boolean"
        },
        "XRef": {
          "x-precision": 10,
          "type": "integer"
        },
        "PastIndemnityPaid": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "DefenceCounselInitials": {
          "type": "string",
          "length": 2000
        },
        "CoverageIssueWarning": {
          "type": "string",
          "length": 2
        },
        "XRefTag": {
          "type": "string",
          "length": 4
        },
        "LargeLossWarning": {
          "type": "string",
          "length": 3
        },
        "BrokerageWarning": {
          "type": "string",
          "length": 6
        },
        "DeductibleWarning": {
          "type": "string",
          "length": 3
        },
        "NotYetReportedWarning": {
          "type": "string",
          "length": 3
        },
        "FileHandlerFirm": {
          "type": "string",
          "length": 100
        },
        "ReportingDays": {
          "x-precision": 10,
          "type": "integer"
        },
        "FileHandlerEmailAddress": {
          "type": "string",
          "length": 450
        },
        "AdjusterEmailAddress": {
          "type": "string",
          "length": 450
        },
        "DefenseCounselEmailAddress": {
          "type": "string",
          "length": 450
        },
        "NoticeOfClaimRefNum": {
          "type": "string",
          "length": 15
        },
        "Claimant": {
          "type": "string",
          "length": 100
        },
        "ReportDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "AgreementDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "CloseDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "ClaimantsWithRoles": {
          "type": "string"
        },
        "ClaimantSolicitors": {
          "type": "string"
        },
        "InsuredsWithRoles": {
          "type": "string"
        },
        "OtherPartyDetails": {
          "type": "string"
        },
        "TradePrice": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "DepositAmount": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ClaimDescription": {
          "type": "string",
          "length": 1000
        },
        "Deductible": {
          "type": "string",
          "length": 50
        },
        "Liability": {
          "type": "string",
          "length": 512
        },
        "Apportionment": {
          "type": "string",
          "length": 512
        },
        "RealDamages": {
          "type": "string",
          "length": 255
        },
        "LossPotential": {
          "type": "string",
          "length": 255
        },
        "CoverageIssues": {
          "type": "string",
          "length": 255
        },
        "CurrentPlan": {
          "type": "string",
          "length": 255
        },
        "AmountClaimed": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TypeOfAction": {
          "type": "string",
          "length": 50
        },
        "Jurisdiction": {
          "type": "string",
          "length": 100
        },
        "CourtFileNumber": {
          "type": "string",
          "length": 25
        },
        "DateLitigationServed": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "Outcome": {
          "type": "string",
          "length": 50
        },
        "OffersMade": {
          "type": "string",
          "length": 250
        },
        "Discoveries": {
          "type": "string"
        },
        "Mediations": {
          "type": "string"
        },
        "Trials": {
          "type": "string"
        },
        "ServedDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "ReservationOfRightsDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "MasterFile": {
          "type": "boolean"
        },
        "Brokerage": {
          "type": "string",
          "length": 100
        },
        "FileHandlerInitials": {
          "type": "string",
          "length": 2000
        },
        "Brokerage1": {
          "type": "string",
          "length": 100
        },
        "Broker1": {
          "type": "string",
          "length": 100
        },
        "Builder1": {
          "type": "string",
          "length": 100
        },
        "ProgramManager": {
          "type": "string",
          "length": 100
        },
        "ProgramManagerID": {
          "type": "string",
          "format": "uuid"
        },
        "LastSubmittedReport": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "FileHandlerPhoneNum": {
          "type": "string",
          "length": 25
        },
        "BrokerageContactName": {
          "type": "string",
          "length": 100
        },
        "BrokerageContactPhone": {
          "type": "string",
          "length": 50
        },
        "BrokerageContactEmail": {
          "type": "string",
          "length": 450
        },
        "CostAward": {
          "type": "string",
          "length": 2
        },
        "ReportsToEmail": {
          "type": "string"
        },
        "MasterFileID": {
          "x-precision": 10,
          "type": "integer"
        },
        "MasterAdjusterFileNo": {
          "type": "string",
          "length": 50
        },
        "NoActiveDiaries": {
          "type": "string",
          "length": 4
        }
      }
    },
    "ClaimLitigationDate": {
      "x-table": "dbo.ClaimLitigationDates",
      "resource": "ClaimLitigationDates",
      "required": [
        "ClaimID",
        "LitigationDate",
        "LitigationDateTypeID"
      ],
      "properties": {
        "LitigationDateID": {
          "x-key": true,
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "Claim": {
          "type": "object",
          "$ref": "#/definitions/Claim"
        },
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Claims",
            "parentEntityType": "Claim",
            "type": "Claim",
            "principalKey": "ClaimID",
            "name": "Claim",
            "textProperty": "ClaimNo",
            "primaryKey": "ID",
            "navigationProperty": "ClaimLitigationDates"
          }
        },
        "LitigationDate": {
          "x-nullable": false,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "Parameter": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "LitigationDateTypeID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "ClaimLitigationDates"
          }
        },
        "Parameter1": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "LitigationStatusID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter1",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "ClaimLitigationDates1"
          }
        }
      }
    },
    "ClaimOtherParty": {
      "x-view": true,
      "x-table": "dbo.ClaimOtherParties",
      "resource": "ClaimOtherParties",
      "required": [
        "ClaimID",
        "OtherPartyID",
        "Name",
        "ID"
      ],
      "properties": {
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        },
        "OtherPartyID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "TransactionRole": {
          "x-original-name": "Transaction Role",
          "type": "string",
          "length": 50
        },
        "Name": {
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "Address": {
          "type": "string",
          "length": 500
        },
        "City": {
          "type": "string",
          "length": 100
        },
        "PostalCode": {
          "type": "string",
          "length": 7
        },
        "EmailAddress": {
          "type": "string",
          "length": 450
        },
        "BusinessPhoneNum": {
          "type": "string",
          "length": 15
        },
        "CellPhoneNum": {
          "type": "string",
          "length": 15
        },
        "DisplayOrder": {
          "x-precision": 5,
          "type": "integer",
          "format": "int16"
        },
        "CommunicationMethod": {
          "x-original-name": "Communication Method",
          "type": "string",
          "length": 50
        },
        "Province": {
          "type": "string",
          "length": 50
        },
        "ID": {
          "x-nullable": false,
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "ClaimPreferencesDetail": {
      "x-view": true,
      "x-table": "dbo.ClaimPreferencesDetails",
      "resource": "ClaimPreferencesDetails",
      "required": [
        "ClaimNo",
        "DateLastAccessed",
        "Name"
      ],
      "properties": {
        "ClaimNo": {
          "x-nullable": false,
          "type": "string",
          "length": 20,
          "x-key": true,
          "x-virtual": true
        },
        "DateLastAccessed": {
          "x-nullable": false,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "JsonPreference": {
          "type": "string",
          "length": 8000
        },
        "Name": {
          "x-nullable": false,
          "type": "string",
          "length": 100
        }
      }
    },
    "ClaimPrincipal": {
      "x-view": true,
      "x-table": "dbo.ClaimPrincipals",
      "resource": "ClaimPrincipals",
      "required": [
        "ClaimID"
      ],
      "properties": {
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        },
        "Claimants": {
          "type": "string"
        },
        "Insureds": {
          "type": "string"
        },
        "InsuredRegNo": {
          "type": "string"
        },
        "Address": {
          "type": "string"
        },
        "Insured1": {
          "type": "string",
          "length": 100
        },
        "Insured2": {
          "type": "string",
          "length": 100
        },
        "Insured3": {
          "type": "string",
          "length": 100
        },
        "InsuredID1": {
          "x-precision": 10,
          "type": "integer"
        },
        "InsuredID2": {
          "x-precision": 10,
          "type": "integer"
        },
        "InsuredID3": {
          "x-precision": 10,
          "type": "integer"
        },
        "Claimant1": {
          "type": "string",
          "length": 100
        },
        "Claimant2": {
          "type": "string",
          "length": 100
        },
        "Claimant3": {
          "type": "string",
          "length": 100
        },
        "FullAddress": {
          "type": "string",
          "length": 587
        },
        "FullAddress2": {
          "type": "string",
          "length": 587
        },
        "FullAddress3": {
          "type": "string",
          "length": 587
        },
        "ReportsTo": {
          "type": "string"
        },
        "ClaimantsWithRoles": {
          "type": "string"
        },
        "ClaimantSolicitors": {
          "type": "string"
        },
        "ClaimantSolicitorFirms": {
          "type": "string"
        },
        "InsuredsWithRoles": {
          "type": "string"
        },
        "OtherPartyDetails": {
          "type": "string"
        },
        "TradePrice": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "DepositAmount": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Discoveries": {
          "type": "string"
        },
        "Mediations": {
          "type": "string"
        },
        "Trials": {
          "type": "string"
        },
        "Brokerage1": {
          "type": "string",
          "length": 100
        },
        "BrokerageContactName": {
          "type": "string",
          "length": 100
        },
        "BrokerageContactPhone": {
          "type": "string",
          "length": 50
        },
        "BrokerageContactEmail": {
          "type": "string",
          "length": 450
        },
        "Broker1": {
          "type": "string",
          "length": 100
        },
        "InsuredTransactionRole1": {
          "type": "string",
          "length": 50
        },
        "InsuredTransactionRole2": {
          "type": "string",
          "length": 50
        },
        "InsuredTransactionRole3": {
          "type": "string",
          "length": 50
        },
        "Builder1": {
          "type": "string",
          "length": 100
        },
        "ProgramManager": {
          "type": "string",
          "length": 100
        },
        "ProgramManagerID": {
          "type": "string",
          "format": "uuid"
        },
        "ReportsToEmail": {
          "type": "string"
        },
        "FilehandlerID": {
          "x-precision": 10,
          "type": "integer"
        },
        "AvgYearsOfExperience": {
          "x-precision": 10,
          "type": "integer"
        },
        "RegistrantEmailAddresses": {
          "type": "string"
        },
        "ClaimantEmails": {
          "type": "string"
        },
        "LossCauseTags": {
          "type": "string"
        },
        "UrbanOrRuralDesc": {
          "type": "string",
          "length": 50
        }
      }
    },
    "ClaimRapidSearchList": {
      "x-view": true,
      "x-table": "dbo.ClaimRapidSearchList",
      "resource": "ClaimRapidSearchLists",
      "required": [
        "ClaimNo",
        "ClaimID",
        "ProgramID",
        "ClaimStatusID",
        "MasterFile",
        "ContractYearID"
      ],
      "properties": {
        "Program": {
          "type": "string",
          "length": 50
        },
        "ClaimNo": {
          "x-nullable": false,
          "type": "string",
          "length": 20,
          "x-key": true,
          "x-virtual": true
        },
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "AdjusterClaimNo": {
          "type": "string",
          "length": 50
        },
        "ProgramID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "AdjusterID": {
          "x-precision": 10,
          "type": "integer"
        },
        "DefenseCounselID": {
          "x-precision": 10,
          "type": "integer"
        },
        "CoverageCounselID": {
          "x-precision": 10,
          "type": "integer"
        },
        "FileHandlerID": {
          "x-precision": 10,
          "type": "integer"
        },
        "BrokerageOnly": {
          "x-precision": 10,
          "type": "integer"
        },
        "DefenseCounselFirmID": {
          "x-precision": 10,
          "type": "integer"
        },
        "ClaimStatusID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "CounselFileNo": {
          "type": "string",
          "length": 50
        },
        "CoverageIssues": {
          "type": "string",
          "length": 255
        },
        "MasterFile": {
          "x-nullable": false,
          "type": "boolean"
        },
        "ContractYearID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        }
      }
    },
    "ClaimReport": {
      "x-table": "dbo.ClaimReport",
      "resource": "ClaimReports",
      "required": [
        "ClaimID",
        "DateCreated"
      ],
      "properties": {
        "ClaimReportID": {
          "x-key": true,
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "Claim": {
          "type": "object",
          "$ref": "#/definitions/Claim"
        },
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Claims",
            "parentEntityType": "Claim",
            "type": "Claim",
            "principalKey": "ClaimID",
            "name": "Claim",
            "textProperty": "ClaimNo",
            "primaryKey": "ID",
            "navigationProperty": "ClaimReports"
          }
        },
        "DateCreated": {
          "x-nullable": false,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "InitialReport": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "SubmittedBy": {
          "type": "string",
          "length": 450
        },
        "Facts": {
          "type": "string"
        },
        "Coverage": {
          "type": "string"
        },
        "Liability": {
          "type": "string"
        },
        "Damages": {
          "type": "string"
        },
        "EstimatedExpenses": {
          "type": "string",
          "length": 255
        },
        "EstimatedIndemnity": {
          "type": "string",
          "length": 50
        },
        "PossibleSubrogation": {
          "type": "string",
          "length": 255
        },
        "ActionPlan": {
          "type": "string"
        },
        "DateLastModified": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "DateSubmitted": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "Incremental": {
          "x-default-sql": "((1))",
          "x-nullable": false,
          "type": "boolean"
        },
        "ExecutiveSummary": {
          "type": "string"
        },
        "Recommendations": {
          "type": "string"
        },
        "DamagesClaimed": {
          "type": "string",
          "length": 50
        },
        "Parameter": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "ClaimReportFlagID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "ClaimReports"
          }
        },
        "Firm": {
          "type": "object",
          "$ref": "#/definitions/Firm"
        },
        "HandlingFirmID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Firms",
            "parentEntityType": "Firm",
            "type": "Firm",
            "principalKey": "FirmID",
            "name": "Firm",
            "textProperty": "Name",
            "primaryKey": "ID",
            "navigationProperty": "ClaimReports"
          }
        }
      }
    },
    "ClaimReportDetail": {
      "x-view": true,
      "x-table": "dbo.ClaimReportDetails",
      "resource": "ClaimReportDetails",
      "required": [
        "ClaimReportID",
        "ClaimID",
        "DateCreated",
        "InitialReport",
        "Incremental"
      ],
      "properties": {
        "ClaimReportID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        },
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "DateCreated": {
          "x-nullable": false,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "InitialReport": {
          "x-nullable": false,
          "type": "boolean"
        },
        "SubmittedBy": {
          "type": "string",
          "length": 450
        },
        "Facts": {
          "type": "string"
        },
        "Coverage": {
          "type": "string"
        },
        "Liability": {
          "type": "string"
        },
        "Damages": {
          "type": "string"
        },
        "EstimatedExpenses": {
          "type": "string",
          "length": 255
        },
        "EstimatedIndemnity": {
          "type": "string",
          "length": 50
        },
        "PossibleSubrogation": {
          "type": "string",
          "length": 255
        },
        "ActionPlan": {
          "type": "string"
        },
        "DateLastModified": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "DateSubmitted": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "Incremental": {
          "x-nullable": false,
          "type": "boolean"
        },
        "ExecutiveSummary": {
          "type": "string"
        },
        "Recommendations": {
          "type": "string"
        },
        "DamagesClaimed": {
          "type": "string",
          "length": 50
        },
        "ClaimReportFlagID": {
          "x-precision": 10,
          "type": "integer"
        },
        "Filename": {
          "type": "string",
          "length": 1000
        },
        "ID": {
          "type": "string",
          "format": "uuid"
        },
        "SubmittedByName": {
          "type": "string",
          "length": 450
        },
        "ClaimReportFlag": {
          "type": "string",
          "length": 50
        },
        "ClaimNo": {
          "type": "string",
          "length": 20
        },
        "Insured1": {
          "type": "string",
          "length": 100
        },
        "Claimant1": {
          "type": "string",
          "length": 100
        },
        "Insured2": {
          "type": "string",
          "length": 100
        },
        "Insured3": {
          "type": "string",
          "length": 100
        },
        "Claimant2": {
          "type": "string",
          "length": 100
        },
        "Claimant3": {
          "type": "string",
          "length": 100
        },
        "Broker": {
          "type": "string",
          "length": 100
        },
        "Insureds": {
          "type": "string"
        },
        "Claimants": {
          "type": "string"
        },
        "Status": {
          "type": "string",
          "length": 50
        },
        "DefenseCounselID": {
          "x-precision": 10,
          "type": "integer"
        },
        "CoverageCounselID": {
          "x-precision": 10,
          "type": "integer"
        },
        "AdjusterID": {
          "x-precision": 10,
          "type": "integer"
        },
        "FilehandlerID": {
          "x-precision": 10,
          "type": "integer"
        },
        "ReportingDays": {
          "x-precision": 10,
          "type": "integer"
        },
        "FileHandlerEmailAddress": {
          "type": "string",
          "length": 450
        },
        "AdjusterEmailAddress": {
          "type": "string",
          "length": 450
        },
        "DefenseCounselEmailAddress": {
          "type": "string",
          "length": 450
        },
        "HandlingFirmID": {
          "x-precision": 10,
          "type": "integer"
        },
        "HandlingFirmName": {
          "type": "string",
          "length": 100
        },
        "ReportsTo": {
          "type": "string"
        },
        "ApplicationName": {
          "type": "string",
          "length": 50
        },
        "ReportsToEmail": {
          "type": "string"
        },
        "UploadedById": {
          "type": "string",
          "length": 450
        },
        "UploadedByEmail": {
          "type": "string",
          "length": 256
        },
        "FileID": {
          "x-precision": 10,
          "type": "integer"
        },
        "FirmType": {
          "type": "string",
          "length": 50
        }
      }
    },
    "ClaimSearchList": {
      "x-view": true,
      "x-table": "dbo.ClaimSearchList",
      "resource": "ClaimSearchLists",
      "required": [
        "ClaimNo",
        "ClaimID",
        "ProgramID",
        "CoverageIssue",
        "ClaimStatusID",
        "ClaimOrIncident",
        "MasterFile",
        "ContractYearID"
      ],
      "properties": {
        "Program": {
          "type": "string",
          "length": 50
        },
        "ClaimNo": {
          "x-nullable": false,
          "type": "string",
          "length": 20,
          "x-key": true,
          "x-virtual": true
        },
        "Address": {
          "type": "string"
        },
        "Insureds": {
          "type": "string"
        },
        "Claimants": {
          "type": "string"
        },
        "Broker": {
          "type": "string",
          "length": 100
        },
        "BrokerOfRecord": {
          "type": "string",
          "length": 100
        },
        "DefenceCounsel": {
          "type": "string",
          "length": 100
        },
        "Occurences": {
          "type": "string",
          "length": 15
        },
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "AdjusterClaimNo": {
          "type": "string",
          "length": 50
        },
        "ProgramID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "AdjusterID": {
          "x-precision": 10,
          "type": "integer"
        },
        "DefenseCounselID": {
          "x-precision": 10,
          "type": "integer"
        },
        "CoverageCounselID": {
          "x-precision": 10,
          "type": "integer"
        },
        "Status": {
          "type": "string",
          "length": 50
        },
        "FileHandlerID": {
          "x-precision": 10,
          "type": "integer"
        },
        "CoverageIssue": {
          "x-nullable": false,
          "type": "boolean"
        },
        "BrokerageOnly": {
          "x-precision": 10,
          "type": "integer"
        },
        "DefenseCounselFirmID": {
          "x-precision": 10,
          "type": "integer"
        },
        "Adjuster": {
          "type": "string",
          "length": 100
        },
        "ClaimStatusID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "CounselFileNo": {
          "type": "string",
          "length": 50
        },
        "ClaimOrIncident": {
          "x-nullable": false,
          "type": "boolean"
        },
        "FileHandler": {
          "type": "string",
          "length": 100
        },
        "NoticeOfClaimRefNum": {
          "type": "string",
          "length": 15
        },
        "CoverageIssues": {
          "type": "string",
          "length": 255
        },
        "MasterFile": {
          "x-nullable": false,
          "type": "boolean"
        },
        "Brokerage": {
          "type": "string",
          "length": 100
        },
        "Brokerage1": {
          "type": "string",
          "length": 100
        },
        "Broker1": {
          "type": "string",
          "length": 100
        },
        "Builder1": {
          "type": "string",
          "length": 100
        },
        "ContractYearID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        }
      }
    },
    "ClaimStatusHistory": {
      "x-table": "dbo.ClaimStatusHistory",
      "resource": "ClaimStatusHistories",
      "required": [
        "ClaimID",
        "NewStatusID"
      ],
      "properties": {
        "ClaimStatusID": {
          "x-key": true,
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "Claim": {
          "type": "object",
          "$ref": "#/definitions/Claim"
        },
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Claims",
            "parentEntityType": "Claim",
            "type": "Claim",
            "principalKey": "ClaimID",
            "name": "Claim",
            "textProperty": "ClaimNo",
            "primaryKey": "ID",
            "navigationProperty": "ClaimStatusHistories"
          }
        },
        "StatusChangeDate": {
          "x-default-sql": "(getdate())",
          "x-nullable": false,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "Parameter": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "NewStatusID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "ClaimStatusHistories"
          }
        },
        "ChangedBy": {
          "type": "string",
          "length": 255
        }
      }
    },
    "ClaimSummary": {
      "x-view": "sp",
      "x-table": "dbo.ClaimSummary",
      "x-parameters": [
        {
          "name": "ClaimID",
          "type": "integer"
        }
      ],
      "resource": "ClaimSummaries",
      "required": [],
      "properties": {
        "ClaimSummary1": {
          "x-original-name": "ClaimSummary",
          "x-computed": true,
          "x-nullable": false,
          "type": "string",
          "x-key": true,
          "x-virtual": true
        }
      }
    },
    "ClaimTotalIncurredByCategory": {
      "x-view": true,
      "x-table": "dbo.ClaimTotalIncurredByCategory",
      "resource": "ClaimTotalIncurredByCategories",
      "required": [
        "ClaimID",
        "IndemnityReserve",
        "IndemnityPayment",
        "AdjustingReserve",
        "AdjustingPayment",
        "LegalReserve",
        "LegalPayment",
        "ExpenseReserve",
        "ExpensePayment",
        "Deductible",
        "Subrogation",
        "TotalReserve",
        "TotalPayment",
        "TotalRecovery",
        "TotalIncurred"
      ],
      "properties": {
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        },
        "ClaimantID": {
          "x-precision": 10,
          "type": "integer"
        },
        "IndemnityReserve": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "IndemnityPayment": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingReserve": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingPayment": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalReserve": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalPayment": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpenseReserve": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpensePayment": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Deductible": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Subrogation": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalReserve": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalPayment": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalRecovery": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalIncurred": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "OccurrenceID": {
          "x-precision": 10,
          "type": "integer"
        }
      }
    },
    "ClaimTotalIncurredByTransactionDate": {
      "x-view": true,
      "x-table": "dbo.ClaimTotalIncurredByTransactionDate",
      "resource": "ClaimTotalIncurredByTransactionDates",
      "required": [
        "ClaimID",
        "IndemnityReserve",
        "IndemnityPayment",
        "AdjustingReserve",
        "AdjustingPayment",
        "LegalReserve",
        "LegalPayment",
        "ExpenseReserve",
        "ExpensePayment",
        "Deductible",
        "Subrogation",
        "TotalReserve",
        "TotalPayment",
        "TotalRecovery",
        "TotalIncurred"
      ],
      "properties": {
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        },
        "TransactionDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "IndemnityReserve": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "IndemnityPayment": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingReserve": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingPayment": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalReserve": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalPayment": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpenseReserve": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpensePayment": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Deductible": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Subrogation": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalReserve": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalPayment": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalRecovery": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalIncurred": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "ClaimTransactionSummaryByDate": {
      "x-view": "sp",
      "x-table": "dbo.ClaimTransactionSummaryByDate",
      "x-parameters": [
        {
          "name": "ReportDate",
          "type": "string",
          "format": "date-time",
          "size": 8
        }
      ],
      "resource": "ClaimTransactionSummaryByDates",
      "required": [
        "ClaimID"
      ],
      "properties": {
        "ClaimID": {
          "x-key": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-virtual": true
        },
        "IndemnityReserve": {
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "IndemnityPayment": {
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingReserve": {
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingPayment": {
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalReserve": {
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalPayment": {
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Deductible": {
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Subrogation": {
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalReserve": {
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalPayment": {
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalRecovery": {
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalIncurred": {
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "Claimant": {
      "x-table": "dbo.Claimants",
      "resource": "Claimants",
      "required": [
        "ClaimantOrder"
      ],
      "properties": {
        "ID": {
          "x-key": true,
          "x-default-sql": "(newid())",
          "x-nullable": false,
          "type": "string",
          "format": "uuid"
        },
        "Claim": {
          "type": "object",
          "$ref": "#/definitions/Claim"
        },
        "ClaimID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Claims",
            "parentEntityType": "Claim",
            "type": "Claim",
            "principalKey": "ClaimID",
            "name": "Claim",
            "textProperty": "ClaimNo",
            "primaryKey": "ID",
            "navigationProperty": "Claimants"
          }
        },
        "ClaimantID": {
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-navigation": [
            {
              "inversePropertyName": "Claimant",
              "name": "ClaimantLitigationRoles",
              "type": "ClaimantLitigationRole"
            },
            {
              "inversePropertyName": "Claimant",
              "name": "ClaimantPaymentsReceiveds",
              "type": "ClaimantPaymentsReceived"
            },
            {
              "inversePropertyName": "Claimant",
              "name": "Claims",
              "type": "Claim"
            }
          ]
        },
        "Registrant": {
          "type": "object",
          "$ref": "#/definitions/Registrant"
        },
        "RegistrantID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Registrants",
            "parentEntityType": "Registrant",
            "type": "Registrant",
            "principalKey": "RegistrantID",
            "name": "Registrant",
            "textProperty": "Name",
            "primaryKey": "ID",
            "navigationProperty": "Claimants"
          }
        },
        "Name": {
          "type": "string",
          "length": 100
        },
        "Address": {
          "type": "string",
          "length": 500
        },
        "Parameter": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "ProvinceID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Claimants"
          }
        },
        "City": {
          "type": "string",
          "length": 100
        },
        "PostalCode": {
          "type": "string",
          "length": 7
        },
        "EmailAddress": {
          "type": "string",
          "length": 450
        },
        "BusinessPhoneNum": {
          "type": "string",
          "length": 25
        },
        "CellPhoneNum": {
          "type": "string",
          "length": 25
        },
        "FaxNum": {
          "type": "string",
          "length": 25
        },
        "Parameter1": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "PreferredCommunicationMethodID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter1",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Claimants1"
          }
        },
        "ClaimantOrder": {
          "x-nullable": false,
          "x-precision": 5,
          "type": "integer",
          "format": "int16"
        },
        "ClaimantSolicitor": {
          "type": "object",
          "$ref": "#/definitions/ClaimantSolicitor"
        },
        "ClaimantSolicitorID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "ClaimantSolicitors",
            "parentEntityType": "ClaimantSolicitor",
            "type": "ClaimantSolicitor",
            "principalKey": "SolicitorID",
            "name": "ClaimantSolicitor",
            "textProperty": "Name",
            "primaryKey": "ID",
            "navigationProperty": "Claimants"
          }
        },
        "Parameter2": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "TransactionRoleID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter2",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Claimants2"
          }
        },
        "Brokerage": {
          "type": "object",
          "$ref": "#/definitions/Brokerage"
        },
        "CooperatingBrokerageID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Brokerages",
            "parentEntityType": "Brokerage",
            "type": "Brokerage",
            "principalKey": "BrokerageID",
            "name": "Brokerage",
            "textProperty": "Name",
            "navigationProperty": "Claimants"
          }
        },
        "SharedCommission": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "ClaimedAmount": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "PaymentsOwing": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "ByInsurerOrReceiver": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "ClaimantStatus": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "PaymentMade": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "ReasonNoPayment": {
          "type": "string",
          "length": 500
        },
        "CoverageCap": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "NoticeOfClaimID": {
          "x-precision": 10,
          "type": "integer"
        },
        "TradeRecordSheetID": {
          "x-precision": 10,
          "type": "integer"
        },
        "AgreementofSaleID": {
          "x-precision": 10,
          "type": "integer"
        },
        "CommissionInvoiceID": {
          "x-precision": 10,
          "type": "integer"
        },
        "BuilderAgreementsID": {
          "x-precision": 10,
          "type": "integer"
        },
        "StatementOfAdjustmentsID": {
          "x-precision": 10,
          "type": "integer"
        },
        "SplitCommissionChequeID": {
          "x-precision": 10,
          "type": "integer"
        },
        "NSFCommissionChequeID": {
          "x-precision": 10,
          "type": "integer"
        },
        "SelfRepresented": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "ContactName": {
          "type": "string",
          "length": 100
        },
        "RegistrantNum": {
          "type": "string",
          "length": 7
        },
        "OtherTransactionRole": {
          "type": "string",
          "length": 50
        },
        "ClaimantLitigationRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimantLitigationRole"
          }
        },
        "ClaimantPaymentsReceiveds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimantPaymentsReceived"
          }
        },
        "Claims": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Claim"
          }
        }
      }
    },
    "ClaimantLitigationRole": {
      "x-table": "dbo.ClaimantLitigationRoles",
      "resource": "ClaimantLitigationRoles",
      "required": [
        "ClaimantID",
        "LitigationRole"
      ],
      "properties": {
        "Claimant": {
          "type": "object",
          "$ref": "#/definitions/Claimant"
        },
        "ClaimantID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-foreignKey": {
            "parentTable": "Claimants",
            "parentEntityType": "Claimant",
            "type": "Claimant",
            "principalKey": "ClaimantID",
            "name": "Claimant",
            "textProperty": "Name",
            "primaryKey": "ID",
            "navigationProperty": "ClaimantLitigationRoles"
          }
        },
        "Parameter": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "LitigationRole": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "ClaimantLitigationRoles"
          }
        }
      }
    },
    "ClaimantPaymentsReceived": {
      "x-table": "dbo.ClaimantPaymentsReceived",
      "resource": "ClaimantPaymentsReceiveds",
      "required": [
        "ClaimantID",
        "PaymentReceivedDate",
        "PaymentAmountReceived"
      ],
      "properties": {
        "Claimant": {
          "type": "object",
          "$ref": "#/definitions/Claimant"
        },
        "ClaimantID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-foreignKey": {
            "parentTable": "Claimants",
            "parentEntityType": "Claimant",
            "type": "Claimant",
            "principalKey": "ClaimantID",
            "name": "Claimant",
            "textProperty": "Name",
            "primaryKey": "ID",
            "navigationProperty": "ClaimantPaymentsReceiveds"
          }
        },
        "PaymentReceivedDate": {
          "x-key": true,
          "x-nullable": false,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "PaymentAmountReceived": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "ClaimantSolicitor": {
      "x-table": "dbo.ClaimantSolicitors",
      "resource": "ClaimantSolicitors",
      "required": [
        "Name"
      ],
      "properties": {
        "ID": {
          "x-key": true,
          "x-default-sql": "(newid())",
          "x-nullable": false,
          "type": "string",
          "format": "uuid"
        },
        "SolicitorID": {
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-navigation": [
            {
              "inversePropertyName": "ClaimantSolicitor",
              "name": "Claimants",
              "type": "Claimant"
            }
          ]
        },
        "Name": {
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "Address": {
          "type": "string",
          "length": 450
        },
        "Parameter": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "ProvinceID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "ClaimantSolicitors"
          }
        },
        "City": {
          "type": "string",
          "length": 100
        },
        "PostalCode": {
          "type": "string",
          "length": 7
        },
        "EmailAddress": {
          "type": "string",
          "length": 450
        },
        "BusinessPhoneNum": {
          "type": "string",
          "length": 25
        },
        "CellPhoneNum": {
          "type": "string",
          "length": 25
        },
        "FaxNum": {
          "type": "string",
          "length": 25
        },
        "Parameter1": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "PreferredCommunicationMethodID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter1",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "ClaimantSolicitors1"
          }
        },
        "SolicitorFirm": {
          "type": "string",
          "length": 100
        },
        "Claimants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Claimant"
          }
        }
      }
    },
    "ClaimantTotalIncurredByCategory": {
      "x-view": true,
      "x-table": "dbo.ClaimantTotalIncurredByCategory",
      "resource": "ClaimantTotalIncurredByCategories",
      "required": [],
      "properties": {
        "ClaimantID": {
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        },
        "IndemnityReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "IndemnityPayment": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingPayment": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalPayment": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpenseReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpensePayment": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Deductible": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Subrogation": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalPayment": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalRecovery": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalIncurred": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "ClaimsClosedQuarterlyReport": {
      "x-view": "sp",
      "x-table": "dbo.ClaimsClosedQuarterlyReport",
      "x-parameters": [
        {
          "name": "StartDate",
          "type": "string",
          "format": "date-time",
          "size": 8
        },
        {
          "name": "EndDate",
          "type": "string",
          "format": "date-time",
          "size": 8
        }
      ],
      "resource": "ClaimsClosedQuarterlyReports",
      "required": [
        "ClaimNumber"
      ],
      "properties": {
        "ClaimStatus": {
          "x-original-name": "Claim Status",
          "type": "string",
          "length": 12
        },
        "ClaimNumber": {
          "x-original-name": "Claim Number",
          "x-nullable": false,
          "type": "string",
          "length": 40,
          "x-key": true,
          "x-virtual": true
        },
        "ClaimType": {
          "x-original-name": "Claim Type",
          "type": "string",
          "length": 100
        },
        "Allegation": {
          "type": "string",
          "length": 100
        },
        "LossCause": {
          "x-original-name": "Loss Cause",
          "type": "string",
          "length": 100
        },
        "IndemnityPaid": {
          "x-computed": true,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingPaid": {
          "x-computed": true,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalPaid": {
          "x-computed": true,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpensePaid": {
          "x-computed": true,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "RecoveredCosts": {
          "x-computed": true,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalIncurred": {
          "x-computed": true,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "DateClosed": {
          "x-original-name": "Date Closed",
          "x-precision": 23,
          "x-scale": 3,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        }
      }
    },
    "ClaimsWithIndemnity": {
      "x-view": true,
      "x-table": "dbo.ClaimsWithIndemnity",
      "resource": "ClaimsWithIndemnities",
      "required": [
        "IndemnityReserve",
        "IndemnityPayment",
        "ClaimNo",
        "ClaimID",
        "ProgramID"
      ],
      "properties": {
        "RegistrantNo": {
          "type": "string",
          "length": 7
        },
        "Name": {
          "type": "string",
          "length": 100
        },
        "IndemnityReserve": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal",
          "x-key": true,
          "x-virtual": true
        },
        "IndemnityPayment": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ClaimNo": {
          "x-nullable": false,
          "type": "string",
          "length": 20
        },
        "ContractYear": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "ProgramID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        }
      }
    },
    "ClaimsWithIndemnityPaid": {
      "x-view": "sp",
      "x-table": "dbo.ClaimsWithIndemnityPaid",
      "x-parameters": [
        {
          "name": "ProgramID",
          "type": "integer"
        },
        {
          "name": "ReportDate",
          "type": "string",
          "format": "date-time",
          "size": 3
        }
      ],
      "resource": "ClaimsWithIndemnityPaids",
      "required": [
        "ContractYear"
      ],
      "properties": {
        "ContractYear": {
          "x-nullable": false,
          "type": "string",
          "length": 100,
          "x-key": true,
          "x-virtual": true
        },
        "LossCause": {
          "x-original-name": "Loss Cause",
          "type": "string",
          "length": 100
        },
        "ClaimStatus": {
          "x-original-name": "Claim Status",
          "type": "string",
          "length": 12
        },
        "IndemnityPaid": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingPaid": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalPaid": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpensePaid": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalIncurred": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ClaimsReported": {
          "x-original-name": "Claims Reported",
          "x-precision": 10,
          "type": "integer"
        }
      }
    },
    "ClaimsWithIndemnityPaidDetailed": {
      "x-view": "sp",
      "x-table": "dbo.ClaimsWithIndemnityPaidDetailed",
      "x-parameters": [
        {
          "name": "ProgramID",
          "type": "integer"
        },
        {
          "name": "ReportDate",
          "type": "string",
          "format": "date-time",
          "size": 3
        }
      ],
      "resource": "ClaimsWithIndemnityPaidDetaileds",
      "required": [
        "ClaimNumber",
        "ContractYear"
      ],
      "properties": {
        "ClaimStatus": {
          "x-original-name": "Claim Status",
          "type": "string",
          "length": 12
        },
        "ClaimNumber": {
          "x-original-name": "Claim Number",
          "x-nullable": false,
          "type": "string",
          "length": 40,
          "x-key": true,
          "x-virtual": true
        },
        "ClaimType": {
          "x-original-name": "Claim Type",
          "type": "string",
          "length": 12
        },
        "Allegation": {
          "type": "string",
          "length": 12
        },
        "CauseofClaim": {
          "x-original-name": "Cause of Claim",
          "type": "string",
          "length": 100
        },
        "IndemnityPaid": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingPaid": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalPaid": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpensePaid": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalIncurred": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ContractYear": {
          "x-nullable": false,
          "type": "string",
          "length": 100
        }
      }
    },
    "ClaimsWithIndemnityReserf": {
      "x-view": "sp",
      "x-table": "dbo.ClaimsWithIndemnityReserves",
      "x-parameters": [
        {
          "name": "ProgramID",
          "type": "integer"
        }
      ],
      "resource": "ClaimsWithIndemnityReserves",
      "required": [
        "ClaimNumber"
      ],
      "properties": {
        "ClaimNumber": {
          "x-original-name": "Claim Number",
          "x-nullable": false,
          "type": "string",
          "length": 40,
          "x-key": true,
          "x-virtual": true
        },
        "ClaimStatus": {
          "x-original-name": "Claim Status",
          "type": "string",
          "length": 12
        },
        "AmountClaimed": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Insureds": {
          "x-computed": true,
          "type": "string"
        },
        "BrokerageatTimeofLoss": {
          "x-original-name": "Brokerage at Time of Loss",
          "x-computed": true,
          "type": "string",
          "length": 200
        },
        "IndemnityReserve": {
          "x-computed": true,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingReserve": {
          "x-computed": true,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalReserve": {
          "x-computed": true,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpenseReserve": {
          "x-computed": true,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpensePaid": {
          "x-computed": true,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpenseBalance": {
          "x-computed": true,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "ClaimsWithIndemnityReserveWithDetail": {
      "x-view": "sp",
      "x-table": "dbo.ClaimsWithIndemnityReserveWithDetails",
      "x-parameters": [
        {
          "name": "ProgramID",
          "type": "integer"
        }
      ],
      "resource": "ClaimsWithIndemnityReserveWithDetails",
      "required": [
        "ClaimNo"
      ],
      "properties": {
        "ClaimNo": {
          "x-nullable": false,
          "type": "string",
          "length": 40,
          "x-key": true,
          "x-virtual": true
        },
        "ClaimStatus": {
          "x-original-name": "Claim Status",
          "type": "string",
          "length": 12
        },
        "Insureds": {
          "x-computed": true,
          "type": "string"
        },
        "AgencyAtTimeOfLoss": {
          "x-original-name": "Agency At Time Of Loss",
          "x-computed": true,
          "type": "string",
          "length": 200
        },
        "TypeOfSale": {
          "x-original-name": "Type Of Sale",
          "type": "string",
          "length": 12
        },
        "CauseOfClaim": {
          "x-original-name": "Cause Of Claim",
          "type": "string",
          "length": 100
        },
        "Details": {
          "type": "string",
          "length": 2000
        }
      }
    },
    "ClaimsWithReserveDetailsReport": {
      "x-view": "sp",
      "x-table": "dbo.ClaimsWithReserveDetailsReport",
      "x-parameters": [
        {
          "name": "StartDate",
          "type": "string",
          "format": "date-time",
          "size": 8
        },
        {
          "name": "EndDate",
          "type": "string",
          "format": "date-time",
          "size": 8
        }
      ],
      "resource": "ClaimsWithReserveDetailsReports",
      "required": [
        "ClaimNumber"
      ],
      "properties": {
        "ClaimNumber": {
          "x-original-name": "Claim Number",
          "x-nullable": false,
          "type": "string",
          "length": 40,
          "x-key": true,
          "x-virtual": true
        },
        "ClaimDate": {
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "ClaimAmount": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "IndemnityReserve": {
          "x-computed": true,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "IndemnityPaid": {
          "x-computed": true,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingReserve": {
          "x-original-name": "Adjusting Reserve",
          "x-computed": true,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingPaid": {
          "x-computed": true,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalReserve": {
          "x-computed": true,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalPaid": {
          "x-computed": true,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpenseReserve": {
          "x-computed": true,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpensePaid": {
          "x-computed": true,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpenseBalance": {
          "x-computed": true,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "RecoveredCosts": {
          "x-computed": true,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalIncurred": {
          "x-computed": true,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "ClearClaimantLitigationRole": {
      "x-view": "sp",
      "x-table": "dbo.ClearClaimantLitigationRoles",
      "x-parameters": [
        {
          "name": "ClaimantID",
          "type": "integer"
        }
      ],
      "resource": "ClearClaimantLitigationRoles",
      "properties": {}
    },
    "ClearInvoiceUploadDatum": {
      "x-view": "sp",
      "x-table": "dbo.ClearInvoiceUploadData",
      "resource": "ClearInvoiceUploadData",
      "properties": {}
    },
    "ClearSystemNotice": {
      "x-view": "sp",
      "x-table": "dbo.ClearSystemNotice",
      "resource": "ClearSystemNotices",
      "properties": {}
    },
    "CloneClaimPrincipal": {
      "x-view": "sp",
      "x-table": "dbo.CloneClaimPrincipals",
      "x-parameters": [
        {
          "name": "ClaimID",
          "type": "integer"
        },
        {
          "name": "ClonedClaimNo",
          "type": "string",
          "size": 100
        },
        {
          "name": "UserID",
          "type": "string",
          "size": 900
        }
      ],
      "resource": "CloneClaimPrincipals",
      "required": [],
      "properties": {
        "ClonedClaimID": {
          "x-computed": true,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        }
      }
    },
    "CloseEntireClaim": {
      "x-view": "sp",
      "x-table": "dbo.CloseEntireClaim",
      "x-parameters": [
        {
          "name": "ClaimID",
          "type": "integer"
        },
        {
          "name": "UserID",
          "type": "string",
          "size": 200
        }
      ],
      "resource": "CloseEntireClaims",
      "properties": {}
    },
    "CloseIndividualClaimReserf": {
      "x-view": "sp",
      "x-table": "dbo.CloseIndividualClaimReserves",
      "x-parameters": [
        {
          "name": "ClaimID",
          "type": "integer"
        },
        {
          "name": "IncurredTypeID",
          "type": "integer"
        },
        {
          "name": "UserID",
          "type": "string",
          "size": 200
        }
      ],
      "resource": "CloseIndividualClaimReserves",
      "properties": {}
    },
    "CommissionInstallment": {
      "x-table": "dbo.CommissionInstallments",
      "resource": "CommissionInstallments",
      "required": [
        "TradeID"
      ],
      "properties": {
        "Trade": {
          "type": "object",
          "$ref": "#/definitions/Trade"
        },
        "TradeID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Trades",
            "parentEntityType": "Trade",
            "type": "Trade",
            "principalKey": "TradeID",
            "name": "Trade",
            "textProperty": "Address1",
            "navigationProperty": "CommissionInstallments"
          }
        },
        "CommissionInstallmentID": {
          "x-key": true,
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "Amount": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "DatePaid": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "Description": {
          "type": "string",
          "length": 512
        }
      }
    },
    "ConsolidateClaimant": {
      "x-view": "sp",
      "x-table": "dbo.ConsolidateClaimants",
      "x-parameters": [
        {
          "name": "ConsolidatedClaimantID",
          "type": "integer"
        },
        {
          "name": "DiscontinuedClaimantID",
          "type": "integer"
        }
      ],
      "resource": "ConsolidateClaimants",
      "properties": {}
    },
    "CostAward": {
      "x-table": "dbo.CostAwards",
      "resource": "CostAwards",
      "required": [
        "ClaimID",
        "CostAward1",
        "CostAwardDate"
      ],
      "properties": {
        "CostAwardID": {
          "x-key": true,
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "Claim": {
          "type": "object",
          "$ref": "#/definitions/Claim"
        },
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Claims",
            "parentEntityType": "Claim",
            "type": "Claim",
            "principalKey": "ClaimID",
            "name": "Claim",
            "textProperty": "ClaimNo",
            "primaryKey": "ID",
            "navigationProperty": "CostAwards"
          }
        },
        "CostAward1": {
          "x-original-name": "CostAward",
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "CostAwardDate": {
          "x-nullable": false,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "Paid": {
          "x-default-sql": "((0))",
          "type": "boolean"
        }
      }
    },
    "CostOfClaimsByTypeReport": {
      "x-view": "sp",
      "x-table": "dbo.CostOfClaimsByTypeReport",
      "resource": "CostOfClaimsByTypeReports",
      "required": [
        "ClaimNo"
      ],
      "properties": {
        "ClaimStatus": {
          "x-original-name": "Claim Status",
          "type": "string",
          "length": 12
        },
        "ClaimNo": {
          "x-nullable": false,
          "type": "string",
          "length": 40,
          "x-key": true,
          "x-virtual": true
        },
        "ClaimType": {
          "x-original-name": "Claim Type",
          "type": "string",
          "length": 12
        },
        "CauseofClaim": {
          "x-original-name": "Cause of Claim",
          "type": "string",
          "length": 100
        },
        "Details": {
          "type": "string",
          "length": 2000
        },
        "IndemnityReserve": {
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "IndemnityPaid": {
          "x-original-name": "Indemnity Paid",
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingReserve": {
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingPaid": {
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalReserve": {
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalPaid": {
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpenseReserve": {
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpensePaid": {
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "RecoveredCosts": {
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalIncurred": {
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "CourtDate": {
      "x-table": "dbo.CourtDates",
      "resource": "CourtDates",
      "required": [
        "ClaimID",
        "CourtDate1",
        "CourtDateTypeID",
        "AssignedServiceProviderID"
      ],
      "properties": {
        "CourtDateID": {
          "x-key": true,
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "Claim": {
          "type": "object",
          "$ref": "#/definitions/Claim"
        },
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Claims",
            "parentEntityType": "Claim",
            "type": "Claim",
            "principalKey": "ClaimID",
            "name": "Claim",
            "textProperty": "ClaimNo",
            "primaryKey": "ID",
            "navigationProperty": "CourtDates"
          }
        },
        "CourtDate1": {
          "x-original-name": "CourtDate",
          "x-nullable": false,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "Parameter": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "CourtDateTypeID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "CourtDates"
          }
        },
        "ServiceProvider": {
          "type": "object",
          "$ref": "#/definitions/ServiceProvider"
        },
        "AssignedServiceProviderID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "ServiceProviders",
            "parentEntityType": "ServiceProvider",
            "type": "ServiceProvider",
            "principalKey": "ServiceProviderID",
            "name": "ServiceProvider",
            "textProperty": "Name",
            "primaryKey": "ID",
            "navigationProperty": "CourtDates"
          }
        }
      }
    },
    "CppNoticeOfClaimsDetail": {
      "x-table": "dbo.CPPNoticeOfClaimsDetails",
      "resource": "CppNoticeOfClaimsDetails",
      "required": [],
      "properties": {
        "NoticeOfClaimDetailsID": {
          "x-key": true,
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "NoticeOfClaimID": {
          "x-precision": 10,
          "type": "integer"
        },
        "AmountClaimed": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "PartialAmountReceived": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "PartialIncluded": {
          "x-nullable": false,
          "type": "boolean"
        },
        "AgreementDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "CloseDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "InitialDepositAmount": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "InitialDepositDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "SecondDepositAmount": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "SecondDepositDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "ThirdDepositAmount": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ThirdDepositDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "BrokerFailureReason": {
          "type": "string",
          "length": 2048
        },
        "BrokerCommunications": {
          "type": "string",
          "length": 2048
        },
        "RecoveryEfforts": {
          "type": "string",
          "length": 2048
        },
        "BrokerageAgreementFileID": {
          "x-precision": 10,
          "type": "integer"
        },
        "PurchaseAgreementFileID": {
          "x-precision": 10,
          "type": "integer"
        },
        "TradeRecordSheetFileID": {
          "x-precision": 10,
          "type": "integer"
        },
        "CommissionInvoiceFileID": {
          "x-precision": 10,
          "type": "integer"
        },
        "TrustAccountBank": {
          "type": "string",
          "length": 100
        },
        "TrustAccountNum": {
          "type": "string",
          "length": 25
        },
        "TrustAccountAddress": {
          "type": "string",
          "length": 450
        }
      }
    },
    "CrossReferencedClaim": {
      "x-table": "dbo.CrossReferencedClaims",
      "resource": "CrossReferencedClaims",
      "required": [
        "ClaimID",
        "XRefClaimID"
      ],
      "properties": {
        "Claim": {
          "type": "object",
          "$ref": "#/definitions/Claim"
        },
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-foreignKey": {
            "parentTable": "Claims",
            "parentEntityType": "Claim",
            "type": "Claim",
            "principalKey": "ClaimID",
            "name": "Claim",
            "textProperty": "ClaimNo",
            "primaryKey": "ID",
            "navigationProperty": "CrossReferencedClaims"
          }
        },
        "Claim1": {
          "type": "object",
          "$ref": "#/definitions/Claim"
        },
        "XRefClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-foreignKey": {
            "parentTable": "Claims",
            "parentEntityType": "Claim",
            "type": "Claim",
            "principalKey": "ClaimID",
            "name": "Claim1",
            "textProperty": "ClaimNo",
            "primaryKey": "ID",
            "navigationProperty": "CrossReferencedClaims1"
          }
        }
      }
    },
    "CurrentDiaryReport": {
      "x-view": "sp",
      "x-table": "dbo.CurrentDiaryReport",
      "resource": "CurrentDiaryReports",
      "required": [
        "ClaimTypeID",
        "ContractYear",
        "ClaimNum",
        "Program"
      ],
      "properties": {
        "ClaimTypeID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        },
        "ContractYear": {
          "x-original-name": "Contract Year",
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "ClaimNum": {
          "x-original-name": "Claim Num",
          "x-nullable": false,
          "type": "string",
          "length": 40
        },
        "Program": {
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "Insureds": {
          "x-computed": true,
          "type": "string"
        },
        "DiaryDate": {
          "x-original-name": "Diary Date",
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "DiarySubject": {
          "x-original-name": "Diary Subject",
          "type": "string",
          "length": 510
        },
        "FileHandler": {
          "x-original-name": "File Handler",
          "type": "string",
          "length": 200
        }
      }
    },
    "DefenseCounselWithOpenFile": {
      "x-view": "sp",
      "x-table": "dbo.DefenseCounselWithOpenFiles",
      "x-parameters": [
        {
          "name": "ProgramID",
          "type": "integer"
        }
      ],
      "resource": "DefenseCounselWithOpenFiles",
      "required": [],
      "properties": {
        "DefenseCounsel": {
          "x-original-name": "Defense Counsel",
          "type": "string",
          "length": 200,
          "x-key": true,
          "x-virtual": true
        },
        "TotalClaims": {
          "x-original-name": "Total Claims",
          "x-precision": 10,
          "type": "integer"
        }
      }
    },
    "Diary": {
      "x-table": "dbo.Diaries",
      "resource": "Diaries",
      "required": [
        "ClaimID",
        "Recipients",
        "Subject",
        "DiaryStatusID"
      ],
      "properties": {
        "ID": {
          "x-key": true,
          "x-default-sql": "(newid())",
          "x-nullable": false,
          "type": "string",
          "format": "uuid"
        },
        "DiaryID": {
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "Claim": {
          "type": "object",
          "$ref": "#/definitions/Claim"
        },
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Claims",
            "parentEntityType": "Claim",
            "type": "Claim",
            "principalKey": "ClaimID",
            "name": "Claim",
            "textProperty": "ClaimNo",
            "primaryKey": "ID",
            "navigationProperty": "Diaries"
          }
        },
        "EntryDate": {
          "x-default-sql": "(getdate())",
          "x-nullable": false,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "Recipients": {
          "x-nullable": false,
          "type": "string",
          "length": 2000
        },
        "Subject": {
          "x-nullable": false,
          "type": "string",
          "length": 255
        },
        "Details": {
          "type": "string"
        },
        "AbeyanceDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "VisibleTo": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "Parameter": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "DiaryStatusID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Diaries"
          }
        },
        "EnteredBy": {
          "type": "string",
          "length": 450
        }
      }
    },
    "DiaryTemplate": {
      "x-table": "dbo.DiaryTemplates",
      "resource": "DiaryTemplates",
      "required": [
        "Title"
      ],
      "properties": {
        "DiaryTemplateID": {
          "x-key": true,
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "Title": {
          "x-nullable": false,
          "type": "string",
          "length": 50
        },
        "Subject": {
          "type": "string",
          "length": 125
        },
        "TemplateText": {
          "type": "string"
        },
        "DisplayOrder": {
          "x-precision": 5,
          "type": "integer",
          "format": "int16"
        },
        "Parameter": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "DefaultSendToID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "DiaryTemplates"
          }
        },
        "Parameter1": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "TemplateTypeID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter1",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "DiaryTemplates1"
          }
        }
      }
    },
    "EmailFolder": {
      "x-table": "dbo.EmailFolders",
      "resource": "EmailFolders",
      "required": [
        "ID",
        "FolderID",
        "UserID"
      ],
      "properties": {
        "ID": {
          "x-key": true,
          "x-nullable": false,
          "type": "string",
          "length": 450
        },
        "FolderID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-navigation": [
            {
              "inversePropertyName": "EmailFolder1",
              "name": "EmailFolders1",
              "type": "EmailFolder"
            },
            {
              "inversePropertyName": "EmailFolder",
              "name": "EmailMessages",
              "type": "EmailMessage"
            }
          ]
        },
        "DisplayName": {
          "type": "string",
          "length": 100
        },
        "EmailFolder1": {
          "type": "object",
          "$ref": "#/definitions/EmailFolder"
        },
        "ParentFolderID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "EmailFolders",
            "parentEntityType": "EmailFolder",
            "type": "EmailFolder",
            "principalKey": "FolderID",
            "name": "EmailFolder1",
            "textProperty": "DisplayName",
            "primaryKey": "ID",
            "navigationProperty": "EmailFolders1"
          }
        },
        "TotalCount": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "UnreadCount": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "UserID": {
          "x-nullable": false,
          "type": "string",
          "length": 450
        },
        "EmailFolders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmailFolder"
          }
        },
        "EmailMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmailMessage"
          }
        }
      }
    },
    "EmailLinkFile": {
      "x-table": "dbo.EmailLinkFile",
      "resource": "EmailLinkFiles",
      "required": [],
      "properties": {
        "MailID": {
          "type": "string",
          "length": 200
        },
        "ClaimID": {
          "x-precision": 10,
          "type": "integer"
        },
        "FileGuid": {
          "type": "string",
          "length": 200
        },
        "ID": {
          "x-key": true,
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        }
      }
    },
    "EmailMessage": {
      "x-table": "dbo.EmailMessages",
      "resource": "EmailMessages",
      "required": [
        "ID",
        "MessageID",
        "ParentFolderID",
        "Subject",
        "Sender",
        "CCRecipients"
      ],
      "properties": {
        "ID": {
          "x-key": true,
          "x-nullable": false,
          "type": "string",
          "length": 450
        },
        "MessageID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "EmailFolder": {
          "type": "object",
          "$ref": "#/definitions/EmailFolder"
        },
        "ParentFolderID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "EmailFolders",
            "parentEntityType": "EmailFolder",
            "type": "EmailFolder",
            "principalKey": "FolderID",
            "name": "EmailFolder",
            "textProperty": "DisplayName",
            "primaryKey": "ID",
            "navigationProperty": "EmailMessages"
          }
        },
        "Subject": {
          "x-nullable": false,
          "type": "string",
          "length": 255
        },
        "Sender": {
          "x-nullable": false,
          "type": "string",
          "length": 255
        },
        "CCRecipients": {
          "x-nullable": false,
          "type": "string",
          "length": 2000
        },
        "HasAttachments": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        }
      }
    },
    "EmptyReserveBordereau": {
      "x-view": "sp",
      "x-table": "dbo.EmptyReserveBordereau",
      "resource": "EmptyReserveBordereaus",
      "required": [
        "ClaimID",
        "ClaimNo",
        "ProgramID",
        "ProgramName",
        "ContractYearID",
        "ContractYear",
        "ClaimStatus",
        "EntryDate"
      ],
      "properties": {
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        },
        "ClaimNo": {
          "x-nullable": false,
          "type": "string",
          "length": 40
        },
        "AdjusterClaimNo": {
          "type": "string",
          "length": 100
        },
        "ProgramID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "ProgramName": {
          "x-original-name": "Program Name",
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "ContractYearID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "ContractYear": {
          "x-original-name": "Contract Year",
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "ClaimStatusID": {
          "x-key": true,
          "x-precision": 10,
          "type": "integer"
        },
        "ClaimStatus": {
          "x-original-name": "Claim Status",
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "Insureds": {
          "x-computed": true,
          "type": "string"
        },
        "Claimants": {
          "x-computed": true,
          "type": "string"
        },
        "Address": {
          "x-computed": true,
          "type": "string"
        },
        "Adjuster": {
          "type": "string",
          "length": 200
        },
        "DefenseCounsel": {
          "x-original-name": "Defense Counsel",
          "type": "string",
          "length": 200
        },
        "CoverageCounsel": {
          "x-original-name": "Coverage Counsel",
          "type": "string",
          "length": 200
        },
        "FileHandler": {
          "x-original-name": "File Handler",
          "type": "string",
          "length": 200
        },
        "OriginalFileHandler": {
          "x-original-name": "Original File Handler",
          "type": "string",
          "length": 200
        },
        "Brokerage": {
          "x-computed": true,
          "type": "string",
          "length": 200
        },
        "BrokerageTransactionRole": {
          "x-original-name": "Brokerage Transaction Role",
          "type": "string",
          "length": 100
        },
        "CloseDate": {
          "x-precision": 23,
          "x-scale": 3,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "EntryDate": {
          "x-nullable": false,
          "x-precision": 23,
          "x-scale": 3,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "ClaimDate": {
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "AgreementDate": {
          "x-computed": true,
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "ReportDate": {
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "ClaimPaidDate": {
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "LapseDate": {
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "ServedDate": {
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "BrokerageOnly": {
          "x-original-name": "Brokerage Only ?",
          "type": "string",
          "length": 100
        },
        "LossCause": {
          "x-original-name": "Loss Cause",
          "type": "string",
          "length": 100
        },
        "OccurrenceNo": {
          "type": "string",
          "length": 30
        },
        "ValueOfTransaction": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpectedPayout": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustedGrossClaim": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "CoverageIssue": {
          "x-original-name": "Coverage Issue",
          "x-computed": true,
          "x-nullable": false,
          "type": "string",
          "length": 3
        },
        "NotYetReported": {
          "x-original-name": "Not Yet Reported",
          "x-computed": true,
          "x-nullable": false,
          "type": "string",
          "length": 3
        },
        "ClassAction": {
          "x-original-name": "Class Action",
          "x-computed": true,
          "x-nullable": false,
          "type": "string",
          "length": 3
        },
        "IndemnityReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "IndemnityPayment": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalPayment": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingPayment": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpenseReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpensePayment": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Deductible": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Subrogation": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalPayment": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalRecovery": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalIncurred": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "EoClaimDetail": {
      "x-table": "dbo.EOClaimDetails",
      "resource": "EoClaimDetails",
      "required": [
        "ClaimID"
      ],
      "properties": {
        "Claim": {
          "type": "object",
          "$ref": "#/definitions/Claim"
        },
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-foreignKey": {
            "parentTable": "Claims",
            "parentEntityType": "Claim",
            "type": "Claim",
            "principalKey": "ClaimID",
            "name": "Claim",
            "textProperty": "ClaimNo",
            "primaryKey": "ID",
            "navigationProperty": "EoClaimDetails"
          }
        },
        "Parameter": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "ClaimInitiationID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "EoClaimDetails"
          }
        },
        "ClaimOrIncident": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "Parameter1": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "ClaimConvertedToID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter1",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "EoClaimDetails1"
          }
        },
        "UrbanOrRural": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "LitigationDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "ConvertedToLitigation": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "Parameter2": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "DenialCodeID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter2",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "EoClaimDetails2"
          }
        },
        "ServiceProvider": {
          "type": "object",
          "$ref": "#/definitions/ServiceProvider"
        },
        "AppraiserID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "ServiceProviders",
            "parentEntityType": "ServiceProvider",
            "type": "ServiceProvider",
            "principalKey": "ServiceProviderID",
            "name": "ServiceProvider",
            "textProperty": "Name",
            "primaryKey": "ID",
            "navigationProperty": "EoClaimDetails"
          }
        },
        "ServiceProvider1": {
          "type": "object",
          "$ref": "#/definitions/ServiceProvider"
        },
        "DutyOfCareExpertID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "ServiceProviders",
            "parentEntityType": "ServiceProvider",
            "type": "ServiceProvider",
            "principalKey": "ServiceProviderID",
            "name": "ServiceProvider1",
            "textProperty": "Name",
            "primaryKey": "ID",
            "navigationProperty": "EoClaimDetails1"
          }
        },
        "ServiceProvider2": {
          "type": "object",
          "$ref": "#/definitions/ServiceProvider"
        },
        "MediatorID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "ServiceProviders",
            "parentEntityType": "ServiceProvider",
            "type": "ServiceProvider",
            "principalKey": "ServiceProviderID",
            "name": "ServiceProvider2",
            "textProperty": "Name",
            "primaryKey": "ID",
            "navigationProperty": "EoClaimDetails2"
          }
        },
        "ServiceProvider3": {
          "type": "object",
          "$ref": "#/definitions/ServiceProvider"
        },
        "OpposingAppraiserID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "ServiceProviders",
            "parentEntityType": "ServiceProvider",
            "type": "ServiceProvider",
            "principalKey": "ServiceProviderID",
            "name": "ServiceProvider3",
            "textProperty": "Name",
            "primaryKey": "ID",
            "navigationProperty": "EoClaimDetails3"
          }
        },
        "ServiceProvider4": {
          "type": "object",
          "$ref": "#/definitions/ServiceProvider"
        },
        "OpposingDutyOfCareExpertID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "ServiceProviders",
            "parentEntityType": "ServiceProvider",
            "type": "ServiceProvider",
            "principalKey": "ServiceProviderID",
            "name": "ServiceProvider4",
            "textProperty": "Name",
            "primaryKey": "ID",
            "navigationProperty": "EoClaimDetails4"
          }
        },
        "CoverageReservationsValue": {
          "x-precision": 10,
          "type": "integer"
        },
        "InsuredLiabilityComments": {
          "type": "string",
          "length": 500
        },
        "OtherPartyExposure": {
          "type": "string",
          "length": 500
        },
        "AmountClaimed": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "RealDamages": {
          "type": "string",
          "length": 500
        },
        "IndemnityPotential": {
          "type": "string",
          "length": 100
        },
        "CurrentPlan": {
          "type": "string",
          "length": 2048
        },
        "OtherInsurance": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "Parameter3": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "TypeOfOtherInsuranceID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter3",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "EoClaimDetails3"
          }
        },
        "OtherInsuranceCompany": {
          "type": "string",
          "length": 50
        },
        "OtherInsurancePolicyNum": {
          "type": "string",
          "length": 25
        },
        "OtherInsuranceContactInfo": {
          "type": "string",
          "length": 250
        },
        "Litigation": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "Parameter4": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "TypeOfActionID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter4",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "EoClaimDetails4"
          }
        },
        "Jurisdiction": {
          "type": "string",
          "length": 100
        },
        "CourtFileNumber": {
          "type": "string",
          "length": 25
        },
        "DateLitigationServed": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "WhoIsSuing": {
          "type": "string",
          "length": 100
        },
        "MatterSetForTrial": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "OffersMade": {
          "type": "string",
          "length": 250
        },
        "CostAwardsGranted": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "DateOrderMade": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "DateCollected": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "FileOutcomeID": {
          "x-precision": 10,
          "type": "integer"
        },
        "StageSettled": {
          "x-precision": 10,
          "type": "integer"
        },
        "Parameter5": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "FirstDemandFormID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter5",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "EoClaimDetails5"
          }
        },
        "Parameter6": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "BoardJurisdictionID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter6",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "EoClaimDetails6"
          }
        },
        "Parameter7": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "LitigationTypeID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter7",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "EoClaimDetails7"
          }
        },
        "PretrialDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "TrialDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "Parameter8": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "LitigationDocumentsDeliveredID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter8",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "EoClaimDetails8"
          }
        },
        "OtherMethodOfDelivery": {
          "type": "string",
          "length": 500
        },
        "Parameter9": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "AllegationID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter9",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "EoClaimDetails9"
          }
        },
        "Parameter10": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "DeductibleHandledID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter10",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "EoClaimDetails10"
          }
        },
        "IncreasedDeductible": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "Parameter11": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "EndOfDealID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter11",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "EoClaimDetails11"
          }
        },
        "Parameter12": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "TransactionValueID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter12",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "EoClaimDetails12"
          }
        },
        "Parameter13": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "RecoveryID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter13",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "EoClaimDetails13"
          }
        },
        "ConvertedToClaimDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "Misrepresentation": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Negligence": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "NegligentMisrep": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "PunitiveAmount": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Fraud": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "OtherAmount": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "DeductibleAmount": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "RECOComplaint": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "Parameter14": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "RECOComplaintOutcomeID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter14",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "EoClaimDetails14"
          }
        },
        "Motions": {
          "type": "string",
          "length": 2000
        },
        "LitigationMiscellaneous": {
          "type": "string",
          "length": 2000
        },
        "OtherClaims": {
          "type": "string",
          "length": 500
        },
        "Parameter15": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "LitigationRoleID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter15",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "EoClaimDetails15"
          }
        },
        "NonLitigationOffers": {
          "type": "string",
          "length": 2000
        },
        "CurrentDevelopments": {
          "type": "string",
          "length": 2000
        },
        "Resolution": {
          "type": "string",
          "length": 2000
        },
        "InitialStatus": {
          "type": "string",
          "length": 150
        },
        "OtherParties": {
          "type": "string",
          "length": 500
        },
        "XRefFile": {
          "type": "string",
          "length": 500
        },
        "Conditions": {
          "type": "string",
          "length": 500
        },
        "Parameter16": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "DidDealClose": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter16",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "EoClaimDetails16"
          }
        },
        "Miscellaneous": {
          "type": "string",
          "length": 2000
        },
        "DeductibleDetails": {
          "type": "string",
          "length": 2000
        },
        "Denied": {
          "x-default-sql": "((0))",
          "type": "boolean"
        },
        "DenialComments": {
          "type": "string",
          "length": 255
        },
        "RECOComplaintDetails": {
          "type": "string",
          "length": 2000
        },
        "CostAwardsDetails": {
          "type": "string",
          "length": 2000
        },
        "DenialLetterDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        }
      }
    },
    "EoNoticeOfClaimsDetail": {
      "x-table": "dbo.EONoticeOfClaimsDetails",
      "resource": "EoNoticeOfClaimsDetails",
      "required": [
        "NoticeOfClaimID"
      ],
      "properties": {
        "NoticeOfClaim": {
          "type": "object",
          "$ref": "#/definitions/NoticeOfClaim"
        },
        "NoticeOfClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-foreignKey": {
            "parentTable": "NoticeOfClaims",
            "parentEntityType": "NoticeOfClaim",
            "type": "NoticeOfClaim",
            "principalKey": "NoticeOfClaimID",
            "name": "NoticeOfClaim",
            "textProperty": "RefNum",
            "navigationProperty": "EoNoticeOfClaimsDetails"
          }
        },
        "ClaimantName": {
          "type": "string",
          "length": 200
        },
        "Parameter": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "LitigationDocumentsDeliveredID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "EoNoticeOfClaimsDetails"
          }
        },
        "OtherMethodOfDelivery": {
          "type": "string",
          "length": 100
        },
        "GeneralNotes": {
          "type": "string",
          "length": 2000
        },
        "DateServed": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "DateAccepted": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "DateAware": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "ClaimantCorrespondenceAttached": {
          "x-default-sql": "((0))",
          "type": "boolean"
        },
        "LawyerCorrespondenceAttached": {
          "type": "boolean"
        }
      }
    },
    "ErrorDetail": {
      "x-view": true,
      "x-table": "dbo.ErrorDetails",
      "resource": "ErrorDetails",
      "required": [
        "ErrorMessage"
      ],
      "properties": {
        "ClaimNo": {
          "type": "string",
          "length": 20
        },
        "Name": {
          "type": "string",
          "length": 100
        },
        "ErrorMessage": {
          "x-nullable": false,
          "type": "string",
          "x-key": true,
          "x-virtual": true
        },
        "TimeOfError": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        }
      }
    },
    "ErrorLog": {
      "x-table": "dbo.ErrorLogs",
      "resource": "ErrorLogs",
      "required": [
        "ErrorMessage"
      ],
      "properties": {
        "ErrorLogID": {
          "x-key": true,
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "Claim": {
          "type": "object",
          "$ref": "#/definitions/Claim"
        },
        "ClaimID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Claims",
            "parentEntityType": "Claim",
            "type": "Claim",
            "principalKey": "ClaimID",
            "name": "Claim",
            "textProperty": "ClaimNo",
            "primaryKey": "ID",
            "navigationProperty": "ErrorLogs"
          }
        },
        "UserID": {
          "type": "string",
          "length": 450
        },
        "ErrorMessage": {
          "x-nullable": false,
          "type": "string"
        },
        "ErrorLogDateTime": {
          "x-default-sql": "(getdate())",
          "x-nullable": false,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        }
      }
    },
    "Expert": {
      "x-table": "dbo.Experts",
      "resource": "Experts",
      "required": [
        "ClaimID",
        "DisplayOrder",
        "ServiceProviderRoleID",
        "ServiceProviderID"
      ],
      "properties": {
        "ExpertID": {
          "x-key": true,
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "Claim": {
          "type": "object",
          "$ref": "#/definitions/Claim"
        },
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Claims",
            "parentEntityType": "Claim",
            "type": "Claim",
            "principalKey": "ClaimID",
            "name": "Claim",
            "textProperty": "ClaimNo",
            "primaryKey": "ID",
            "navigationProperty": "Experts"
          }
        },
        "DisplayOrder": {
          "x-nullable": false,
          "x-precision": 5,
          "type": "integer",
          "format": "int16"
        },
        "Parameter": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "ServiceProviderRoleID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Experts"
          }
        },
        "ServiceProvider": {
          "type": "object",
          "$ref": "#/definitions/ServiceProvider"
        },
        "ServiceProviderID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "ServiceProviders",
            "parentEntityType": "ServiceProvider",
            "type": "ServiceProvider",
            "principalKey": "ServiceProviderID",
            "name": "ServiceProvider",
            "textProperty": "Name",
            "primaryKey": "ID",
            "navigationProperty": "Experts"
          }
        },
        "Name": {
          "type": "string",
          "length": 100
        },
        "Address": {
          "type": "string",
          "length": 450
        },
        "Parameter1": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "ProvinceID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter1",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Experts1"
          }
        },
        "City": {
          "type": "string",
          "length": 100
        },
        "PostalCode": {
          "type": "string",
          "length": 7
        },
        "EmailAddress": {
          "type": "string",
          "length": 450
        },
        "BusinessPhoneNum": {
          "type": "string",
          "length": 15
        },
        "CellPhoneNum": {
          "type": "string",
          "length": 15
        },
        "FaxNum": {
          "type": "string",
          "length": 15
        },
        "Parameter2": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "PreferredCommunicationMethodID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter2",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Experts2"
          }
        },
        "Firm": {
          "type": "object",
          "$ref": "#/definitions/Firm"
        },
        "FirmID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Firms",
            "parentEntityType": "Firm",
            "type": "Firm",
            "principalKey": "FirmID",
            "name": "Firm",
            "textProperty": "Name",
            "primaryKey": "ID",
            "navigationProperty": "Experts"
          }
        }
      }
    },
    "File": {
      "x-table": "dbo.Files",
      "resource": "Files",
      "required": [
        "ID",
        "ClaimID",
        "EntryDate",
        "Subject",
        "StoredDocument",
        "Filename"
      ],
      "properties": {
        "ID": {
          "x-key": true,
          "x-nullable": false,
          "type": "string",
          "format": "uuid"
        },
        "FileID": {
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-navigation": [
            {
              "inversePropertyName": "File",
              "name": "ClaimReports",
              "type": "ClaimReport"
            }
          ]
        },
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "EntryDate": {
          "x-nullable": false,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "Subject": {
          "x-nullable": false,
          "type": "string",
          "length": 255
        },
        "VisibleTo": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "UploadedById": {
          "type": "string",
          "length": 450
        },
        "FileTypeID": {
          "x-precision": 10,
          "type": "integer"
        },
        "LargeLoss": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "Sticky": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "StoredDocument": {
          "x-nullable": false,
          "type": "string",
          "format": "binary"
        },
        "Filename": {
          "x-nullable": false,
          "type": "string",
          "length": 1000
        },
        "Extension": {
          "type": "string",
          "length": 15
        },
        "Filesize": {
          "x-computed": true,
          "x-precision": 19,
          "type": "integer",
          "format": "int64"
        },
        "ContentType": {
          "type": "string",
          "length": 255
        },
        "Confidential": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "VisibleToCounsel": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "Comments": {
          "type": "string"
        },
        "HashedFilename": {
          "x-computed": true,
          "type": "string",
          "format": "binary"
        },
        "FileDescription": {
          "type": "string",
          "length": 255
        },
        "Filesize2": {
          "x-computed": true,
          "type": "string",
          "length": 100
        }
      }
    },
    "FileDetail": {
      "x-view": true,
      "x-table": "dbo.FileDetails",
      "resource": "FileDetails",
      "required": [
        "Subject",
        "VisibleToCounsel",
        "LargeLoss",
        "Sticky",
        "Confidential",
        "FileID",
        "ID",
        "Filename",
        "ClaimNo",
        "EntryDate"
      ],
      "properties": {
        "Subject": {
          "x-nullable": false,
          "type": "string",
          "length": 255,
          "x-key": true,
          "x-virtual": true
        },
        "VisibleToCounsel": {
          "x-nullable": false,
          "type": "boolean"
        },
        "FileTypeID": {
          "x-precision": 10,
          "type": "integer"
        },
        "LargeLoss": {
          "x-nullable": false,
          "type": "boolean"
        },
        "Sticky": {
          "x-nullable": false,
          "type": "boolean"
        },
        "Confidential": {
          "x-nullable": false,
          "type": "boolean"
        },
        "Comments": {
          "type": "string"
        },
        "FileID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "ID": {
          "x-nullable": false,
          "type": "string",
          "format": "uuid"
        },
        "Extension": {
          "type": "string",
          "length": 15
        },
        "Filename": {
          "x-nullable": false,
          "type": "string",
          "length": 1000
        },
        "FileDescription": {
          "type": "string",
          "length": 255
        },
        "HashedFilename": {
          "type": "string",
          "format": "binary"
        },
        "ClaimNo": {
          "x-nullable": false,
          "type": "string",
          "length": 20
        },
        "EntryDate": {
          "x-nullable": false,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        }
      }
    },
    "FileRoleDetail": {
      "x-view": true,
      "x-table": "dbo.FileRoleDetails",
      "resource": "FileRoleDetails",
      "required": [
        "ID",
        "FileID",
        "RoleID"
      ],
      "properties": {
        "ID": {
          "x-nullable": false,
          "type": "string",
          "format": "uuid",
          "x-key": true,
          "x-virtual": true
        },
        "FileID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "AspNetRoleId": {
          "type": "string",
          "length": 450
        },
        "Name": {
          "type": "string",
          "length": 255
        },
        "RoleID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        }
      }
    },
    "FilesRole": {
      "x-table": "dbo.FilesRoles",
      "resource": "FilesRoles",
      "required": [
        "FileID",
        "RoleID"
      ],
      "properties": {
        "Id": {
          "x-key": true,
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "FileID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "Role": {
          "type": "object",
          "$ref": "#/definitions/Role"
        },
        "RoleID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Roles",
            "parentEntityType": "Role",
            "type": "Role",
            "principalKey": "Id",
            "name": "Role",
            "textProperty": "AspNetRoleId",
            "navigationProperty": "FilesRoles"
          }
        }
      }
    },
    "FindOpenFilesForRegistrant": {
      "x-view": "sp",
      "x-table": "dbo.FindOpenFilesForRegistrant",
      "x-parameters": [
        {
          "name": "ClaimID",
          "type": "integer"
        }
      ],
      "resource": "FindOpenFilesForRegistrants",
      "required": [
        "ClaimNo",
        "FileHandler"
      ],
      "properties": {
        "ClaimNo": {
          "x-nullable": false,
          "type": "string",
          "length": 40,
          "x-key": true,
          "x-virtual": true
        },
        "FilehandlerEmail": {
          "type": "string",
          "length": 900
        },
        "FileHandler": {
          "x-nullable": false,
          "type": "string",
          "length": 200
        },
        "ParamValue": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Name": {
          "type": "string",
          "length": 200
        },
        "PaidClaimNo": {
          "x-computed": true,
          "type": "string",
          "length": 100
        },
        "RegistrantNo": {
          "type": "string",
          "length": 14
        },
        "ParamAbbrev": {
          "type": "string",
          "length": 12
        }
      }
    },
    "FindServiceProviderByIdentityUser": {
      "x-view": "sp",
      "x-table": "dbo.FindServiceProviderByIdentityUser",
      "x-parameters": [
        {
          "name": "UserID",
          "type": "string",
          "size": 900
        }
      ],
      "resource": "FindServiceProviderByIdentityUsers",
      "required": [],
      "properties": {
        "ServiceProviderID": {
          "x-computed": true,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        }
      }
    },
    "Firm": {
      "x-table": "dbo.Firms",
      "resource": "Firms",
      "required": [
        "Name",
        "FirmTypeID"
      ],
      "properties": {
        "ID": {
          "x-key": true,
          "x-default-sql": "(newid())",
          "x-nullable": false,
          "type": "string",
          "format": "uuid"
        },
        "FirmID": {
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-navigation": [
            {
              "inversePropertyName": "Firm",
              "name": "Experts",
              "type": "Expert"
            },
            {
              "inversePropertyName": "Firm",
              "name": "InvoiceUploadFiles",
              "type": "InvoiceUploadFile"
            },
            {
              "inversePropertyName": "Firm",
              "name": "ServiceProviders",
              "type": "ServiceProvider"
            },
            {
              "inversePropertyName": "Firm",
              "name": "Transactions",
              "type": "Transaction"
            },
            {
              "inversePropertyName": "Firm",
              "name": "ClaimReports",
              "type": "ClaimReport"
            }
          ]
        },
        "Name": {
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "Parameter": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "FirmTypeID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Firms"
          }
        },
        "Experts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Expert"
          }
        },
        "InvoiceUploadFiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvoiceUploadFile"
          }
        },
        "ServiceProviders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceProvider"
          }
        },
        "Transactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Transaction"
          }
        },
        "ClaimReports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimReport"
          }
        }
      }
    },
    "FirmDetail": {
      "x-view": true,
      "x-table": "dbo.FirmDetails",
      "resource": "FirmDetails",
      "required": [
        "FirmID",
        "Name",
        "FirmTypeID",
        "FirmType",
        "IndemnityType"
      ],
      "properties": {
        "FirmID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        },
        "Name": {
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "FirmTypeID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "FirmType": {
          "x-nullable": false,
          "type": "string",
          "length": 50
        },
        "IndemnityType": {
          "x-nullable": false,
          "type": "string",
          "length": 9
        }
      }
    },
    "FullBordereau": {
      "x-view": "sp",
      "x-table": "dbo.FullBordereau",
      "x-parameters": [
        {
          "name": "ReportDate",
          "type": "string",
          "format": "date-time",
          "size": 8
        }
      ],
      "resource": "FullBordereaus",
      "required": [
        "ProgramID",
        "ClaimNo",
        "ProgramName",
        "ContractYear",
        "EntryDate"
      ],
      "properties": {
        "ProgramID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        },
        "ClaimNo": {
          "x-nullable": false,
          "type": "string",
          "length": 40
        },
        "AdjusterClaimNo": {
          "type": "string",
          "length": 100
        },
        "ProgramName": {
          "x-original-name": "Program Name",
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "ContractYear": {
          "x-original-name": "Contract Year",
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "ClaimStatus": {
          "x-original-name": "Claim Status",
          "type": "string",
          "length": 100
        },
        "Insureds": {
          "x-computed": true,
          "type": "string"
        },
        "Claimants": {
          "x-computed": true,
          "type": "string"
        },
        "Address": {
          "x-computed": true,
          "type": "string"
        },
        "AmountClaimed": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Adjuster": {
          "type": "string",
          "length": 200
        },
        "DefenseCounsel": {
          "x-original-name": "Defense Counsel",
          "type": "string",
          "length": 200
        },
        "CounselFileNo": {
          "type": "string",
          "length": 100
        },
        "CoverageCounsel": {
          "x-original-name": "Coverage Counsel",
          "type": "string",
          "length": 200
        },
        "FileHandler": {
          "x-original-name": "File Handler",
          "type": "string",
          "length": 200
        },
        "ClaimantSolicitors": {
          "x-computed": true,
          "type": "string"
        },
        "ClaimantSolicitorFirms": {
          "x-computed": true,
          "type": "string"
        },
        "Brokerage": {
          "x-computed": true,
          "type": "string",
          "length": 200
        },
        "Broker1": {
          "x-computed": true,
          "type": "string",
          "length": 200
        },
        "ClaimType": {
          "type": "string",
          "length": 100
        },
        "BrokerageTransactionRole": {
          "x-original-name": "Brokerage Transaction Role",
          "type": "string",
          "length": 100
        },
        "CloseDate": {
          "x-precision": 23,
          "x-scale": 3,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "EntryDate": {
          "x-nullable": false,
          "x-precision": 23,
          "x-scale": 3,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "ClaimDate": {
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "AgreementDate": {
          "x-computed": true,
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "ReportDate": {
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "ClaimPaidDate": {
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "LapseDate": {
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "ServedDate": {
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "ApplicableParty": {
          "x-original-name": "Applicable Party",
          "type": "string",
          "length": 100
        },
        "LossCause": {
          "x-original-name": "Loss Cause",
          "type": "string",
          "length": 100
        },
        "OccurrenceNo": {
          "type": "string",
          "length": 30
        },
        "ValueOfTransaction": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpectedPayout": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustedGrossClaim": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "CoverageIssue": {
          "x-original-name": "Coverage Issue",
          "x-computed": true,
          "x-nullable": false,
          "type": "string",
          "length": 3
        },
        "NotYetReported": {
          "x-original-name": "Not Yet Reported",
          "x-computed": true,
          "x-nullable": false,
          "type": "string",
          "length": 3
        },
        "ClassAction": {
          "x-original-name": "Class Action",
          "x-computed": true,
          "x-nullable": false,
          "type": "string",
          "length": 3
        },
        "LitigationType": {
          "type": "string",
          "length": 100
        },
        "ClaimDescription": {
          "type": "string",
          "length": 2000
        },
        "IndemnityReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "IndemnityPayment": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalPayment": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingPayment": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpenseReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpensePayment": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Deductible": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Subrogation": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalPayment": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalRecovery": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalIncurred": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "FullBordereauReco": {
      "x-view": "sp",
      "x-table": "dbo.FullBordereau_RECO",
      "x-parameters": [
        {
          "name": "ReportDate",
          "type": "string",
          "format": "date-time",
          "size": 8
        }
      ],
      "resource": "FullBordereauRecos",
      "required": [
        "ContractYear",
        "ClaimNo",
        "Program",
        "CoverageIssue",
        "StatusofFunds",
        "ClaimorIncident"
      ],
      "properties": {
        "ContractYear": {
          "x-original-name": "Contract Year",
          "x-nullable": false,
          "type": "string",
          "length": 100,
          "x-key": true,
          "x-virtual": true
        },
        "ClaimNo": {
          "x-nullable": false,
          "type": "string",
          "length": 40
        },
        "AdjusterClaimNo": {
          "type": "string",
          "length": 100
        },
        "Registrants": {
          "type": "string"
        },
        "RegistrantNumbers": {
          "type": "string"
        },
        "RegistrantEmail": {
          "type": "string"
        },
        "Broker": {
          "type": "string",
          "length": 200
        },
        "Claimant": {
          "type": "string"
        },
        "ClaimantEmailAddress": {
          "x-original-name": "Claimant Email Address",
          "type": "string"
        },
        "Program": {
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "Status": {
          "type": "string",
          "length": 100
        },
        "CoverageIssue": {
          "x-original-name": "Coverage Issue",
          "x-nullable": false,
          "type": "string",
          "length": 3
        },
        "DefenseCounsel": {
          "x-original-name": "Defense Counsel",
          "type": "string",
          "length": 200
        },
        "DefenseFirm": {
          "x-original-name": "Defense Firm",
          "x-precision": 10,
          "type": "integer"
        },
        "Adjuster": {
          "type": "string",
          "length": 200
        },
        "AdjustingFirm": {
          "x-original-name": "Adjusting Firm",
          "type": "string",
          "length": 200
        },
        "FileHandler": {
          "x-original-name": "File Handler",
          "type": "string",
          "length": 200
        },
        "CoverageCounsel": {
          "x-original-name": "Coverage Counsel",
          "type": "string",
          "length": 200
        },
        "CoverageFirm": {
          "x-original-name": "Coverage Firm",
          "type": "string",
          "length": 200
        },
        "ClaimDate": {
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "AgreementDate": {
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "ReportDate": {
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "CloseDate": {
          "x-precision": 23,
          "x-scale": 3,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "AmountOfClaim": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "StatusofFunds": {
          "x-original-name": "Status of Funds",
          "x-nullable": false,
          "type": "string",
          "length": 3
        },
        "IndemnityReserve": {
          "x-original-name": "Indemnity Reserve",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalReserve": {
          "x-original-name": "Legal Reserve",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingReserve": {
          "x-original-name": "Adjusting Reserve",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalReserve": {
          "x-original-name": "Total Reserve",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "IndemnityPaid": {
          "x-original-name": "Indemnity Paid",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalPaid": {
          "x-original-name": "Legal Paid",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalFees": {
          "x-original-name": "Legal Fees",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalDisbursements": {
          "x-original-name": "Legal Disbursements",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalTaxes": {
          "x-original-name": "Legal Taxes",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjusingPaid": {
          "x-original-name": "Adjusing Paid",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjusterFees": {
          "x-original-name": "Adjuster Fees",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjusterDisbursements": {
          "x-original-name": "Adjuster Disbursements",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjusterTaxes": {
          "x-original-name": "Adjuster Taxes",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalPaid": {
          "x-original-name": "Total Paid",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Deductible": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Subrogation": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalIncurred": {
          "x-original-name": "Total Incurred",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TransactionType": {
          "type": "string",
          "length": 100
        },
        "TransactionValue": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "UrbanOrRural": {
          "type": "string",
          "length": 5
        },
        "CurrentClaimStatus": {
          "x-original-name": "Current Claim Status",
          "type": "string",
          "length": 100
        },
        "ClaimorIncident": {
          "x-original-name": "Claim or Incident",
          "x-nullable": false,
          "type": "string",
          "length": 8
        },
        "ConvertedToLitigation": {
          "x-original-name": "Converted To Litigation",
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "ClaimInitiation": {
          "x-original-name": "Claim Initiation",
          "type": "string",
          "length": 100
        },
        "LapseDate": {
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "EndofDealReason": {
          "x-original-name": "End of Deal Reason",
          "type": "string",
          "length": 100
        },
        "DeniedReason": {
          "x-original-name": "Denied Reason",
          "type": "string",
          "length": 100
        },
        "TradeAddress": {
          "type": "string",
          "length": 900
        },
        "TradeCity": {
          "type": "string",
          "length": 200
        },
        "TradeProvince": {
          "type": "string",
          "length": 100
        },
        "TradePostalCode": {
          "type": "string",
          "length": 14
        },
        "LossCauseDesc": {
          "x-original-name": "Loss Cause Desc",
          "type": "string",
          "length": 100
        },
        "LossCauseTags": {
          "type": "string"
        },
        "ClaimDescription": {
          "type": "string",
          "length": 2000
        },
        "LastExaminerDiary": {
          "x-original-name": "Last Examiner Diary",
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "AvgYearsofExperience": {
          "x-original-name": "Avg Years of Experience",
          "x-precision": 10,
          "type": "integer"
        },
        "ApplicableParty": {
          "type": "string",
          "length": 100
        }
      }
    },
    "FullClaimStatusHistory": {
      "x-view": true,
      "x-table": "dbo.FullClaimStatusHistory",
      "resource": "FullClaimStatusHistories",
      "required": [
        "ClaimID",
        "ClaimStatus"
      ],
      "properties": {
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        },
        "ClaimStatus": {
          "x-original-name": "Claim Status",
          "x-nullable": false,
          "type": "string",
          "length": 50
        },
        "StatusChangeDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "NewStatusID": {
          "x-precision": 10,
          "type": "integer"
        }
      }
    },
    "GeneralSetting": {
      "x-table": "dbo.GeneralSettings",
      "resource": "GeneralSettings",
      "required": [
        "FiscalYear"
      ],
      "properties": {
        "ID": {
          "x-key": true,
          "x-default-sql": "(newid())",
          "x-nullable": false,
          "type": "string",
          "format": "uuid"
        },
        "OccurrenceMade": {
          "x-default-sql": "((1))",
          "x-nullable": false,
          "type": "boolean"
        },
        "FiscalYear": {
          "x-nullable": false,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "SeparateIncidents": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "ShowLegal": {
          "x-nullable": false,
          "type": "boolean"
        },
        "ShowTradeFlags": {
          "x-nullable": false,
          "type": "boolean"
        },
        "LocationName": {
          "type": "string",
          "length": 25
        },
        "TradeTypeName": {
          "type": "string",
          "length": 25
        },
        "ShowExpense": {
          "x-nullable": false,
          "type": "boolean"
        },
        "ShowAdjusting": {
          "x-nullable": false,
          "type": "boolean"
        },
        "ShowRecovery": {
          "x-nullable": false,
          "type": "boolean"
        },
        "ApplicationName": {
          "type": "string",
          "length": 50
        },
        "ClaimantName": {
          "type": "string",
          "length": 25
        },
        "ContractYear": {
          "type": "string",
          "length": 25
        },
        "Active": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "BrokerOfRecordName": {
          "type": "string",
          "length": 50
        },
        "IncidentName": {
          "type": "string",
          "length": 50
        },
        "LossCauseName": {
          "type": "string",
          "length": 50
        },
        "SubrogationName": {
          "type": "string",
          "length": 50
        },
        "FloatAccount": {
          "type": "string",
          "length": 50
        },
        "ClaimInitiation": {
          "type": "string",
          "length": 50
        },
        "Host": {
          "type": "string",
          "length": 255
        },
        "Port": {
          "x-precision": 10,
          "type": "integer"
        },
        "UseSSL": {
          "x-default-sql": "((1))",
          "x-nullable": false,
          "type": "boolean"
        },
        "SystemEmail": {
          "type": "string",
          "length": 512
        },
        "SystemNameFrom": {
          "type": "string",
          "length": 255
        },
        "SystemEmailPassword": {
          "type": "string",
          "length": 512
        },
        "BindEmailToClaimEmail": {
          "type": "string",
          "length": 512
        },
        "BindEmailToClaimPassword": {
          "type": "string",
          "length": 512
        },
        "BindAttachmentsToClaimEmail": {
          "type": "string",
          "length": 512
        },
        "BindAttachmentsToClaimPassword": {
          "type": "string",
          "length": 512
        },
        "AllowAnonymousProcessing": {
          "x-nullable": false,
          "type": "boolean"
        },
        "ImapHost": {
          "type": "string",
          "length": 255
        },
        "ImapPort": {
          "x-precision": 10,
          "type": "integer"
        },
        "SystemClientID": {
          "type": "string",
          "length": 50
        },
        "SystemTenantID": {
          "type": "string",
          "length": 50
        },
        "SystemSecretKey": {
          "type": "string",
          "length": 255
        },
        "SystemObjectID": {
          "type": "string",
          "length": 50
        },
        "BindEmailObjectID": {
          "type": "string",
          "length": 50
        },
        "BindAttachmentsObjectID": {
          "type": "string",
          "length": 50
        }
      }
    },
    "GenerateClaimNumber": {
      "x-view": "sp",
      "x-table": "dbo.GenerateClaimNumber",
      "x-parameters": [
        {
          "name": "ProgramID",
          "type": "integer"
        },
        {
          "name": "ContractYear",
          "type": "integer"
        },
        {
          "name": "SelectedOccurrence",
          "type": "integer"
        },
        {
          "name": "IsIncident",
          "type": "boolean"
        }
      ],
      "resource": "GenerateClaimNumbers",
      "required": [],
      "properties": {
        "NewNumber": {
          "x-computed": true,
          "type": "string",
          "length": 100,
          "x-key": true,
          "x-virtual": true
        }
      }
    },
    "GenerateNewClaimantClaim": {
      "x-view": "sp",
      "x-table": "dbo.GenerateNewClaimantClaim",
      "x-parameters": [
        {
          "name": "MasterFileID",
          "type": "integer"
        },
        {
          "name": "ClaimantID",
          "type": "integer"
        },
        {
          "name": "UserID",
          "type": "string",
          "size": 900
        }
      ],
      "resource": "GenerateNewClaimantClaims",
      "required": [],
      "properties": {
        "NewClaimID": {
          "x-computed": true,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        }
      }
    },
    "GenerateNewClaimantTradeClaim": {
      "x-view": "sp",
      "x-table": "dbo.GenerateNewClaimantTradeClaim",
      "x-parameters": [
        {
          "name": "MasterClaimID",
          "type": "integer"
        },
        {
          "name": "ClaimantID",
          "type": "integer"
        },
        {
          "name": "ReportDate",
          "type": "string",
          "format": "date-time",
          "size": 8
        },
        {
          "name": "UserID",
          "type": "string",
          "size": 900
        }
      ],
      "resource": "GenerateNewClaimantTradeClaims",
      "required": [],
      "properties": {
        "NewClaimID": {
          "x-computed": true,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        }
      }
    },
    "GenerateNewOccurrence": {
      "x-view": "sp",
      "x-table": "dbo.GenerateNewOccurrence",
      "x-parameters": [
        {
          "name": "ProgramID",
          "type": "integer"
        },
        {
          "name": "ContractYear",
          "type": "integer"
        },
        {
          "name": "UserID",
          "type": "string",
          "size": 900
        }
      ],
      "resource": "GenerateNewOccurrences",
      "required": [],
      "properties": {
        "NewOccurrenceID": {
          "x-computed": true,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        },
        "NewClaimID": {
          "x-computed": true,
          "x-precision": 10,
          "type": "integer"
        }
      }
    },
    "GetAvailableServiceProvider": {
      "x-view": "sp",
      "x-table": "dbo.GetAvailableServiceProviders",
      "x-parameters": [
        {
          "name": "ClaimID",
          "type": "integer"
        }
      ],
      "resource": "GetAvailableServiceProviders",
      "required": [
        "ServiceProviderID",
        "Name",
        "ID"
      ],
      "properties": {
        "ServiceProviderID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        },
        "Name": {
          "x-nullable": false,
          "type": "string",
          "length": 200
        },
        "EmailAddress": {
          "type": "string",
          "length": 900
        },
        "FirmName": {
          "x-original-name": "Firm Name",
          "type": "string",
          "length": 200
        },
        "FirmType": {
          "x-original-name": "Firm Type",
          "type": "string",
          "length": 100
        },
        "BusinessPhoneNum": {
          "type": "string",
          "length": 50
        },
        "ServiceProviderRole": {
          "x-original-name": "Service Provider Role",
          "x-computed": true,
          "type": "string",
          "length": 100
        },
        "NameandFirm": {
          "x-original-name": "Name and Firm",
          "x-computed": true,
          "x-nullable": false,
          "type": "string",
          "length": 406
        },
        "UserID": {
          "type": "string",
          "length": 900
        },
        "FirmID": {
          "x-precision": 10,
          "type": "integer"
        },
        "SystemRole": {
          "type": "string",
          "length": 512
        },
        "ID": {
          "x-nullable": false,
          "type": "string",
          "format": "uuid"
        },
        "Active": {
          "x-precision": 1,
          "type": "boolean"
        },
        "FileHandler": {
          "x-precision": 1,
          "type": "boolean"
        }
      }
    },
    "GetFileById": {
      "x-view": "sp",
      "x-table": "dbo.GetFileById",
      "x-parameters": [
        {
          "name": "Id",
          "type": "string",
          "format": "uuid",
          "size": 16
        }
      ],
      "resource": "GetFileByIds",
      "required": [
        "FileID",
        "StoredDocument",
        "Filename"
      ],
      "properties": {
        "ID": {
          "type": "string",
          "format": "uuid"
        },
        "FileID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        },
        "ClaimID": {
          "x-precision": 10,
          "type": "integer"
        },
        "UploadedById": {
          "type": "string",
          "length": 900
        },
        "FileTypeID": {
          "x-precision": 10,
          "type": "integer"
        },
        "StoredDocument": {
          "x-nullable": false,
          "type": "string",
          "format": "binary"
        },
        "Filename": {
          "x-nullable": false,
          "type": "string",
          "length": 2000
        },
        "ContentType": {
          "type": "string",
          "length": 510
        },
        "Subject": {
          "type": "string",
          "length": 510
        }
      }
    },
    "GetHigherRankedRole": {
      "x-view": "sp",
      "x-table": "dbo.GetHigherRankedRoles",
      "x-parameters": [
        {
          "name": "UserID",
          "type": "string",
          "size": 900
        }
      ],
      "resource": "GetHigherRankedRoles",
      "required": [
        "Id"
      ],
      "properties": {
        "Id": {
          "x-key": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-virtual": true
        },
        "Name": {
          "type": "string",
          "length": 510
        }
      }
    },
    "GetLowerRankedRole": {
      "x-view": "sp",
      "x-table": "dbo.GetLowerRankedRoles",
      "x-parameters": [
        {
          "name": "UserID",
          "type": "string",
          "size": 900
        }
      ],
      "resource": "GetLowerRankedRoles",
      "required": [
        "Id"
      ],
      "properties": {
        "Id": {
          "x-key": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-virtual": true
        },
        "Name": {
          "type": "string",
          "length": 510
        }
      }
    },
    "GetMaxDiaryTemplateDisplayOrder": {
      "x-view": "sp",
      "x-table": "dbo.GetMaxDiaryTemplateDisplayOrder",
      "resource": "GetMaxDiaryTemplateDisplayOrders",
      "required": [],
      "properties": {
        "MaxDisplayOrder": {
          "x-computed": true,
          "x-precision": 5,
          "type": "integer",
          "format": "int16",
          "x-key": true,
          "x-virtual": true
        }
      }
    },
    "GetNextClaimantOrderNum": {
      "x-view": "sp",
      "x-table": "dbo.GetNextClaimantOrderNum",
      "x-parameters": [
        {
          "name": "claimid",
          "type": "integer"
        }
      ],
      "resource": "GetNextClaimantOrderNums",
      "required": [],
      "properties": {
        "newOrderNum": {
          "x-computed": true,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        }
      }
    },
    "GetNextInsuredOrderNum": {
      "x-view": "sp",
      "x-table": "dbo.GetNextInsuredOrderNum",
      "x-parameters": [
        {
          "name": "claimid",
          "type": "integer"
        }
      ],
      "resource": "GetNextInsuredOrderNums",
      "required": [],
      "properties": {
        "newInsuredOrderNum": {
          "x-computed": true,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        }
      }
    },
    "GetReportDate": {
      "x-view": "sp",
      "x-table": "dbo.GetReportDate",
      "x-parameters": [
        {
          "name": "ServiceProviderID",
          "type": "integer"
        }
      ],
      "resource": "GetReportDates",
      "required": [],
      "properties": {
        "StartDate": {
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date",
          "x-key": true,
          "x-virtual": true
        },
        "ReportDate": {
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        }
      }
    },
    "GetSevenYearsClaimIndemnity": {
      "x-view": "sp",
      "x-table": "dbo.GetSevenYearsClaimIndemnity",
      "x-parameters": [
        {
          "name": "ClaimID",
          "type": "integer"
        }
      ],
      "resource": "GetSevenYearsClaimIndemnities",
      "required": [
        "ClaimNo",
        "ClaimID"
      ],
      "properties": {
        "ClaimNo": {
          "x-nullable": false,
          "type": "string",
          "length": 40,
          "x-key": true,
          "x-virtual": true
        },
        "ContractYear": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "IndemnityReserve": {
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "IndemnityPayment": {
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "Insured": {
      "x-table": "dbo.Insureds",
      "resource": "Insureds",
      "required": [
        "ClaimID",
        "DisplayOrder"
      ],
      "properties": {
        "Claim": {
          "type": "object",
          "$ref": "#/definitions/Claim"
        },
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Claims",
            "parentEntityType": "Claim",
            "type": "Claim",
            "principalKey": "ClaimID",
            "name": "Claim",
            "textProperty": "ClaimNo",
            "primaryKey": "ID",
            "navigationProperty": "Insureds"
          }
        },
        "Registrant": {
          "type": "object",
          "$ref": "#/definitions/Registrant"
        },
        "RegistrantID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Registrants",
            "parentEntityType": "Registrant",
            "type": "Registrant",
            "principalKey": "RegistrantID",
            "name": "Registrant",
            "textProperty": "Name",
            "primaryKey": "ID",
            "navigationProperty": "Insureds"
          }
        },
        "DisplayOrder": {
          "x-nullable": false,
          "x-precision": 5,
          "type": "integer",
          "format": "int16"
        },
        "TransactionRoleID": {
          "x-precision": 10,
          "type": "integer"
        },
        "InsuredID": {
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-navigation": [
            {
              "inversePropertyName": "Insured",
              "name": "InsuredLitigationRoles",
              "type": "InsuredLitigationRole"
            }
          ]
        },
        "ID": {
          "x-key": true,
          "x-default-sql": "(newid())",
          "x-nullable": false,
          "type": "string",
          "format": "uuid"
        },
        "Name": {
          "type": "string",
          "length": 100
        },
        "Address": {
          "type": "string",
          "length": 450
        },
        "ProvinceID": {
          "x-precision": 10,
          "type": "integer"
        },
        "City": {
          "type": "string",
          "length": 100
        },
        "PostalCode": {
          "type": "string",
          "length": 7
        },
        "EmailAddress": {
          "type": "string",
          "length": 450
        },
        "BusinessPhoneNum": {
          "type": "string",
          "length": 50
        },
        "CellPhoneNum": {
          "type": "string",
          "length": 50
        },
        "FaxNum": {
          "type": "string",
          "length": 50
        },
        "Parameter": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "PreferredCommunicationMethodID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Insureds"
          }
        },
        "Brokerage": {
          "type": "object",
          "$ref": "#/definitions/Brokerage"
        },
        "BrokerageID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Brokerages",
            "parentEntityType": "Brokerage",
            "type": "Brokerage",
            "principalKey": "BrokerageID",
            "name": "Brokerage",
            "textProperty": "Name",
            "navigationProperty": "Insureds"
          }
        },
        "BrokerageName": {
          "type": "string",
          "length": 100
        },
        "BrokerageAddress": {
          "type": "string",
          "length": 1000
        },
        "Parameter1": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "BrokerageProvinceID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter1",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Insureds1"
          }
        },
        "BrokerageCity": {
          "type": "string",
          "length": 100
        },
        "BrokeragePostalCode": {
          "type": "string",
          "length": 7
        },
        "BrokerageEmailAddress": {
          "type": "string",
          "length": 450
        },
        "BrokerageBusinessPhoneNum": {
          "type": "string",
          "length": 50
        },
        "BrokerOfRecord": {
          "type": "string",
          "length": 100
        },
        "BrokerageContactPerson": {
          "type": "string",
          "length": 100
        },
        "BrokerageContactEmail": {
          "type": "string",
          "length": 450
        },
        "BrokerageContactPhoneNum": {
          "type": "string",
          "length": 50
        },
        "PrimaryInsured": {
          "x-default-sql": "((0))",
          "type": "boolean"
        },
        "InsuredLitigationRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InsuredLitigationRole"
          }
        }
      }
    },
    "InsuredLitigationRole": {
      "x-table": "dbo.InsuredLitigationRoles",
      "resource": "InsuredLitigationRoles",
      "required": [
        "InsuredID",
        "LitigationRoleID"
      ],
      "properties": {
        "Insured": {
          "type": "object",
          "$ref": "#/definitions/Insured"
        },
        "InsuredID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-foreignKey": {
            "parentTable": "Insureds",
            "parentEntityType": "Insured",
            "type": "Insured",
            "principalKey": "InsuredID",
            "name": "Insured",
            "textProperty": "Name",
            "primaryKey": "ID",
            "navigationProperty": "InsuredLitigationRoles"
          }
        },
        "Parameter": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "LitigationRoleID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "InsuredLitigationRoles"
          }
        }
      }
    },
    "InvoiceUpload": {
      "x-table": "dbo.InvoiceUpload",
      "resource": "InvoiceUploads",
      "required": [],
      "properties": {
        "InvoiceUploadID": {
          "x-key": true,
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "InsuredLastName": {
          "type": "string",
          "length": 255
        },
        "ClaimNo": {
          "type": "string",
          "length": 255
        },
        "FileNo": {
          "type": "string",
          "length": 255
        },
        "Fees": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Disbursements": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Taxes": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Total": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "PayAndClose": {
          "type": "string",
          "length": 2
        },
        "RowNumber": {
          "x-precision": 10,
          "type": "integer"
        },
        "ClaimID": {
          "x-precision": 10,
          "type": "integer"
        }
      }
    },
    "InvoiceUploadFile": {
      "x-table": "dbo.InvoiceUploadFiles",
      "resource": "InvoiceUploadFiles",
      "required": [
        "Filename",
        "FirmID",
        "UploadDate",
        "UploadedByID",
        "StoredInvoice",
        "ContentType"
      ],
      "properties": {
        "FileID": {
          "x-key": true,
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "Filename": {
          "x-nullable": false,
          "type": "string",
          "length": 4000
        },
        "Firm": {
          "type": "object",
          "$ref": "#/definitions/Firm"
        },
        "FirmID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Firms",
            "parentEntityType": "Firm",
            "type": "Firm",
            "principalKey": "FirmID",
            "name": "Firm",
            "textProperty": "Name",
            "primaryKey": "ID",
            "navigationProperty": "InvoiceUploadFiles"
          }
        },
        "UploadDate": {
          "x-nullable": false,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "UploadedByID": {
          "x-nullable": false,
          "type": "string",
          "length": 450
        },
        "StoredInvoice": {
          "x-nullable": false,
          "type": "string",
          "format": "binary"
        },
        "ContentType": {
          "x-nullable": false,
          "type": "string",
          "length": 255
        },
        "Filesize": {
          "x-computed": true,
          "x-precision": 19,
          "type": "integer",
          "format": "int64"
        },
        "GeneratedInvoice": {
          "type": "string",
          "format": "binary"
        },
        "GeneratedInvoiceContentType": {
          "type": "string",
          "length": 255
        },
        "GeneratedInvoiceFilesize": {
          "x-computed": true,
          "x-precision": 19,
          "type": "integer",
          "format": "int64"
        },
        "GeneratedInvoiceFilename": {
          "type": "string",
          "length": 4000
        }
      }
    },
    "InvoiceUploadRowError": {
      "x-table": "dbo.InvoiceUploadRowErrors",
      "resource": "InvoiceUploadRowErrors",
      "required": [
        "RowNumber",
        "Problem"
      ],
      "properties": {
        "ErrorID": {
          "x-key": true,
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "RowNumber": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "Problem": {
          "x-nullable": false,
          "type": "string",
          "length": 1000
        }
      }
    },
    "IssueReporting": {
      "x-table": "dbo.IssueReporting",
      "resource": "IssueReportings",
      "required": [
        "DateEntered",
        "EnteredById",
        "Subject",
        "IssueStatusID"
      ],
      "properties": {
        "IssueReportingID": {
          "x-key": true,
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "DateEntered": {
          "x-nullable": false,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "EnteredById": {
          "x-nullable": false,
          "type": "string",
          "length": 450
        },
        "Subject": {
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "Issue": {
          "type": "string"
        },
        "AttachedFile": {
          "type": "string",
          "format": "binary"
        },
        "Filename": {
          "type": "string",
          "length": 1000
        },
        "Parameter": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "IssueStatusID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "IssueReportings"
          }
        }
      }
    },
    "LargeLossBordereau": {
      "x-view": "sp",
      "x-table": "dbo.LargeLossBordereau",
      "x-parameters": [
        {
          "name": "ReportDate",
          "type": "string",
          "format": "date-time",
          "size": 8
        }
      ],
      "resource": "LargeLossBordereaus",
      "required": [
        "ClaimID",
        "ClaimNo",
        "ProgramID",
        "ProgramName",
        "ContractYearID",
        "ContractYear",
        "EntryDate"
      ],
      "properties": {
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        },
        "ClaimNo": {
          "x-nullable": false,
          "type": "string",
          "length": 40
        },
        "AdjusterClaimNo": {
          "type": "string",
          "length": 100
        },
        "ProgramID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "ProgramName": {
          "x-original-name": "Program Name",
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "ContractYearID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "ContractYear": {
          "x-original-name": "Contract Year",
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "ClaimStatusID": {
          "x-precision": 10,
          "type": "integer"
        },
        "StatusDesc": {
          "type": "string",
          "length": 100
        },
        "Insureds": {
          "x-computed": true,
          "type": "string"
        },
        "Claimants": {
          "x-computed": true,
          "type": "string"
        },
        "Address": {
          "x-computed": true,
          "type": "string"
        },
        "Adjuster": {
          "type": "string",
          "length": 200
        },
        "DefenseCounsel": {
          "x-original-name": "Defense Counsel",
          "type": "string",
          "length": 200
        },
        "CoverageCounsel": {
          "x-original-name": "Coverage Counsel",
          "type": "string",
          "length": 200
        },
        "FileHandler": {
          "x-original-name": "File Handler",
          "type": "string",
          "length": 200
        },
        "OriginalFileHandler": {
          "x-original-name": "Original File Handler",
          "type": "string",
          "length": 200
        },
        "Brokerage": {
          "x-computed": true,
          "type": "string",
          "length": 200
        },
        "BrokerageTransactionRole": {
          "x-original-name": "Brokerage Transaction Role",
          "type": "string",
          "length": 100
        },
        "CloseDate": {
          "x-precision": 23,
          "x-scale": 3,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "EntryDate": {
          "x-nullable": false,
          "x-precision": 23,
          "x-scale": 3,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "ClaimDate": {
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "AgreementDate": {
          "x-computed": true,
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "ReportDate": {
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "ClaimPaidDate": {
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "LapseDate": {
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "ServedDate": {
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "BrokerageOnly": {
          "x-original-name": "Brokerage Only ?",
          "type": "string",
          "length": 100
        },
        "LossCause": {
          "x-original-name": "Loss Cause",
          "type": "string",
          "length": 100
        },
        "OccurrenceNo": {
          "type": "string",
          "length": 30
        },
        "ValueOfTransaction": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpectedPayout": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustedGrossClaim": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "CoverageIssue": {
          "x-original-name": "Coverage Issue",
          "x-computed": true,
          "x-nullable": false,
          "type": "string",
          "length": 3
        },
        "NotYetReported": {
          "x-original-name": "Not Yet Reported",
          "x-computed": true,
          "x-nullable": false,
          "type": "string",
          "length": 3
        },
        "ClassAction": {
          "x-original-name": "Class Action",
          "x-computed": true,
          "x-nullable": false,
          "type": "string",
          "length": 3
        },
        "IndemnityReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "IndemnityPayment": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalPayment": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpenseReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpensePayment": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingPayment": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Deductible": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Subrogation": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalPayment": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalRecovery": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalIncurred": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "LastDefenceClaimReport": {
      "x-view": "sp",
      "x-table": "dbo.LastDefenceClaimReport",
      "resource": "LastDefenceClaimReports",
      "required": [
        "ProgramID",
        "ContractYear",
        "ClaimNo",
        "ClaimStatus"
      ],
      "properties": {
        "ProgramID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        },
        "ClaimType": {
          "type": "string",
          "length": 100
        },
        "ContractYear": {
          "x-original-name": "Contract Year",
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "ClaimNo": {
          "x-nullable": false,
          "type": "string",
          "length": 40
        },
        "LawFirm": {
          "x-computed": true,
          "type": "string",
          "length": 200
        },
        "DisplayName": {
          "type": "string",
          "length": 900
        },
        "DateSubmitted": {
          "x-precision": 23,
          "x-scale": 3,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "InsuredName": {
          "x-computed": true,
          "type": "string"
        },
        "ClaimantName": {
          "x-computed": true,
          "type": "string"
        },
        "FileHandler": {
          "x-original-name": "File Handler",
          "type": "string",
          "length": 200
        },
        "CurrentClaimStatus": {
          "x-original-name": "Current Claim Status",
          "x-computed": true,
          "type": "string",
          "length": 100
        },
        "ClaimStatus": {
          "x-original-name": "Claim Status",
          "x-nullable": false,
          "type": "string",
          "length": 100
        }
      }
    },
    "LossCauseTag": {
      "x-table": "dbo.LossCauseTags",
      "resource": "LossCauseTags",
      "required": [
        "ClaimID",
        "LossCauseTag1"
      ],
      "properties": {
        "Claim": {
          "type": "object",
          "$ref": "#/definitions/Claim"
        },
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-foreignKey": {
            "parentTable": "Claims",
            "parentEntityType": "Claim",
            "type": "Claim",
            "principalKey": "ClaimID",
            "name": "Claim",
            "textProperty": "ClaimNo",
            "primaryKey": "ID",
            "navigationProperty": "LossCauseTags"
          }
        },
        "LossCauseTag1": {
          "x-key": true,
          "x-original-name": "LossCauseTag",
          "x-nullable": false,
          "type": "string",
          "length": 50
        }
      }
    },
    "LossCauseTagCount": {
      "x-view": true,
      "x-table": "dbo.LossCauseTagCount",
      "resource": "LossCauseTagCounts",
      "required": [
        "LossCause",
        "LossCauseTag"
      ],
      "properties": {
        "LossCause": {
          "x-original-name": "Loss Cause",
          "x-nullable": false,
          "type": "string",
          "length": 50,
          "x-key": true,
          "x-virtual": true
        },
        "LossCauseID": {
          "x-precision": 10,
          "type": "integer"
        },
        "LossCauseTag": {
          "x-nullable": false,
          "type": "string",
          "length": 50
        },
        "NumberOfTags": {
          "x-precision": 10,
          "type": "integer"
        }
      }
    },
    "MostRecentStatusChangeDate": {
      "x-view": true,
      "x-table": "dbo.MostRecentStatusChangeDate",
      "resource": "MostRecentStatusChangeDates",
      "required": [
        "ClaimID"
      ],
      "properties": {
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        },
        "MostRecentStatusChangeDate1": {
          "x-original-name": "MostRecentStatusChangeDate",
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        }
      }
    },
    "MovementBordereau": {
      "x-view": "sp",
      "x-table": "dbo.MovementBordereau",
      "x-parameters": [
        {
          "name": "ReportDate",
          "type": "string",
          "format": "date-time",
          "size": 8
        },
        {
          "name": "PreviousDate",
          "type": "string",
          "format": "date-time",
          "size": 8
        }
      ],
      "resource": "MovementBordereaus",
      "required": [
        "ClaimTypeID",
        "ContractYear",
        "ClaimNo",
        "Program"
      ],
      "properties": {
        "ClaimTypeID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        },
        "ContractYear": {
          "x-original-name": "Contract Year",
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "ClaimNo": {
          "x-nullable": false,
          "type": "string",
          "length": 40
        },
        "AdjusterClaimNo": {
          "type": "string",
          "length": 100
        },
        "Program": {
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "Insureds": {
          "x-computed": true,
          "type": "string"
        },
        "Claimant": {
          "x-computed": true,
          "type": "string"
        },
        "Status": {
          "type": "string",
          "length": 100
        },
        "Adjuster": {
          "type": "string",
          "length": 200
        },
        "DefenseCounsel": {
          "x-original-name": "Defense Counsel",
          "type": "string",
          "length": 200
        },
        "CoverageCounsel": {
          "x-original-name": "Coverage Counsel",
          "type": "string",
          "length": 200
        },
        "ClaimDate": {
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "AgreementDate": {
          "x-computed": true,
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "ReportDate": {
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "CloseDate": {
          "x-precision": 23,
          "x-scale": 3,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "AmountOfClaim": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalPaid": {
          "x-original-name": "Legal Paid",
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingPaid": {
          "x-original-name": "Adjusting Paid",
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "IndemnityPaid": {
          "x-original-name": "Indemnity Paid",
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalReserve": {
          "x-original-name": "Legal Reserve",
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingReserve": {
          "x-original-name": "Adjusting Reserve",
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "IndemnityReserve": {
          "x-original-name": "Indemnity Reserve",
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Deductible": {
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Subrogation": {
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalPaid": {
          "x-original-name": "Total Paid",
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalReserve": {
          "x-original-name": "Total Reserve",
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalIncurred": {
          "x-original-name": "Total Incurred",
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TradeAddress": {
          "x-computed": true,
          "type": "string"
        },
        "TradeCity": {
          "type": "string",
          "length": 200
        },
        "TradeProvince": {
          "x-computed": true,
          "type": "string",
          "length": 100
        },
        "TradePostalCode": {
          "type": "string",
          "length": 14
        },
        "ClaimDescription": {
          "type": "string",
          "length": 2000
        }
      }
    },
    "NextClaimDisplayOrder": {
      "x-view": true,
      "x-table": "dbo.NextClaimDisplayOrders",
      "resource": "NextClaimDisplayOrders",
      "required": [
        "ClaimID"
      ],
      "properties": {
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        },
        "NextClaimantDisplayOrder": {
          "x-precision": 5,
          "type": "integer",
          "format": "int16"
        },
        "NextInsuredDisplayOrder": {
          "x-precision": 5,
          "type": "integer",
          "format": "int16"
        },
        "NextOtherDisplayOrder": {
          "x-precision": 5,
          "type": "integer",
          "format": "int16"
        },
        "NextExpertDisplayOrder": {
          "x-precision": 5,
          "type": "integer",
          "format": "int16"
        },
        "NextTradeDisplayOrder": {
          "x-precision": 5,
          "type": "integer",
          "format": "int16"
        }
      }
    },
    "NoActiveDiaryBordereau": {
      "x-view": "sp",
      "x-table": "dbo.NoActiveDiaryBordereau",
      "resource": "NoActiveDiaryBordereaus",
      "required": [
        "ClaimTypeID",
        "ContractYear",
        "RECOClaim"
      ],
      "properties": {
        "ClaimTypeID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        },
        "ContractYear": {
          "x-original-name": "Contract Year",
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "RECOClaim": {
          "x-original-name": "RECO Claim #",
          "x-nullable": false,
          "type": "string",
          "length": 40
        },
        "AdjusterClaim": {
          "x-original-name": "Adjuster Claim #",
          "type": "string",
          "length": 100
        },
        "Registrants": {
          "x-computed": true,
          "type": "string"
        },
        "ClaimInitiation": {
          "x-original-name": "Claim Initiation",
          "x-computed": true,
          "type": "string",
          "length": 100
        },
        "DefenseFirm": {
          "x-original-name": "Defense Firm",
          "x-computed": true,
          "type": "string",
          "length": 200
        },
        "DefenseCounsel": {
          "x-original-name": "Defense Counsel",
          "type": "string",
          "length": 200
        },
        "FileHandler": {
          "x-original-name": "File Handler",
          "type": "string",
          "length": 200
        }
      }
    },
    "Note": {
      "x-table": "dbo.Notes",
      "resource": "Notes",
      "required": [
        "ClaimID",
        "Subject"
      ],
      "properties": {
        "ID": {
          "x-key": true,
          "x-default-sql": "(newid())",
          "x-nullable": false,
          "type": "string",
          "format": "uuid"
        },
        "NoteID": {
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-navigation": [
            {
              "inversePropertyName": "Note",
              "name": "NoteRoles",
              "type": "NoteRole"
            }
          ]
        },
        "Claim": {
          "type": "object",
          "$ref": "#/definitions/Claim"
        },
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Claims",
            "parentEntityType": "Claim",
            "type": "Claim",
            "principalKey": "ClaimID",
            "name": "Claim",
            "textProperty": "ClaimNo",
            "primaryKey": "ID",
            "navigationProperty": "Notes"
          }
        },
        "EntryDate": {
          "x-default-sql": "(getdate())",
          "x-nullable": false,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "Subject": {
          "x-nullable": false,
          "type": "string",
          "length": 255
        },
        "Details": {
          "type": "string"
        },
        "VisibleTo": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "EnteredByID": {
          "type": "string",
          "length": 450
        },
        "Parameter": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "NoteTypeID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Notes"
          }
        },
        "LargeLoss": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "Sticky": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "Confidential": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "VisibleToCounsel": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "NoteRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NoteRole"
          }
        }
      }
    },
    "NoteRole": {
      "x-table": "dbo.NoteRole",
      "resource": "NoteRoles",
      "required": [],
      "properties": {
        "Id": {
          "x-key": true,
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "Note": {
          "type": "object",
          "$ref": "#/definitions/Note"
        },
        "NoteId": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Notes",
            "parentEntityType": "Note",
            "type": "Note",
            "principalKey": "NoteID",
            "name": "Note",
            "textProperty": "Subject",
            "primaryKey": "ID",
            "navigationProperty": "NoteRoles"
          }
        },
        "Role": {
          "type": "object",
          "$ref": "#/definitions/Role"
        },
        "RoleId": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Roles",
            "parentEntityType": "Role",
            "type": "Role",
            "principalKey": "Id",
            "name": "Role",
            "textProperty": "AspNetRoleId",
            "navigationProperty": "NoteRoles"
          }
        }
      }
    },
    "NoticeOfClaim": {
      "x-table": "dbo.NoticeOfClaims",
      "resource": "NoticeOfClaims",
      "required": [
        "ProgramID",
        "RefNum",
        "NoticeOfClaimStatusID",
        "UserID"
      ],
      "properties": {
        "NoticeOfClaimID": {
          "x-key": true,
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-navigation": [
            {
              "inversePropertyName": "NoticeOfClaim",
              "name": "EoNoticeOfClaimsDetails",
              "type": "EoNoticeOfClaimsDetail"
            },
            {
              "inversePropertyName": "NoticeOfClaim",
              "name": "NoticeOfClaimTrades",
              "type": "NoticeOfClaimTrade"
            },
            {
              "inversePropertyName": "NoticeOfClaim",
              "name": "NoticeOfClaimBrokerages",
              "type": "NoticeOfClaimBrokerage"
            },
            {
              "inversePropertyName": "NoticeOfClaim",
              "name": "NoticeOfClaimClaimants",
              "type": "NoticeOfClaimClaimant"
            },
            {
              "inversePropertyName": "NoticeOfClaim",
              "name": "NoticeOfClaimRegistrants",
              "type": "NoticeOfClaimRegistrant"
            },
            {
              "inversePropertyName": "NoticeOfClaim",
              "name": "NoticeOfClaimFiles",
              "type": "NoticeOfClaimFile"
            },
            {
              "inversePropertyName": "NoticeOfClaim",
              "name": "NoticeOfClaimPurchasers",
              "type": "NoticeOfClaimPurchaser"
            },
            {
              "inversePropertyName": "NoticeOfClaim",
              "name": "NoticeOfClaimVendors",
              "type": "NoticeOfClaimVendor"
            }
          ]
        },
        "Parameter": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "ProgramID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "NoticeOfClaims"
          }
        },
        "RefNum": {
          "x-nullable": false,
          "type": "string",
          "length": 15
        },
        "Parameter1": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "NoticeOfClaimStatusID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter1",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "NoticeOfClaims1"
          }
        },
        "UserID": {
          "x-nullable": false,
          "type": "string",
          "length": 450
        },
        "Claim": {
          "type": "object",
          "$ref": "#/definitions/Claim"
        },
        "ClaimID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Claims",
            "parentEntityType": "Claim",
            "type": "Claim",
            "principalKey": "ClaimID",
            "name": "Claim",
            "textProperty": "ClaimNo",
            "primaryKey": "ID",
            "navigationProperty": "NoticeOfClaims"
          }
        },
        "DateSubmitted": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "EoNoticeOfClaimsDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EoNoticeOfClaimsDetail"
          }
        },
        "NoticeOfClaimTrades": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NoticeOfClaimTrade"
          }
        },
        "NoticeOfClaimBrokerages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NoticeOfClaimBrokerage"
          }
        },
        "NoticeOfClaimClaimants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NoticeOfClaimClaimant"
          }
        },
        "NoticeOfClaimRegistrants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NoticeOfClaimRegistrant"
          }
        },
        "NoticeOfClaimFiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NoticeOfClaimFile"
          }
        },
        "NoticeOfClaimPurchasers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NoticeOfClaimPurchaser"
          }
        },
        "NoticeOfClaimVendors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NoticeOfClaimVendor"
          }
        }
      }
    },
    "NoticeOfClaimBrokerage": {
      "x-table": "dbo.NoticeOfClaimBrokerage",
      "resource": "NoticeOfClaimBrokerages",
      "required": [],
      "properties": {
        "BrokerageID": {
          "x-key": true,
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-navigation": [
            {
              "inversePropertyName": "NoticeOfClaimBrokerage",
              "name": "NoticeOfClaimRegistrants",
              "type": "NoticeOfClaimRegistrant"
            }
          ]
        },
        "NoticeOfClaim": {
          "type": "object",
          "$ref": "#/definitions/NoticeOfClaim"
        },
        "NoticeOfClaimID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "NoticeOfClaims",
            "parentEntityType": "NoticeOfClaim",
            "type": "NoticeOfClaim",
            "principalKey": "NoticeOfClaimID",
            "name": "NoticeOfClaim",
            "textProperty": "RefNum",
            "navigationProperty": "NoticeOfClaimBrokerages"
          }
        },
        "BrokerageName": {
          "type": "string",
          "length": 100
        },
        "RegistrantNo": {
          "type": "string",
          "length": 7
        },
        "BrokerageMailingAddress": {
          "type": "string",
          "length": 500
        },
        "BrokerOfRecord": {
          "type": "string",
          "length": 100
        },
        "BusinessPhoneNum": {
          "type": "string",
          "length": 25
        },
        "CellPhoneNum": {
          "type": "string",
          "length": 25
        },
        "FaxNum": {
          "type": "string",
          "length": 25
        },
        "Parameter": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "PreferredCommunicationMethodID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "NoticeOfClaimBrokerages"
          }
        },
        "Street1": {
          "type": "string",
          "length": 500
        },
        "Street2": {
          "type": "string",
          "length": 500
        },
        "UnitNumber": {
          "type": "string",
          "length": 20
        },
        "Parameter1": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "ProvinceID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter1",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "NoticeOfClaimBrokerages1"
          }
        },
        "City": {
          "type": "string",
          "length": 100
        },
        "PostalCode": {
          "type": "string",
          "length": 7
        },
        "EmailAddress": {
          "type": "string",
          "length": 450
        },
        "NoticeOfClaimRegistrants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NoticeOfClaimRegistrant"
          }
        }
      }
    },
    "NoticeOfClaimClaimant": {
      "x-table": "dbo.NoticeOfClaimClaimants",
      "resource": "NoticeOfClaimClaimants",
      "required": [
        "NoticeOfClaimID"
      ],
      "properties": {
        "ID": {
          "x-key": true,
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "NoticeOfClaim": {
          "type": "object",
          "$ref": "#/definitions/NoticeOfClaim"
        },
        "NoticeOfClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "NoticeOfClaims",
            "parentEntityType": "NoticeOfClaim",
            "type": "NoticeOfClaim",
            "principalKey": "NoticeOfClaimID",
            "name": "NoticeOfClaim",
            "textProperty": "RefNum",
            "navigationProperty": "NoticeOfClaimClaimants"
          }
        },
        "Name": {
          "type": "string",
          "length": 100
        },
        "Address": {
          "type": "string",
          "length": 500
        },
        "ProvinceID": {
          "x-precision": 10,
          "type": "integer"
        },
        "City": {
          "type": "string",
          "length": 100
        },
        "PostalCode": {
          "type": "string",
          "length": 7
        },
        "EmailAddress": {
          "type": "string",
          "length": 450
        },
        "BusinessPhoneNum": {
          "type": "string",
          "length": 25
        },
        "CellPhoneNum": {
          "type": "string",
          "length": 25
        },
        "FaxNum": {
          "type": "string",
          "length": 25
        },
        "PreferredCommunicationMethodID": {
          "x-precision": 10,
          "type": "integer"
        }
      }
    },
    "NoticeOfClaimFile": {
      "x-table": "dbo.NoticeOfClaimFiles",
      "resource": "NoticeOfClaimFiles",
      "required": [
        "Filename",
        "StoredFile",
        "TypeOfFileID",
        "UploadedById"
      ],
      "properties": {
        "NoticeOfClaim": {
          "type": "object",
          "$ref": "#/definitions/NoticeOfClaim"
        },
        "NoticeOfClaimID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "NoticeOfClaims",
            "parentEntityType": "NoticeOfClaim",
            "type": "NoticeOfClaim",
            "principalKey": "NoticeOfClaimID",
            "name": "NoticeOfClaim",
            "textProperty": "RefNum",
            "navigationProperty": "NoticeOfClaimFiles"
          }
        },
        "FileID": {
          "x-key": true,
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "Filename": {
          "x-nullable": false,
          "type": "string",
          "length": 1000
        },
        "StoredFile": {
          "x-nullable": false,
          "type": "string",
          "format": "binary"
        },
        "Parameter": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "TypeOfFileID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "NoticeOfClaimFiles"
          }
        },
        "UploadedById": {
          "x-nullable": false,
          "type": "string",
          "length": 450
        },
        "ID": {
          "type": "string",
          "format": "uuid"
        },
        "ContentType": {
          "type": "string",
          "length": 255
        }
      }
    },
    "NoticeOfClaimList": {
      "x-view": true,
      "x-table": "dbo.NoticeOfClaimList",
      "resource": "NoticeOfClaimLists",
      "required": [
        "NoticeOfClaimID",
        "ProgramID",
        "ProgramName",
        "RefNum",
        "NoticeOfClaimStatusID",
        "Status",
        "UserID"
      ],
      "properties": {
        "NoticeOfClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        },
        "ProgramID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "ProgramName": {
          "x-nullable": false,
          "type": "string",
          "length": 50
        },
        "RefNum": {
          "x-nullable": false,
          "type": "string",
          "length": 15
        },
        "NoticeOfClaimStatusID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "Status": {
          "x-nullable": false,
          "type": "string",
          "length": 50
        },
        "UserID": {
          "x-nullable": false,
          "type": "string",
          "length": 450
        },
        "DateSubmitted": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "TradeAddress": {
          "type": "string",
          "length": 450
        },
        "BrokerageName": {
          "type": "string",
          "length": 100
        },
        "ClaimNo": {
          "type": "string",
          "length": 20
        },
        "ClaimID": {
          "x-precision": 10,
          "type": "integer"
        }
      }
    },
    "NoticeOfClaimPurchaser": {
      "x-table": "dbo.NoticeOfClaimPurchasers",
      "resource": "NoticeOfClaimPurchasers",
      "required": [
        "NoticeOfClaimID"
      ],
      "properties": {
        "NoticeOfClaim": {
          "type": "object",
          "$ref": "#/definitions/NoticeOfClaim"
        },
        "NoticeOfClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "NoticeOfClaims",
            "parentEntityType": "NoticeOfClaim",
            "type": "NoticeOfClaim",
            "principalKey": "NoticeOfClaimID",
            "name": "NoticeOfClaim",
            "textProperty": "RefNum",
            "navigationProperty": "NoticeOfClaimPurchasers"
          }
        },
        "PurchaserID": {
          "x-key": true,
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "PurchaserName": {
          "type": "string",
          "length": 100
        },
        "PurchaserAddress": {
          "type": "string",
          "length": 450
        },
        "PurchaserPostalCode": {
          "type": "string",
          "length": 7
        },
        "PurchaserSolicitorName": {
          "type": "string",
          "length": 100
        }
      }
    },
    "NoticeOfClaimRegistrant": {
      "x-table": "dbo.NoticeOfClaimRegistrants",
      "resource": "NoticeOfClaimRegistrants",
      "required": [
        "NoticeOfClaimID",
        "RegistrantName",
        "RegistrantNo",
        "RegistrantMailingAddress"
      ],
      "properties": {
        "NoticeOfClaim": {
          "type": "object",
          "$ref": "#/definitions/NoticeOfClaim"
        },
        "NoticeOfClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "NoticeOfClaims",
            "parentEntityType": "NoticeOfClaim",
            "type": "NoticeOfClaim",
            "principalKey": "NoticeOfClaimID",
            "name": "NoticeOfClaim",
            "textProperty": "RefNum",
            "navigationProperty": "NoticeOfClaimRegistrants"
          }
        },
        "NOCRegistrantID": {
          "x-key": true,
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "NoticeOfClaimBrokerage": {
          "type": "object",
          "$ref": "#/definitions/NoticeOfClaimBrokerage"
        },
        "NoticeOfClaimBrokerageID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "NoticeOfClaimBrokerage",
            "parentEntityType": "NoticeOfClaimBrokerage",
            "type": "NoticeOfClaimBrokerage",
            "principalKey": "BrokerageID",
            "name": "NoticeOfClaimBrokerage",
            "textProperty": "BrokerageName",
            "navigationProperty": "NoticeOfClaimRegistrants"
          }
        },
        "RegistrantName": {
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "RegistrantNo": {
          "x-nullable": false,
          "type": "string",
          "length": 7
        },
        "RegistrantMailingAddress": {
          "x-nullable": false,
          "type": "string",
          "length": 450
        },
        "RegistrantBusinessAddress": {
          "type": "string",
          "length": 450
        },
        "YearsOfExperience": {
          "x-precision": 5,
          "type": "integer",
          "format": "int16"
        },
        "BusinessPhoneNum": {
          "type": "string",
          "length": 25
        },
        "CellPhoneNum": {
          "type": "string",
          "length": 25
        },
        "HomePhoneNum": {
          "type": "string",
          "length": 25
        },
        "FaxNum": {
          "type": "string",
          "length": 25
        },
        "EmailAddress": {
          "type": "string",
          "length": 450
        },
        "Parameter": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "PreferredCommunicationMethodID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "NoticeOfClaimRegistrants"
          }
        },
        "Parameter1": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "BrokerageTransactionRoleID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter1",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "NoticeOfClaimRegistrants1"
          }
        }
      }
    },
    "NoticeOfClaimTrade": {
      "x-table": "dbo.NoticeOfClaimTrade",
      "resource": "NoticeOfClaimTrades",
      "required": [
        "NoticeOfClaimID"
      ],
      "properties": {
        "NoticeOfClaim": {
          "type": "object",
          "$ref": "#/definitions/NoticeOfClaim"
        },
        "NoticeOfClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-foreignKey": {
            "parentTable": "NoticeOfClaims",
            "parentEntityType": "NoticeOfClaim",
            "type": "NoticeOfClaim",
            "principalKey": "NoticeOfClaimID",
            "name": "NoticeOfClaim",
            "textProperty": "RefNum",
            "navigationProperty": "NoticeOfClaimTrades"
          }
        },
        "TradeAddress": {
          "type": "string",
          "length": 450
        },
        "TradeCity": {
          "type": "string",
          "length": 100
        },
        "Parameter": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "TradeProvince": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "NoticeOfClaimTrades"
          }
        },
        "TradePostalCode": {
          "type": "string",
          "length": 7
        }
      }
    },
    "NoticeOfClaimVendor": {
      "x-table": "dbo.NoticeOfClaimVendors",
      "resource": "NoticeOfClaimVendors",
      "required": [
        "NoticeOfClaimID"
      ],
      "properties": {
        "NoticeOfClaim": {
          "type": "object",
          "$ref": "#/definitions/NoticeOfClaim"
        },
        "NoticeOfClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "NoticeOfClaims",
            "parentEntityType": "NoticeOfClaim",
            "type": "NoticeOfClaim",
            "principalKey": "NoticeOfClaimID",
            "name": "NoticeOfClaim",
            "textProperty": "RefNum",
            "navigationProperty": "NoticeOfClaimVendors"
          }
        },
        "VendorID": {
          "x-key": true,
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "VendorName": {
          "type": "string",
          "length": 100
        },
        "VendorAddress": {
          "type": "string",
          "length": 450
        },
        "VendorPostalCode": {
          "type": "string",
          "length": 7
        },
        "VendorSolicitorName": {
          "type": "string",
          "length": 100
        }
      }
    },
    "Occurrence": {
      "x-table": "dbo.Occurrences",
      "resource": "Occurrences",
      "required": [
        "OccurrenceNo",
        "ProgramID",
        "ContractYearID"
      ],
      "properties": {
        "ID": {
          "x-key": true,
          "x-default-sql": "(newid())",
          "x-nullable": false,
          "type": "string",
          "format": "uuid"
        },
        "OccurrenceID": {
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-navigation": [
            {
              "inversePropertyName": "Occurrence",
              "name": "Claims",
              "type": "Claim"
            }
          ]
        },
        "OccurrenceNo": {
          "x-nullable": false,
          "type": "string",
          "length": 15
        },
        "OccurrenceDescription": {
          "type": "string",
          "length": 255
        },
        "Parameter": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "ProgramID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Occurrences"
          }
        },
        "OccurrenceDate": {
          "x-default-sql": "(getdate())",
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "ValueOfTransaction": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpectedPayout": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustedGrossClaim": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalClaimedAmount": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Brokerage": {
          "type": "object",
          "$ref": "#/definitions/Brokerage"
        },
        "BrokerageID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Brokerages",
            "parentEntityType": "Brokerage",
            "type": "Brokerage",
            "principalKey": "BrokerageID",
            "name": "Brokerage",
            "textProperty": "Name",
            "navigationProperty": "Occurrences"
          }
        },
        "Parameter1": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "ContractYearID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter1",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Occurrences1"
          }
        },
        "Parameter2": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "OccurrenceReason": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter2",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Occurrences2"
          }
        },
        "FreezeOrder": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "FreezeOrderDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "Receiver": {
          "type": "object",
          "$ref": "#/definitions/Receiver"
        },
        "ReceiverID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Receivers",
            "parentEntityType": "Receiver",
            "type": "Receiver",
            "principalKey": "ReceiverID",
            "name": "Receiver",
            "textProperty": "Name",
            "primaryKey": "ID",
            "navigationProperty": "Occurrences"
          }
        },
        "ServiceProvider": {
          "type": "object",
          "$ref": "#/definitions/ServiceProvider"
        },
        "CounselID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "ServiceProviders",
            "parentEntityType": "ServiceProvider",
            "type": "ServiceProvider",
            "principalKey": "ServiceProviderID",
            "name": "ServiceProvider",
            "textProperty": "Name",
            "primaryKey": "ID",
            "navigationProperty": "Occurrences"
          }
        },
        "RecoveryAttempts": {
          "type": "string",
          "length": 2000
        },
        "Parameter3": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "OccurenceStatusID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter3",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Occurrences3"
          }
        },
        "BrokerageName": {
          "type": "string",
          "length": 100
        },
        "BrokerageStreet1": {
          "type": "string",
          "length": 500
        },
        "BrokerageStreet2": {
          "type": "string",
          "length": 500
        },
        "BrokerageUnitNumber": {
          "type": "string",
          "length": 20
        },
        "BrokerageProvinceID": {
          "x-precision": 10,
          "type": "integer"
        },
        "BrokerageCity": {
          "type": "string",
          "length": 100
        },
        "BrokeragePostalCode": {
          "type": "string",
          "length": 7
        },
        "BrokerageEmailAddress": {
          "type": "string",
          "length": 450
        },
        "BrokerageContactPerson": {
          "type": "string",
          "length": 100
        },
        "BrokerOfRecord": {
          "type": "string",
          "length": 100
        },
        "BrokeragePhoneNum": {
          "type": "string",
          "length": 50
        },
        "BrokerageCellNum": {
          "type": "string",
          "length": 25
        },
        "BrokerageFaxNum": {
          "type": "string",
          "length": 25
        },
        "BrokerageContactEmail": {
          "type": "string",
          "length": 450
        },
        "BrokerageContactPhone": {
          "type": "string",
          "length": 50
        },
        "Claims": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Claim"
          }
        }
      }
    },
    "OccurrenceClaimTrade": {
      "x-view": true,
      "x-table": "dbo.OccurrenceClaimTrades",
      "resource": "OccurrenceClaimTrades",
      "required": [
        "ClaimNo",
        "ClaimID",
        "TradeDisplay",
        "ClaimantID",
        "MasterFileID"
      ],
      "properties": {
        "ClaimNo": {
          "x-nullable": false,
          "type": "string",
          "length": 20,
          "x-key": true,
          "x-virtual": true
        },
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "ClaimStatus": {
          "x-original-name": "Claim Status",
          "type": "string",
          "length": 50
        },
        "Name": {
          "type": "string",
          "length": 100
        },
        "TransactionRole": {
          "x-original-name": "Transaction Role",
          "type": "string",
          "length": 50
        },
        "TradeDisplay": {
          "x-nullable": false,
          "type": "string",
          "length": 648
        },
        "OccurrenceID": {
          "x-precision": 10,
          "type": "integer"
        },
        "ClaimantID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "TradeID": {
          "x-precision": 10,
          "type": "integer"
        },
        "Address1": {
          "type": "string",
          "length": 450
        },
        "MasterFileID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        }
      }
    },
    "OccurrenceClaimant": {
      "x-view": true,
      "x-table": "dbo.OccurrenceClaimants",
      "resource": "OccurrenceClaimants",
      "required": [
        "MasterFileNo",
        "MasterFileID",
        "ClaimStatus",
        "ClaimantDisplay",
        "ClaimantID"
      ],
      "properties": {
        "MasterFileNo": {
          "x-nullable": false,
          "type": "string",
          "length": 20,
          "x-key": true,
          "x-virtual": true
        },
        "MasterFileID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "ClaimStatus": {
          "x-original-name": "Claim Status",
          "x-nullable": false,
          "type": "string",
          "length": 50
        },
        "Name": {
          "type": "string",
          "length": 100
        },
        "TransactionRole": {
          "x-original-name": "Transaction Role",
          "type": "string",
          "length": 50
        },
        "ClaimantDisplay": {
          "x-nullable": false,
          "type": "string",
          "length": 710
        },
        "OccurrenceID": {
          "x-precision": 10,
          "type": "integer"
        },
        "ClaimantID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "IndemnityReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "IndemnityPayment": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingPayment": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalPayment": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpenseReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpensePayment": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Subrogation": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Deductible": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalPayment": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalRecovery": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalIncurred": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "OccurrenceDetail": {
      "x-view": true,
      "x-table": "dbo.OccurrenceDetails",
      "resource": "OccurrenceDetails",
      "required": [
        "ID",
        "OccurrenceID",
        "OccurrenceNo",
        "ProgramID",
        "FullOccurrenceName"
      ],
      "properties": {
        "ID": {
          "x-nullable": false,
          "type": "string",
          "format": "uuid",
          "x-key": true,
          "x-virtual": true
        },
        "OccurrenceID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "OccurrenceNo": {
          "x-nullable": false,
          "type": "string",
          "length": 15
        },
        "OccurrenceDescription": {
          "type": "string",
          "length": 255
        },
        "ProgramID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "OccurrenceDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "ValueOfTransaction": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustedGrossClaim": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpectedPayout": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "BrokerageName": {
          "type": "string",
          "length": 100
        },
        "OccurenceStatusID": {
          "x-precision": 10,
          "type": "integer"
        },
        "TotalClaimedAmount": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "FullOccurrenceName": {
          "x-nullable": false,
          "type": "string",
          "length": 118
        }
      }
    },
    "OccurrenceTotalIncurredByCategory": {
      "x-view": true,
      "x-table": "dbo.OccurrenceTotalIncurredByCategory",
      "resource": "OccurrenceTotalIncurredByCategories",
      "required": [
        "IndemnityReserve",
        "IndemnityPayment",
        "AdjustingReserve",
        "AdjustingPayment",
        "LegalReserve",
        "LegalPayment",
        "ExpenseReserve",
        "ExpensePayment",
        "Deductible",
        "Subrogation",
        "TotalReserve",
        "TotalPayment",
        "TotalRecovery",
        "TotalIncurred"
      ],
      "properties": {
        "IndemnityReserve": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal",
          "x-key": true,
          "x-virtual": true
        },
        "IndemnityPayment": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingReserve": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingPayment": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalReserve": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalPayment": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpenseReserve": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpensePayment": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Deductible": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Subrogation": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalReserve": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalPayment": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalRecovery": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalIncurred": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "OccurrenceID": {
          "x-precision": 10,
          "type": "integer"
        },
        "OccurrenceNo": {
          "type": "string",
          "length": 15
        }
      }
    },
    "OpenClaimsByLawFirmReport": {
      "x-view": "sp",
      "x-table": "dbo.OpenClaimsByLawFirmReport",
      "x-parameters": [
        {
          "name": "ProgramID",
          "type": "integer"
        }
      ],
      "resource": "OpenClaimsByLawFirmReports",
      "required": [
        "ClaimNo"
      ],
      "properties": {
        "LawFirm": {
          "x-original-name": "Law Firm",
          "type": "string",
          "length": 200
        },
        "LawyerName": {
          "x-original-name": "Lawyer Name",
          "type": "string",
          "length": 200
        },
        "CounselFileNo": {
          "type": "string",
          "length": 100
        },
        "ClaimNo": {
          "x-nullable": false,
          "type": "string",
          "length": 40,
          "x-key": true,
          "x-virtual": true
        },
        "ClaimStatus": {
          "x-original-name": "Claim Status",
          "type": "string",
          "length": 12
        },
        "AmountClaimed": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Insureds": {
          "x-computed": true,
          "type": "string"
        }
      }
    },
    "OpenClaimsReport": {
      "x-view": "sp",
      "x-table": "dbo.OpenClaimsReport",
      "x-parameters": [
        {
          "name": "ProgramID",
          "type": "integer"
        },
        {
          "name": "ReportDate",
          "type": "string",
          "format": "date-time",
          "size": 3
        }
      ],
      "resource": "OpenClaimsReports",
      "required": [
        "ClaimNumber",
        "DateOpened"
      ],
      "properties": {
        "ClaimNumber": {
          "x-original-name": "Claim Number",
          "x-nullable": false,
          "type": "string",
          "length": 40,
          "x-key": true,
          "x-virtual": true
        },
        "ClaimStatus": {
          "x-original-name": "Claim Status",
          "x-computed": true,
          "type": "string",
          "length": 12
        },
        "ClaimAmount": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "IndemnityReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "IndemnityPaid": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingPaid": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalPaid": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpenseReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpensePaid": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Brokerage": {
          "x-computed": true,
          "type": "string",
          "length": 200
        },
        "Insureds": {
          "x-computed": true,
          "type": "string"
        },
        "DefenseCounsel": {
          "x-original-name": "Defense Counsel",
          "type": "string",
          "length": 200
        },
        "CounselFileNum": {
          "x-original-name": "CounselFileNum ",
          "type": "string",
          "length": 100
        },
        "DateOpened": {
          "x-nullable": false,
          "x-precision": 23,
          "x-scale": 3,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "DateClosed": {
          "x-precision": 23,
          "x-scale": 3,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "DaysSinceCreation": {
          "x-computed": true,
          "x-precision": 10,
          "type": "integer"
        },
        "DaysSinceLastOpened": {
          "x-computed": true,
          "x-precision": 10,
          "type": "integer"
        },
        "TotalDaysOpen": {
          "x-computed": true,
          "x-precision": 10,
          "type": "integer"
        }
      }
    },
    "OpenFilesByLawyer": {
      "x-view": true,
      "x-table": "dbo.OpenFilesByLawyer",
      "resource": "OpenFilesByLawyers",
      "required": [
        "ClaimNo",
        "ProgramID"
      ],
      "properties": {
        "LawFirm": {
          "x-original-name": "Law Firm",
          "type": "string",
          "length": 100
        },
        "DefenceCounsel": {
          "type": "string",
          "length": 100
        },
        "CounselFileNo": {
          "type": "string",
          "length": 50
        },
        "ClaimNo": {
          "x-nullable": false,
          "type": "string",
          "length": 20,
          "x-key": true,
          "x-virtual": true
        },
        "Status": {
          "type": "string",
          "length": 50
        },
        "AmountClaimed": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Insureds": {
          "type": "string"
        },
        "ProgramID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        }
      }
    },
    "OpenStatusHistory": {
      "x-view": true,
      "x-table": "dbo.OpenStatusHistory",
      "resource": "OpenStatusHistories",
      "required": [
        "ClaimID",
        "StatusChangeDate",
        "StatusName",
        "ParameterID"
      ],
      "properties": {
        "ParamValue": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        },
        "StatusChangeDate": {
          "x-nullable": false,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "StatusName": {
          "x-nullable": false,
          "type": "string",
          "length": 50
        },
        "ParameterID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        }
      }
    },
    "OtherParty": {
      "x-table": "dbo.OtherParties",
      "resource": "OtherParties",
      "required": [
        "ClaimID",
        "Name"
      ],
      "properties": {
        "ID": {
          "x-key": true,
          "x-default-sql": "(newid())",
          "x-nullable": false,
          "type": "string",
          "format": "uuid"
        },
        "Claim": {
          "type": "object",
          "$ref": "#/definitions/Claim"
        },
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Claims",
            "parentEntityType": "Claim",
            "type": "Claim",
            "principalKey": "ClaimID",
            "name": "Claim",
            "textProperty": "ClaimNo",
            "primaryKey": "ID",
            "navigationProperty": "OtherParties"
          }
        },
        "OtherPartyID": {
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "Registrant": {
          "type": "object",
          "$ref": "#/definitions/Registrant"
        },
        "RegistrantID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Registrants",
            "parentEntityType": "Registrant",
            "type": "Registrant",
            "principalKey": "RegistrantID",
            "name": "Registrant",
            "textProperty": "Name",
            "primaryKey": "ID",
            "navigationProperty": "OtherParties"
          }
        },
        "Name": {
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "Address": {
          "type": "string",
          "length": 500
        },
        "Parameter": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "ProvinceID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "OtherParties"
          }
        },
        "Parameter1": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "CountryID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter1",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "OtherParties1"
          }
        },
        "City": {
          "type": "string",
          "length": 100
        },
        "PostalCode": {
          "type": "string",
          "length": 7
        },
        "EmailAddress": {
          "type": "string",
          "length": 450
        },
        "BusinessPhoneNum": {
          "type": "string",
          "length": 25
        },
        "CellPhoneNum": {
          "type": "string",
          "length": 25
        },
        "FaxNum": {
          "type": "string",
          "length": 25
        },
        "Parameter2": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "PreferredCommunicationMethodID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter2",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "OtherParties2"
          }
        },
        "DisplayOrder": {
          "x-precision": 5,
          "type": "integer",
          "format": "int16"
        },
        "ServiceProvider": {
          "type": "object",
          "$ref": "#/definitions/ServiceProvider"
        },
        "SolicitorID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "ServiceProviders",
            "parentEntityType": "ServiceProvider",
            "type": "ServiceProvider",
            "principalKey": "ServiceProviderID",
            "name": "ServiceProvider",
            "textProperty": "Name",
            "primaryKey": "ID",
            "navigationProperty": "OtherParties"
          }
        },
        "Parameter3": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "OtherPartyTransactionRoleID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter3",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "OtherParties3"
          }
        },
        "Brokerage": {
          "type": "object",
          "$ref": "#/definitions/Brokerage"
        },
        "BrokerageID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Brokerages",
            "parentEntityType": "Brokerage",
            "type": "Brokerage",
            "principalKey": "BrokerageID",
            "name": "Brokerage",
            "textProperty": "Name",
            "navigationProperty": "OtherParties"
          }
        },
        "TransactionRoleOther": {
          "type": "string",
          "length": 50
        }
      }
    },
    "ParamType": {
      "x-table": "dbo.ParamTypes",
      "resource": "ParamTypes",
      "required": [
        "ParamTypeDesc"
      ],
      "properties": {
        "ParamTypeID": {
          "x-key": true,
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-navigation": [
            {
              "inversePropertyName": "ParamType1",
              "name": "ParamTypes1",
              "type": "ParamType"
            },
            {
              "inversePropertyName": "ParamType",
              "name": "Parameters",
              "type": "Parameter"
            },
            {
              "inversePropertyName": "ParamType1",
              "name": "Parameters1",
              "type": "Parameter"
            }
          ]
        },
        "ParamTypeDesc": {
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "ParamType1": {
          "type": "object",
          "$ref": "#/definitions/ParamType"
        },
        "ParentParamTypeID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "ParamTypes",
            "parentEntityType": "ParamType",
            "type": "ParamType",
            "principalKey": "ParamTypeID",
            "name": "ParamType1",
            "textProperty": "ParamTypeDesc",
            "navigationProperty": "ParamTypes1"
          }
        },
        "ParamTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParamType"
          }
        },
        "Parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Parameter"
          }
        }
      }
    },
    "Parameter": {
      "x-table": "dbo.Parameters",
      "resource": "Parameters",
      "required": [
        "ParamTypeID",
        "ParamDesc"
      ],
      "properties": {
        "ParamType": {
          "type": "object",
          "$ref": "#/definitions/ParamType"
        },
        "ParamTypeID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "ParamTypes",
            "parentEntityType": "ParamType",
            "type": "ParamType",
            "principalKey": "ParamTypeID",
            "name": "ParamType",
            "textProperty": "ParamTypeDesc",
            "navigationProperty": "Parameters"
          }
        },
        "ParameterID": {
          "x-key": true,
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-navigation": [
            {
              "inversePropertyName": "Parameter",
              "name": "Diaries",
              "type": "Diary"
            },
            {
              "inversePropertyName": "Parameter",
              "name": "Claimants",
              "type": "Claimant"
            },
            {
              "inversePropertyName": "Parameter1",
              "name": "Claimants1",
              "type": "Claimant"
            },
            {
              "inversePropertyName": "Parameter2",
              "name": "Claimants2",
              "type": "Claimant"
            },
            {
              "inversePropertyName": "Parameter",
              "name": "EoNoticeOfClaimsDetails",
              "type": "EoNoticeOfClaimsDetail"
            },
            {
              "inversePropertyName": "Parameter",
              "name": "Experts",
              "type": "Expert"
            },
            {
              "inversePropertyName": "Parameter1",
              "name": "Experts1",
              "type": "Expert"
            },
            {
              "inversePropertyName": "Parameter2",
              "name": "Experts2",
              "type": "Expert"
            },
            {
              "inversePropertyName": "Parameter",
              "name": "ServiceProviders",
              "type": "ServiceProvider"
            },
            {
              "inversePropertyName": "Parameter1",
              "name": "ServiceProviders1",
              "type": "ServiceProvider"
            },
            {
              "inversePropertyName": "Parameter2",
              "name": "ServiceProviders2",
              "type": "ServiceProvider"
            },
            {
              "inversePropertyName": "Parameter",
              "name": "ClaimantLitigationRoles",
              "type": "ClaimantLitigationRole"
            },
            {
              "inversePropertyName": "Parameter",
              "name": "Trades",
              "type": "Trade"
            },
            {
              "inversePropertyName": "Parameter1",
              "name": "Trades1",
              "type": "Trade"
            },
            {
              "inversePropertyName": "Parameter2",
              "name": "Trades2",
              "type": "Trade"
            },
            {
              "inversePropertyName": "Parameter3",
              "name": "Trades3",
              "type": "Trade"
            },
            {
              "inversePropertyName": "Parameter4",
              "name": "Trades4",
              "type": "Trade"
            },
            {
              "inversePropertyName": "Parameter5",
              "name": "Trades5",
              "type": "Trade"
            },
            {
              "inversePropertyName": "Parameter6",
              "name": "Trades6",
              "type": "Trade"
            },
            {
              "inversePropertyName": "Parameter7",
              "name": "Trades7",
              "type": "Trade"
            },
            {
              "inversePropertyName": "Parameter",
              "name": "Brokerages",
              "type": "Brokerage"
            },
            {
              "inversePropertyName": "Parameter",
              "name": "Notes",
              "type": "Note"
            },
            {
              "inversePropertyName": "Parameter",
              "name": "BrokerageContacts",
              "type": "BrokerageContact"
            },
            {
              "inversePropertyName": "Parameter",
              "name": "ClaimStatusHistories",
              "type": "ClaimStatusHistory"
            },
            {
              "inversePropertyName": "Parameter",
              "name": "Transactions",
              "type": "Transaction"
            },
            {
              "inversePropertyName": "Parameter1",
              "name": "Transactions1",
              "type": "Transaction"
            },
            {
              "inversePropertyName": "Parameter2",
              "name": "Transactions2",
              "type": "Transaction"
            },
            {
              "inversePropertyName": "Parameter",
              "name": "ClaimReports",
              "type": "ClaimReport"
            },
            {
              "inversePropertyName": "Parameter",
              "name": "Occurrences",
              "type": "Occurrence"
            },
            {
              "inversePropertyName": "Parameter1",
              "name": "Occurrences1",
              "type": "Occurrence"
            },
            {
              "inversePropertyName": "Parameter2",
              "name": "Occurrences2",
              "type": "Occurrence"
            },
            {
              "inversePropertyName": "Parameter3",
              "name": "Occurrences3",
              "type": "Occurrence"
            },
            {
              "inversePropertyName": "Parameter",
              "name": "NoticeOfClaims",
              "type": "NoticeOfClaim"
            },
            {
              "inversePropertyName": "Parameter1",
              "name": "NoticeOfClaims1",
              "type": "NoticeOfClaim"
            },
            {
              "inversePropertyName": "Parameter",
              "name": "TransactionApprovalLimits",
              "type": "TransactionApprovalLimit"
            },
            {
              "inversePropertyName": "Parameter",
              "name": "DiaryTemplates",
              "type": "DiaryTemplate"
            },
            {
              "inversePropertyName": "Parameter1",
              "name": "DiaryTemplates1",
              "type": "DiaryTemplate"
            },
            {
              "inversePropertyName": "Parameter",
              "name": "Insureds",
              "type": "Insured"
            },
            {
              "inversePropertyName": "Parameter1",
              "name": "Insureds1",
              "type": "Insured"
            },
            {
              "inversePropertyName": "Parameter",
              "name": "Claims",
              "type": "Claim"
            },
            {
              "inversePropertyName": "Parameter1",
              "name": "Claims1",
              "type": "Claim"
            },
            {
              "inversePropertyName": "Parameter2",
              "name": "Claims2",
              "type": "Claim"
            },
            {
              "inversePropertyName": "Parameter3",
              "name": "Claims3",
              "type": "Claim"
            },
            {
              "inversePropertyName": "Parameter4",
              "name": "Claims4",
              "type": "Claim"
            },
            {
              "inversePropertyName": "Parameter5",
              "name": "Claims5",
              "type": "Claim"
            },
            {
              "inversePropertyName": "Parameter6",
              "name": "Claims6",
              "type": "Claim"
            },
            {
              "inversePropertyName": "Parameter7",
              "name": "Claims7",
              "type": "Claim"
            },
            {
              "inversePropertyName": "Parameter8",
              "name": "Claims8",
              "type": "Claim"
            },
            {
              "inversePropertyName": "Parameter9",
              "name": "Claims9",
              "type": "Claim"
            },
            {
              "inversePropertyName": "Parameter10",
              "name": "Claims10",
              "type": "Claim"
            },
            {
              "inversePropertyName": "Parameter",
              "name": "CdpClaimDetails",
              "type": "CdpClaimDetail"
            },
            {
              "inversePropertyName": "Parameter1",
              "name": "CdpClaimDetails1",
              "type": "CdpClaimDetail"
            },
            {
              "inversePropertyName": "Parameter",
              "name": "ClaimLitigationDates",
              "type": "ClaimLitigationDate"
            },
            {
              "inversePropertyName": "Parameter1",
              "name": "ClaimLitigationDates1",
              "type": "ClaimLitigationDate"
            },
            {
              "inversePropertyName": "Parameter",
              "name": "AutoReservings",
              "type": "AutoReserving"
            },
            {
              "inversePropertyName": "Parameter1",
              "name": "AutoReservings1",
              "type": "AutoReserving"
            },
            {
              "inversePropertyName": "Parameter",
              "name": "Builders",
              "type": "Builder"
            },
            {
              "inversePropertyName": "Parameter1",
              "name": "Builders1",
              "type": "Builder"
            },
            {
              "inversePropertyName": "Parameter",
              "name": "PostalCodes",
              "type": "PostalCode"
            },
            {
              "inversePropertyName": "Parameter",
              "name": "Registrants",
              "type": "Registrant"
            },
            {
              "inversePropertyName": "Parameter1",
              "name": "Registrants1",
              "type": "Registrant"
            },
            {
              "inversePropertyName": "Parameter",
              "name": "Firms",
              "type": "Firm"
            },
            {
              "inversePropertyName": "Parameter",
              "name": "ClaimantSolicitors",
              "type": "ClaimantSolicitor"
            },
            {
              "inversePropertyName": "Parameter1",
              "name": "ClaimantSolicitors1",
              "type": "ClaimantSolicitor"
            },
            {
              "inversePropertyName": "Parameter",
              "name": "SentLetters",
              "type": "SentLetter"
            },
            {
              "inversePropertyName": "Parameter",
              "name": "NoticeOfClaimTrades",
              "type": "NoticeOfClaimTrade"
            },
            {
              "inversePropertyName": "Parameter",
              "name": "NoticeOfClaimBrokerages",
              "type": "NoticeOfClaimBrokerage"
            },
            {
              "inversePropertyName": "Parameter1",
              "name": "NoticeOfClaimBrokerages1",
              "type": "NoticeOfClaimBrokerage"
            },
            {
              "inversePropertyName": "Parameter",
              "name": "InsuredLitigationRoles",
              "type": "InsuredLitigationRole"
            },
            {
              "inversePropertyName": "Parameter",
              "name": "Administrators",
              "type": "Administrator"
            },
            {
              "inversePropertyName": "Parameter1",
              "name": "Administrators1",
              "type": "Administrator"
            },
            {
              "inversePropertyName": "Parameter",
              "name": "NoticeOfClaimRegistrants",
              "type": "NoticeOfClaimRegistrant"
            },
            {
              "inversePropertyName": "Parameter1",
              "name": "NoticeOfClaimRegistrants1",
              "type": "NoticeOfClaimRegistrant"
            },
            {
              "inversePropertyName": "Parameter",
              "name": "EoClaimDetails",
              "type": "EoClaimDetail"
            },
            {
              "inversePropertyName": "Parameter1",
              "name": "EoClaimDetails1",
              "type": "EoClaimDetail"
            },
            {
              "inversePropertyName": "Parameter2",
              "name": "EoClaimDetails2",
              "type": "EoClaimDetail"
            },
            {
              "inversePropertyName": "Parameter3",
              "name": "EoClaimDetails3",
              "type": "EoClaimDetail"
            },
            {
              "inversePropertyName": "Parameter4",
              "name": "EoClaimDetails4",
              "type": "EoClaimDetail"
            },
            {
              "inversePropertyName": "Parameter5",
              "name": "EoClaimDetails5",
              "type": "EoClaimDetail"
            },
            {
              "inversePropertyName": "Parameter6",
              "name": "EoClaimDetails6",
              "type": "EoClaimDetail"
            },
            {
              "inversePropertyName": "Parameter7",
              "name": "EoClaimDetails7",
              "type": "EoClaimDetail"
            },
            {
              "inversePropertyName": "Parameter8",
              "name": "EoClaimDetails8",
              "type": "EoClaimDetail"
            },
            {
              "inversePropertyName": "Parameter9",
              "name": "EoClaimDetails9",
              "type": "EoClaimDetail"
            },
            {
              "inversePropertyName": "Parameter10",
              "name": "EoClaimDetails10",
              "type": "EoClaimDetail"
            },
            {
              "inversePropertyName": "Parameter11",
              "name": "EoClaimDetails11",
              "type": "EoClaimDetail"
            },
            {
              "inversePropertyName": "Parameter12",
              "name": "EoClaimDetails12",
              "type": "EoClaimDetail"
            },
            {
              "inversePropertyName": "Parameter13",
              "name": "EoClaimDetails13",
              "type": "EoClaimDetail"
            },
            {
              "inversePropertyName": "Parameter14",
              "name": "EoClaimDetails14",
              "type": "EoClaimDetail"
            },
            {
              "inversePropertyName": "Parameter15",
              "name": "EoClaimDetails15",
              "type": "EoClaimDetail"
            },
            {
              "inversePropertyName": "Parameter16",
              "name": "EoClaimDetails16",
              "type": "EoClaimDetail"
            },
            {
              "inversePropertyName": "Parameter",
              "name": "CourtDates",
              "type": "CourtDate"
            },
            {
              "inversePropertyName": "Parameter",
              "name": "OtherParties",
              "type": "OtherParty"
            },
            {
              "inversePropertyName": "Parameter1",
              "name": "OtherParties1",
              "type": "OtherParty"
            },
            {
              "inversePropertyName": "Parameter2",
              "name": "OtherParties2",
              "type": "OtherParty"
            },
            {
              "inversePropertyName": "Parameter3",
              "name": "OtherParties3",
              "type": "OtherParty"
            },
            {
              "inversePropertyName": "Parameter",
              "name": "NoticeOfClaimFiles",
              "type": "NoticeOfClaimFile"
            },
            {
              "inversePropertyName": "Parameter",
              "name": "IssueReportings",
              "type": "IssueReporting"
            },
            {
              "inversePropertyName": "Parameter",
              "name": "Receivers",
              "type": "Receiver"
            },
            {
              "inversePropertyName": "Parameter1",
              "name": "Receivers1",
              "type": "Receiver"
            },
            {
              "inversePropertyName": "Parameter",
              "name": "Appointments",
              "type": "Appointment"
            },
            {
              "inversePropertyName": "Parameter1",
              "name": "Appointments1",
              "type": "Appointment"
            }
          ]
        },
        "ParamAbbrev": {
          "type": "string",
          "length": 6
        },
        "ParamDesc": {
          "x-nullable": false,
          "type": "string",
          "length": 50
        },
        "ParamValue": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Locked": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "ParamType1": {
          "type": "object",
          "$ref": "#/definitions/ParamType"
        },
        "ParentParamTypeID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "ParamTypes",
            "parentEntityType": "ParamType",
            "type": "ParamType",
            "principalKey": "ParamTypeID",
            "name": "ParamType1",
            "textProperty": "ParamTypeDesc",
            "navigationProperty": "Parameters1"
          }
        },
        "Diaries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Diary"
          }
        },
        "Claimants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Claimant"
          }
        },
        "EoNoticeOfClaimsDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EoNoticeOfClaimsDetail"
          }
        },
        "Experts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Expert"
          }
        },
        "ServiceProviders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceProvider"
          }
        },
        "ClaimantLitigationRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimantLitigationRole"
          }
        },
        "Trades": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Trade"
          }
        },
        "Brokerages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brokerage"
          }
        },
        "Notes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Note"
          }
        },
        "BrokerageContacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BrokerageContact"
          }
        },
        "ClaimStatusHistories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimStatusHistory"
          }
        },
        "Transactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Transaction"
          }
        },
        "ClaimReports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimReport"
          }
        },
        "Occurrences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Occurrence"
          }
        },
        "NoticeOfClaims": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NoticeOfClaim"
          }
        },
        "TransactionApprovalLimits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionApprovalLimit"
          }
        },
        "DiaryTemplates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiaryTemplate"
          }
        },
        "Insureds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Insured"
          }
        },
        "Claims": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Claim"
          }
        },
        "CdpClaimDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CdpClaimDetail"
          }
        },
        "ClaimLitigationDates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimLitigationDate"
          }
        },
        "AutoReservings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AutoReserving"
          }
        },
        "Builders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Builder"
          }
        },
        "PostalCodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PostalCode"
          }
        },
        "Registrants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Registrant"
          }
        },
        "Firms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Firm"
          }
        },
        "ClaimantSolicitors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimantSolicitor"
          }
        },
        "SentLetters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SentLetter"
          }
        },
        "NoticeOfClaimTrades": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NoticeOfClaimTrade"
          }
        },
        "NoticeOfClaimBrokerages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NoticeOfClaimBrokerage"
          }
        },
        "InsuredLitigationRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InsuredLitigationRole"
          }
        },
        "Administrators": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Administrator"
          }
        },
        "NoticeOfClaimRegistrants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NoticeOfClaimRegistrant"
          }
        },
        "EoClaimDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EoClaimDetail"
          }
        },
        "CourtDates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CourtDate"
          }
        },
        "OtherParties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OtherParty"
          }
        },
        "NoticeOfClaimFiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NoticeOfClaimFile"
          }
        },
        "IssueReportings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IssueReporting"
          }
        },
        "Receivers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Receiver"
          }
        },
        "Appointments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Appointment"
          }
        }
      }
    },
    "ParameterDetail": {
      "x-view": true,
      "x-table": "dbo.ParameterDetails",
      "resource": "ParameterDetails",
      "required": [
        "ParameterID",
        "ParamDesc",
        "ParamTypeDesc",
        "ParamTypeID",
        "Locked"
      ],
      "properties": {
        "ParameterID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        },
        "ParamAbbrev": {
          "type": "string",
          "length": 6
        },
        "ParamDesc": {
          "x-nullable": false,
          "type": "string",
          "length": 50
        },
        "ParamValue": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ParamTypeDesc": {
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "ParamTypeID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "ParentParamType": {
          "type": "string",
          "length": 100
        },
        "ParentParameterDesc": {
          "type": "string",
          "length": 50
        },
        "ParentParameterID": {
          "x-precision": 10,
          "type": "integer"
        },
        "ParentParamTypeID": {
          "x-precision": 10,
          "type": "integer"
        },
        "Locked": {
          "x-nullable": false,
          "type": "boolean"
        },
        "ParamIDAsValue": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "PeriodPaymentBreakdown": {
      "x-view": true,
      "x-table": "dbo.PeriodPaymentBreakdown",
      "resource": "PeriodPaymentBreakdowns",
      "required": [
        "ParamDesc"
      ],
      "properties": {
        "ParamDesc": {
          "x-nullable": false,
          "type": "string",
          "length": 50,
          "x-key": true,
          "x-virtual": true
        },
        "TotalAmount": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalDisbursements": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ParamAbbrev": {
          "type": "string",
          "length": 6
        }
      }
    },
    "PolicySummary": {
      "x-view": "sp",
      "x-table": "dbo.PolicySummary",
      "x-parameters": [
        {
          "name": "ReportDate",
          "type": "string",
          "format": "date-time",
          "size": 8
        },
        {
          "name": "ProgramID",
          "type": "integer"
        }
      ],
      "resource": "PolicySummaries",
      "required": [],
      "properties": {
        "PolicyNum": {
          "x-original-name": "Policy Num",
          "x-computed": true,
          "type": "string",
          "length": 120,
          "x-key": true,
          "x-virtual": true
        },
        "ClaimStatus": {
          "type": "string",
          "length": 100
        },
        "ClaimNo": {
          "type": "string",
          "length": 40
        },
        "ReportDate": {
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "AmountClaimed": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "IndemnityReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "IndemnityPayment": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingPayment": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalPayment": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpenseReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpensePayment": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalRecovery": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalIncurred": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "PostalCode": {
      "x-table": "dbo.PostalCodes",
      "resource": "PostalCodes",
      "required": [
        "PostalCode1"
      ],
      "properties": {
        "PostalCode1": {
          "x-key": true,
          "x-original-name": "PostalCode",
          "x-nullable": false,
          "type": "string",
          "length": 7
        },
        "Parameter": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "CityID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "PostalCodes"
          }
        },
        "City": {
          "type": "string",
          "length": 50
        },
        "Province": {
          "type": "string",
          "length": 2
        }
      }
    },
    "PostalCodeDetail": {
      "x-view": true,
      "x-table": "dbo.PostalCodeDetails",
      "resource": "PostalCodeDetails",
      "required": [
        "City",
        "CityID",
        "ProvinceID",
        "PostalCode"
      ],
      "properties": {
        "City": {
          "x-nullable": false,
          "type": "string",
          "length": 50,
          "x-key": true,
          "x-virtual": true
        },
        "Province": {
          "type": "string",
          "length": 6
        },
        "CityID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "ProvinceID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "PostalCode": {
          "x-nullable": false,
          "type": "string",
          "length": 7
        }
      }
    },
    "ProcessInvoicePayment": {
      "x-view": "sp",
      "x-table": "dbo.ProcessInvoicePayment",
      "x-parameters": [
        {
          "name": "InvoiceUploadID",
          "type": "integer"
        },
        {
          "name": "FirmID",
          "type": "integer"
        },
        {
          "name": "TransactionDate",
          "type": "string",
          "format": "date-time",
          "size": 3
        },
        {
          "name": "Comments",
          "type": "string",
          "size": 4000
        },
        {
          "name": "EnteredBy",
          "type": "string",
          "size": 200
        }
      ],
      "resource": "ProcessInvoicePayments",
      "properties": {}
    },
    "ProcessPayment": {
      "x-view": "sp",
      "x-table": "dbo.ProcessPayment",
      "x-parameters": [
        {
          "name": "TransactionID",
          "type": "integer"
        }
      ],
      "resource": "ProcessPayments",
      "properties": {}
    },
    "ProvincialCourtActionsReport": {
      "x-view": "sp",
      "x-table": "dbo.ProvincialCourtActionsReport",
      "x-parameters": [
        {
          "name": "StartDate",
          "type": "string",
          "format": "date-time",
          "size": 8
        },
        {
          "name": "EndDate",
          "type": "string",
          "format": "date-time",
          "size": 8
        }
      ],
      "resource": "ProvincialCourtActionsReports",
      "required": [
        "ClaimNo"
      ],
      "properties": {
        "ClaimNo": {
          "x-nullable": false,
          "type": "string",
          "length": 40,
          "x-key": true,
          "x-virtual": true
        },
        "ClaimDate": {
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "ClaimStatus": {
          "x-original-name": "Claim Status",
          "type": "string",
          "length": 12
        },
        "TypeOfSale": {
          "x-original-name": "Type Of Sale",
          "type": "string",
          "length": 12
        },
        "Claimants": {
          "x-computed": true,
          "type": "string"
        },
        "Brokerage": {
          "x-computed": true,
          "type": "string",
          "length": 200
        },
        "Allegation": {
          "type": "string",
          "length": 12
        },
        "CauseOfClaim": {
          "x-original-name": "Cause Of Claim",
          "type": "string",
          "length": 100
        }
      }
    },
    "QueensBenchActionsReport": {
      "x-view": "sp",
      "x-table": "dbo.QueensBenchActionsReport",
      "x-parameters": [
        {
          "name": "StartDate",
          "type": "string",
          "format": "date-time",
          "size": 8
        },
        {
          "name": "EndDate",
          "type": "string",
          "format": "date-time",
          "size": 8
        }
      ],
      "resource": "QueensBenchActionsReports",
      "required": [
        "ClaimNo"
      ],
      "properties": {
        "ClaimNo": {
          "x-nullable": false,
          "type": "string",
          "length": 40,
          "x-key": true,
          "x-virtual": true
        },
        "ClaimDate": {
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "ClaimStatus": {
          "x-original-name": "Claim Status",
          "type": "string",
          "length": 12
        },
        "TypeOfSale": {
          "x-original-name": "Type Of Sale",
          "type": "string",
          "length": 12
        },
        "Claimants": {
          "x-computed": true,
          "type": "string"
        },
        "Brokerage": {
          "x-computed": true,
          "type": "string",
          "length": 200
        },
        "Allegation": {
          "type": "string",
          "length": 12
        },
        "CauseOfClaim": {
          "x-original-name": "Cause Of Claim",
          "type": "string",
          "length": 100
        }
      }
    },
    "Receiver": {
      "x-table": "dbo.Receivers",
      "resource": "Receivers",
      "required": [
        "Name"
      ],
      "properties": {
        "ID": {
          "x-key": true,
          "x-default-sql": "(newid())",
          "x-nullable": false,
          "type": "string",
          "format": "uuid"
        },
        "ReceiverID": {
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-navigation": [
            {
              "inversePropertyName": "Receiver",
              "name": "Occurrences",
              "type": "Occurrence"
            }
          ]
        },
        "Name": {
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "Address": {
          "type": "string",
          "length": 450
        },
        "Parameter": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "ProvinceID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Receivers"
          }
        },
        "City": {
          "type": "string",
          "length": 100
        },
        "PostalCode": {
          "type": "string",
          "length": 7
        },
        "EmailAddress": {
          "type": "string",
          "length": 450
        },
        "BusinessPhoneNum": {
          "type": "string",
          "length": 25
        },
        "CellPhoneNum": {
          "type": "string",
          "length": 25
        },
        "FaxNum": {
          "type": "string",
          "length": 25
        },
        "Parameter1": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "PreferredCommunicationMethodID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter1",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Receivers1"
          }
        },
        "ContactName": {
          "type": "string",
          "length": 100
        },
        "Occurrences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Occurrence"
          }
        }
      }
    },
    "RecoLloydsBordereau": {
      "x-view": "sp",
      "x-table": "dbo.RECOLloydsBordereau",
      "x-parameters": [
        {
          "name": "ReportDate",
          "type": "string",
          "format": "date-time",
          "size": 8
        }
      ],
      "resource": "RecoLloydsBordereaus",
      "required": [
        "ClaimTypeID",
        "ContractYear",
        "ClaimNo",
        "Program"
      ],
      "properties": {
        "ClaimTypeID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        },
        "ContractYear": {
          "x-original-name": "Contract Year",
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "ClaimNo": {
          "x-nullable": false,
          "type": "string",
          "length": 40
        },
        "AdjusterClaimNo": {
          "type": "string",
          "length": 100
        },
        "Registrants": {
          "x-computed": true,
          "type": "string"
        },
        "RegistrantNumbers": {
          "x-computed": true,
          "type": "string"
        },
        "Broker": {
          "x-computed": true,
          "type": "string",
          "length": 200
        },
        "Claimants": {
          "x-computed": true,
          "type": "string"
        },
        "Status": {
          "x-computed": true,
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "CoverageIssue": {
          "x-original-name": "Coverage Issue",
          "x-computed": true,
          "x-nullable": false,
          "type": "string",
          "length": 3
        },
        "DefenseCounsel": {
          "x-original-name": "Defense Counsel",
          "type": "string",
          "length": 200
        },
        "DefenseFirm": {
          "x-original-name": "Defense Firm",
          "x-computed": true,
          "type": "string",
          "length": 200
        },
        "Adjuster": {
          "type": "string",
          "length": 200
        },
        "AdjustingFirm": {
          "x-original-name": "Adjusting Firm",
          "x-computed": true,
          "type": "string",
          "length": 200
        },
        "CoverageCounsel": {
          "x-original-name": "Coverage Counsel",
          "type": "string",
          "length": 200
        },
        "ClaimDate": {
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "AgreementDate": {
          "x-computed": true,
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "ReportDate": {
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "CloseDate": {
          "x-precision": 23,
          "x-scale": 3,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "PreviouslyPaidIndemnity": {
          "x-original-name": "Previously Paid - Indemnity",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "PreviouslyPaidLegal": {
          "x-original-name": "Previously Paid - Legal",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "PreviouslyPaidAdjusting": {
          "x-original-name": "Previously Paid - Adjusting",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "PreviouslyPaidTotal": {
          "x-original-name": "Previously Paid - Total",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "PaidThisMonthIndemnity": {
          "x-original-name": "Paid This Month - Indemnity",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "PaidThisMonthLegal": {
          "x-original-name": "Paid This Month - Legal",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "PaidThisMonthAdjusting": {
          "x-original-name": "Paid This Month - Adjusting",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "PaidThisMonthTotal": {
          "x-original-name": "Paid This Month - Total",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "DeductibleThisMonth": {
          "x-original-name": "Deductible This Month",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "SubrogationThisMonth": {
          "x-original-name": "Subrogation This Month",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "IndemnityReserve": {
          "x-original-name": "Indemnity Reserve",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalReserve": {
          "x-original-name": "Legal Reserve",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingReserve": {
          "x-original-name": "Adjusting Reserve",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalReserve": {
          "x-original-name": "Total Reserve",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Deductible": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Subrogation": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalIncurred": {
          "x-original-name": "Total Incurred",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TransactionType": {
          "x-computed": true,
          "type": "string",
          "length": 100
        },
        "TransactionValue": {
          "x-computed": true,
          "type": "string",
          "length": 100
        },
        "UrbanOrRural": {
          "x-original-name": "Urban Or Rural",
          "x-computed": true,
          "x-nullable": false,
          "type": "string",
          "length": 5
        },
        "ConvertedToLitigation": {
          "x-original-name": "Converted To Litigation",
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "ClaimInitiation": {
          "x-original-name": "Claim Initiation",
          "x-computed": true,
          "type": "string",
          "length": 100
        },
        "ClaimOrIncident": {
          "x-original-name": "Claim Or Incident",
          "x-computed": true,
          "x-nullable": false,
          "type": "string",
          "length": 8
        },
        "LapseDate": {
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "EndofDealReason": {
          "x-original-name": "End of Deal Reason",
          "x-computed": true,
          "type": "string",
          "length": 100
        },
        "DeniedReason": {
          "x-original-name": "Denied Reason",
          "x-computed": true,
          "type": "string",
          "length": 100
        },
        "Program": {
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "TradeAddress": {
          "x-computed": true,
          "type": "string"
        },
        "TradeCity": {
          "type": "string",
          "length": 200
        },
        "TradeProvince": {
          "x-computed": true,
          "type": "string",
          "length": 100
        },
        "TradePostalCode": {
          "type": "string",
          "length": 14
        },
        "DateAsOf": {
          "x-original-name": "Date As Of",
          "x-computed": true,
          "x-precision": 23,
          "x-scale": 3,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "LossCauseDesc": {
          "x-original-name": "Loss Cause Desc",
          "type": "string",
          "length": 100
        }
      }
    },
    "RefactorLog": {
      "x-table": "dbo.__RefactorLog",
      "resource": "RefactorLogs",
      "required": [
        "OperationKey"
      ],
      "properties": {
        "OperationKey": {
          "x-key": true,
          "x-nullable": false,
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "Registrant": {
      "x-table": "dbo.Registrants",
      "resource": "Registrants",
      "required": [
        "Name"
      ],
      "properties": {
        "ID": {
          "x-key": true,
          "x-default-sql": "(newid())",
          "x-nullable": false,
          "type": "string",
          "format": "uuid"
        },
        "RegistrantID": {
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-navigation": [
            {
              "inversePropertyName": "Registrant",
              "name": "Claimants",
              "type": "Claimant"
            },
            {
              "inversePropertyName": "Registrant",
              "name": "Trades",
              "type": "Trade"
            },
            {
              "inversePropertyName": "Registrant",
              "name": "Brokerages",
              "type": "Brokerage"
            },
            {
              "inversePropertyName": "Registrant",
              "name": "Insureds",
              "type": "Insured"
            },
            {
              "inversePropertyName": "Registrant",
              "name": "OtherParties",
              "type": "OtherParty"
            }
          ]
        },
        "Name": {
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "RegistrantNo": {
          "type": "string",
          "length": 7
        },
        "RegistrationExpiryDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "YearsOfExperience": {
          "x-precision": 5,
          "type": "integer",
          "format": "int16"
        },
        "Address": {
          "type": "string",
          "length": 450
        },
        "Parameter": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "ProvinceID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Registrants"
          }
        },
        "City": {
          "type": "string",
          "length": 100
        },
        "PostalCode": {
          "type": "string",
          "length": 7
        },
        "EmailAddress": {
          "type": "string",
          "length": 450
        },
        "BusinessPhoneNum": {
          "type": "string",
          "length": 50
        },
        "CellPhoneNum": {
          "type": "string",
          "length": 50
        },
        "FaxNum": {
          "type": "string",
          "length": 50
        },
        "Parameter1": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "PreferredCommunicationMethodID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter1",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Registrants1"
          }
        },
        "Brokerage": {
          "type": "object",
          "$ref": "#/definitions/Brokerage"
        },
        "BrokerageID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Brokerages",
            "parentEntityType": "Brokerage",
            "type": "Brokerage",
            "principalKey": "BrokerageID",
            "name": "Brokerage",
            "textProperty": "Name",
            "navigationProperty": "Registrants"
          }
        },
        "Claimants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Claimant"
          }
        },
        "Trades": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Trade"
          }
        },
        "Brokerages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brokerage"
          }
        },
        "Insureds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Insured"
          }
        },
        "OtherParties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OtherParty"
          }
        }
      }
    },
    "RemoveCrossReference": {
      "x-view": "sp",
      "x-table": "dbo.RemoveCrossReference",
      "x-parameters": [
        {
          "name": "BaseClaimID",
          "type": "integer"
        },
        {
          "name": "XRefClaimID",
          "type": "integer"
        }
      ],
      "resource": "RemoveCrossReferences",
      "properties": {}
    },
    "RemoveFutureCounselDiary": {
      "x-view": "sp",
      "x-table": "dbo.RemoveFutureCounselDiaries",
      "x-parameters": [
        {
          "name": "ClaimID",
          "type": "integer"
        }
      ],
      "resource": "RemoveFutureCounselDiaries",
      "properties": {}
    },
    "RemoveFutureDiary": {
      "x-view": "sp",
      "x-table": "dbo.RemoveFutureDiaries",
      "x-parameters": [
        {
          "name": "ClaimID",
          "type": "integer"
        }
      ],
      "resource": "RemoveFutureDiaries",
      "properties": {}
    },
    "ReorderAllClaimOrder": {
      "x-view": "sp",
      "x-table": "dbo.ReorderAllClaimOrders",
      "resource": "ReorderAllClaimOrders",
      "properties": {}
    },
    "ReorderClaimantOrder": {
      "x-view": "sp",
      "x-table": "dbo.ReorderClaimantOrder",
      "x-parameters": [
        {
          "name": "ClaimID",
          "type": "integer"
        }
      ],
      "resource": "ReorderClaimantOrders",
      "properties": {}
    },
    "ReorderExpertOrder": {
      "x-view": "sp",
      "x-table": "dbo.ReorderExpertOrder",
      "x-parameters": [
        {
          "name": "ClaimID",
          "type": "integer"
        }
      ],
      "resource": "ReorderExpertOrders",
      "properties": {}
    },
    "ReorderInsuredOrder": {
      "x-view": "sp",
      "x-table": "dbo.ReorderInsuredOrder",
      "x-parameters": [
        {
          "name": "ClaimID",
          "type": "integer"
        }
      ],
      "resource": "ReorderInsuredOrders",
      "properties": {}
    },
    "ReorderOtherPartiesOrder": {
      "x-view": "sp",
      "x-table": "dbo.ReorderOtherPartiesOrder",
      "x-parameters": [
        {
          "name": "ClaimID",
          "type": "integer"
        }
      ],
      "resource": "ReorderOtherPartiesOrders",
      "properties": {}
    },
    "ReorderTradesOrder": {
      "x-view": "sp",
      "x-table": "dbo.ReorderTradesOrder",
      "x-parameters": [
        {
          "name": "ClaimID",
          "type": "integer"
        }
      ],
      "resource": "ReorderTradesOrders",
      "properties": {}
    },
    "ReserveChangeHistory": {
      "x-view": "sp",
      "x-table": "dbo.ReserveChangeHistory",
      "x-parameters": [
        {
          "name": "StartDate",
          "type": "string",
          "format": "date-time",
          "size": 8
        },
        {
          "name": "EndDate",
          "type": "string",
          "format": "date-time",
          "size": 8
        },
        {
          "name": "ProgramID",
          "type": "integer"
        }
      ],
      "resource": "ReserveChangeHistories",
      "required": [
        "ClaimNo"
      ],
      "properties": {
        "ClaimNo": {
          "x-nullable": false,
          "type": "string",
          "length": 40,
          "x-key": true,
          "x-virtual": true
        },
        "AmountClaimed": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ClaimDate": {
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "TransactionDate": {
          "x-precision": 23,
          "x-scale": 3,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "IndemnityIncreased": {
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "IndemnityDecreased": {
          "x-computed": true,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingIncreased": {
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingDecreased": {
          "x-computed": true,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalIncreased": {
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalDecreased": {
          "x-computed": true,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpenseIncreased": {
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpenseDecreased": {
          "x-computed": true,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "Role": {
      "x-table": "dbo.Roles",
      "resource": "Roles",
      "required": [],
      "properties": {
        "Id": {
          "x-key": true,
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-navigation": [
            {
              "inversePropertyName": "Role",
              "name": "FilesRoles",
              "type": "FilesRole"
            },
            {
              "inversePropertyName": "Role",
              "name": "NoteRoles",
              "type": "NoteRole"
            }
          ]
        },
        "AspNetRoleId": {
          "type": "string",
          "length": 450
        },
        "Name": {
          "type": "string",
          "length": 255
        },
        "Ranking": {
          "x-precision": 5,
          "type": "integer",
          "format": "int16"
        },
        "FilesRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilesRole"
          }
        },
        "NoteRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NoteRole"
          }
        }
      }
    },
    "SalesClassificationBreakdownByPolicyYearAndTradeType": {
      "x-view": "sp",
      "x-table": "dbo.SalesClassificationBreakdownByPolicyYearAndTradeType",
      "x-parameters": [
        {
          "name": "ReportDate",
          "type": "string",
          "format": "date-time",
          "size": 8
        },
        {
          "name": "ProgramID",
          "type": "integer"
        }
      ],
      "resource": "SalesClassificationBreakdownByPolicyYearAndTradeTypes",
      "required": [],
      "properties": {
        "PolicyYear": {
          "x-original-name": "Policy Year",
          "x-computed": true,
          "type": "string",
          "length": 120,
          "x-key": true,
          "x-virtual": true
        },
        "Policy": {
          "type": "string",
          "length": 100
        },
        "TradeType": {
          "type": "string",
          "length": 100
        },
        "Open": {
          "x-precision": 10,
          "type": "integer"
        },
        "Closed": {
          "x-precision": 10,
          "type": "integer"
        },
        "TotalClaims": {
          "x-precision": 10,
          "type": "integer"
        }
      }
    },
    "SalesClassificationBreakdownByTradeType": {
      "x-view": "sp",
      "x-table": "dbo.SalesClassificationBreakdownByTradeType",
      "x-parameters": [
        {
          "name": "ReportDate",
          "type": "string",
          "format": "date-time",
          "size": 8
        },
        {
          "name": "ProgramID",
          "type": "integer"
        }
      ],
      "resource": "SalesClassificationBreakdownByTradeTypes",
      "required": [],
      "properties": {
        "TradeType": {
          "type": "string",
          "length": 100,
          "x-key": true,
          "x-virtual": true
        },
        "Open": {
          "x-precision": 10,
          "type": "integer"
        },
        "Closed": {
          "x-precision": 10,
          "type": "integer"
        },
        "TotalClaims": {
          "x-computed": true,
          "x-precision": 10,
          "type": "integer"
        }
      }
    },
    "SentLetter": {
      "x-table": "dbo.SentLetters",
      "resource": "SentLetters",
      "required": [
        "ClaimID",
        "DateLetterSent",
        "LetterTypeID",
        "FileID"
      ],
      "properties": {
        "Claim": {
          "type": "object",
          "$ref": "#/definitions/Claim"
        },
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-foreignKey": {
            "parentTable": "Claims",
            "parentEntityType": "Claim",
            "type": "Claim",
            "principalKey": "ClaimID",
            "name": "Claim",
            "textProperty": "ClaimNo",
            "primaryKey": "ID",
            "navigationProperty": "SentLetters"
          }
        },
        "DateLetterSent": {
          "x-key": true,
          "x-nullable": false,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "Parameter": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "LetterTypeID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "SentLetters"
          }
        },
        "FileID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        }
      }
    },
    "ServiceProvider": {
      "x-table": "dbo.ServiceProviders",
      "resource": "ServiceProviders",
      "required": [
        "Name"
      ],
      "properties": {
        "ID": {
          "x-key": true,
          "x-default-sql": "(newid())",
          "x-nullable": false,
          "type": "string",
          "format": "uuid"
        },
        "ServiceProviderID": {
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-navigation": [
            {
              "inversePropertyName": "ServiceProvider",
              "name": "Experts",
              "type": "Expert"
            },
            {
              "inversePropertyName": "ServiceProvider",
              "name": "Transactions",
              "type": "Transaction"
            },
            {
              "inversePropertyName": "ServiceProvider",
              "name": "Occurrences",
              "type": "Occurrence"
            },
            {
              "inversePropertyName": "ServiceProvider",
              "name": "Claims",
              "type": "Claim"
            },
            {
              "inversePropertyName": "ServiceProvider1",
              "name": "Claims1",
              "type": "Claim"
            },
            {
              "inversePropertyName": "ServiceProvider2",
              "name": "Claims2",
              "type": "Claim"
            },
            {
              "inversePropertyName": "ServiceProvider3",
              "name": "Claims3",
              "type": "Claim"
            },
            {
              "inversePropertyName": "ServiceProvider4",
              "name": "Claims4",
              "type": "Claim"
            },
            {
              "inversePropertyName": "ServiceProvider5",
              "name": "Claims5",
              "type": "Claim"
            },
            {
              "inversePropertyName": "ServiceProvider",
              "name": "ClaimFileReportings",
              "type": "ClaimFileReporting"
            },
            {
              "inversePropertyName": "ServiceProvider",
              "name": "EoClaimDetails",
              "type": "EoClaimDetail"
            },
            {
              "inversePropertyName": "ServiceProvider1",
              "name": "EoClaimDetails1",
              "type": "EoClaimDetail"
            },
            {
              "inversePropertyName": "ServiceProvider2",
              "name": "EoClaimDetails2",
              "type": "EoClaimDetail"
            },
            {
              "inversePropertyName": "ServiceProvider3",
              "name": "EoClaimDetails3",
              "type": "EoClaimDetail"
            },
            {
              "inversePropertyName": "ServiceProvider4",
              "name": "EoClaimDetails4",
              "type": "EoClaimDetail"
            },
            {
              "inversePropertyName": "ServiceProvider",
              "name": "CourtDates",
              "type": "CourtDate"
            },
            {
              "inversePropertyName": "ServiceProvider",
              "name": "OtherParties",
              "type": "OtherParty"
            },
            {
              "inversePropertyName": "ServiceProvider",
              "name": "ServiceProviderClaimPreferences",
              "type": "ServiceProviderClaimPreference"
            }
          ]
        },
        "Name": {
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "Address": {
          "type": "string",
          "length": 500
        },
        "Parameter": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "ProvinceID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "ServiceProviders"
          }
        },
        "City": {
          "type": "string",
          "length": 100
        },
        "PostalCode": {
          "type": "string",
          "length": 7
        },
        "EmailAddress": {
          "type": "string",
          "length": 450
        },
        "BusinessPhoneNum": {
          "type": "string",
          "length": 25
        },
        "CellPhoneNum": {
          "type": "string",
          "length": 25
        },
        "FaxNum": {
          "type": "string",
          "length": 25
        },
        "UserID": {
          "type": "string",
          "length": 450
        },
        "Parameter1": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "PreferredCommunicationMethodID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter1",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "ServiceProviders1"
          }
        },
        "Firm": {
          "type": "object",
          "$ref": "#/definitions/Firm"
        },
        "FirmID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Firms",
            "parentEntityType": "Firm",
            "type": "Firm",
            "principalKey": "FirmID",
            "name": "Firm",
            "textProperty": "Name",
            "primaryKey": "ID",
            "navigationProperty": "ServiceProviders"
          }
        },
        "IgnoreNullUserID": {
          "x-computed": true,
          "type": "string",
          "format": "uuid"
        },
        "Parameter2": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "ServiceProviderRoleID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter2",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "ServiceProviders2"
          }
        },
        "Active": {
          "x-default-sql": "((1))",
          "type": "boolean"
        },
        "SubmitPayments": {
          "type": "boolean"
        },
        "ViewReports": {
          "type": "boolean"
        },
        "FileHandler": {
          "type": "boolean"
        },
        "PrimeUser": {
          "type": "boolean"
        },
        "AllowedToViewConfidential": {
          "type": "boolean"
        },
        "IPAddress": {
          "type": "string",
          "length": 15
        },
        "ReportDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "ServiceProviderObjectID": {
          "type": "string",
          "length": 50
        },
        "StartDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "DefaultEmail": {
          "type": "boolean"
        },
        "Experts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Expert"
          }
        },
        "Transactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Transaction"
          }
        },
        "Occurrences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Occurrence"
          }
        },
        "Claims": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Claim"
          }
        },
        "ClaimFileReportings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimFileReporting"
          }
        },
        "EoClaimDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EoClaimDetail"
          }
        },
        "CourtDates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CourtDate"
          }
        },
        "OtherParties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OtherParty"
          }
        },
        "ServiceProviderClaimPreferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceProviderClaimPreference"
          }
        }
      }
    },
    "ServiceProviderBordereau": {
      "x-view": "sp",
      "x-table": "dbo.ServiceProviderBordereau",
      "x-parameters": [
        {
          "name": "ReportDate",
          "type": "string",
          "format": "date-time",
          "size": 8
        }
      ],
      "resource": "ServiceProviderBordereaus",
      "required": [
        "ProgramName",
        "ContractYear",
        "ClaimNo",
        "Program",
        "CoverageIssue"
      ],
      "properties": {
        "ProgramName": {
          "x-original-name": "Program Name",
          "x-nullable": false,
          "type": "string",
          "length": 100,
          "x-key": true,
          "x-virtual": true
        },
        "ContractYear": {
          "x-original-name": "Contract Year",
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "ClaimNo": {
          "x-nullable": false,
          "type": "string",
          "length": 40
        },
        "AdjusterClaimNo": {
          "type": "string",
          "length": 100
        },
        "Broker": {
          "type": "string",
          "length": 200
        },
        "Claimant": {
          "type": "string"
        },
        "Program": {
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "Status": {
          "type": "string",
          "length": 100
        },
        "CoverageIssue": {
          "x-original-name": "Coverage Issue",
          "x-nullable": false,
          "type": "string",
          "length": 3
        },
        "DefenseCounsel": {
          "x-original-name": "Defense Counsel",
          "type": "string",
          "length": 200
        },
        "DefenseFirm": {
          "x-original-name": "Defense Firm",
          "type": "string",
          "length": 200
        },
        "Adjuster": {
          "type": "string",
          "length": 200
        },
        "AdjustingFirm": {
          "x-original-name": "Adjusting Firm",
          "type": "string",
          "length": 200
        },
        "FileHandler": {
          "x-original-name": "File Handler",
          "type": "string",
          "length": 200
        },
        "CoverageCounsel": {
          "x-original-name": "Coverage Counsel",
          "type": "string",
          "length": 200
        },
        "ClaimDate": {
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "AgreementDate": {
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "ReportDate": {
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "CloseDate": {
          "x-precision": 23,
          "x-scale": 3,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "AmountOfClaim": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "StatusOfFunds": {
          "type": "string",
          "length": 100
        },
        "IndemnityReserve": {
          "x-original-name": "Indemnity Reserve",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalReserve": {
          "x-original-name": "Legal Reserve",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingReserve": {
          "x-original-name": "Adjusting Reserve",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalReserve": {
          "x-original-name": "Total Reserve",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "IndemnityPaid": {
          "x-original-name": "Indemnity Paid",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalPaid": {
          "x-original-name": "Legal Paid",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalFees": {
          "x-original-name": "Legal Fees",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalDisbursements": {
          "x-original-name": "Legal Disbursements",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalTaxes": {
          "x-original-name": "Legal Taxes",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingPaid": {
          "x-original-name": "Adjusting Paid",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjusterFees": {
          "x-original-name": "Adjuster Fees",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjusterDisbursements": {
          "x-original-name": "Adjuster Disbursements",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjusterTaxes": {
          "x-original-name": "Adjuster Taxes",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalPaid": {
          "x-original-name": "Total Paid",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Deductible": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Subrogation": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalIncurred": {
          "x-original-name": "Total Incurred",
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TransactionType": {
          "type": "string",
          "length": 100
        },
        "TransactionValue": {
          "x-precision": 10,
          "type": "integer"
        },
        "CurrentClaimStatus": {
          "x-original-name": "Current Claim Status",
          "type": "string",
          "length": 100
        },
        "ConvertedToLitigation": {
          "x-original-name": "Converted To Litigation",
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "ClaimInitiation": {
          "x-original-name": "Claim Initiation",
          "type": "string",
          "length": 100
        },
        "TradeAddress": {
          "type": "string"
        },
        "TradeCity": {
          "type": "string",
          "length": 200
        },
        "TradeProvince": {
          "x-precision": 10,
          "type": "integer"
        },
        "TradePostalCode": {
          "type": "string",
          "length": 14
        },
        "ClaimDescription": {
          "type": "string",
          "length": 2000
        },
        "TotalOccuranceIndemnity": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LastExaminerDiary": {
          "x-original-name": "Last Examiner Diary",
          "x-precision": 10,
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        }
      }
    },
    "ServiceProviderClaimPreference": {
      "x-table": "dbo.ServiceProviderClaimPreferences",
      "resource": "ServiceProviderClaimPreferences",
      "required": [
        "ServiceProviderID",
        "ClaimID",
        "DateLastAccessed"
      ],
      "properties": {
        "ServiceProvider": {
          "type": "object",
          "$ref": "#/definitions/ServiceProvider"
        },
        "ServiceProviderID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-foreignKey": {
            "parentTable": "ServiceProviders",
            "parentEntityType": "ServiceProvider",
            "type": "ServiceProvider",
            "principalKey": "ServiceProviderID",
            "name": "ServiceProvider",
            "textProperty": "Name",
            "primaryKey": "ID",
            "navigationProperty": "ServiceProviderClaimPreferences"
          }
        },
        "Claim": {
          "type": "object",
          "$ref": "#/definitions/Claim"
        },
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-foreignKey": {
            "parentTable": "Claims",
            "parentEntityType": "Claim",
            "type": "Claim",
            "principalKey": "ClaimID",
            "name": "Claim",
            "textProperty": "ClaimNo",
            "primaryKey": "ID",
            "navigationProperty": "ServiceProviderClaimPreferences"
          }
        },
        "DateLastAccessed": {
          "x-nullable": false,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "JsonPreference": {
          "type": "string",
          "length": 8000
        }
      }
    },
    "ServiceProviderDetail": {
      "x-view": true,
      "x-table": "dbo.ServiceProviderDetails",
      "resource": "ServiceProviderDetails",
      "required": [
        "ServiceProviderID",
        "Name",
        "NameandFirm",
        "ID"
      ],
      "properties": {
        "ServiceProviderID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        },
        "Name": {
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "EmailAddress": {
          "type": "string",
          "length": 450
        },
        "FirmName": {
          "x-original-name": "Firm Name",
          "type": "string",
          "length": 100
        },
        "FirmType": {
          "x-original-name": "Firm Type",
          "type": "string",
          "length": 50
        },
        "BusinessPhoneNum": {
          "type": "string",
          "length": 25
        },
        "ServiceProviderRole": {
          "x-original-name": "Service Provider Role",
          "type": "string",
          "length": 50
        },
        "NameandFirm": {
          "x-original-name": "Name and Firm",
          "x-nullable": false,
          "type": "string",
          "length": 203
        },
        "UserID": {
          "type": "string",
          "length": 450
        },
        "FirmID": {
          "x-precision": 10,
          "type": "integer"
        },
        "SystemRole": {
          "type": "string",
          "length": 256
        },
        "ID": {
          "x-nullable": false,
          "type": "string",
          "format": "uuid"
        },
        "Active": {
          "type": "boolean"
        },
        "SubmitPayments": {
          "type": "boolean"
        },
        "ViewReports": {
          "type": "boolean"
        },
        "FileHandler": {
          "type": "boolean"
        },
        "PrimeUser": {
          "type": "boolean"
        },
        "AllowedToViewConfidential": {
          "type": "boolean"
        },
        "IPAddress": {
          "type": "string",
          "length": 15
        }
      }
    },
    "SetAutoReserve": {
      "x-view": "sp",
      "x-table": "dbo.SetAutoReserve",
      "x-parameters": [
        {
          "name": "ClaimID",
          "type": "integer"
        },
        {
          "name": "UserID",
          "type": "string",
          "size": 900
        }
      ],
      "resource": "SetAutoReserves",
      "properties": {}
    },
    "SetAutoResize": {
      "x-view": "sp",
      "x-table": "dbo.SetAutoResize",
      "x-parameters": [
        {
          "name": "ClaimID",
          "type": "integer"
        },
        {
          "name": "UserID",
          "type": "string",
          "size": 900
        }
      ],
      "resource": "SetAutoResizes",
      "properties": {}
    },
    "SetCppAutoReserve": {
      "x-view": "sp",
      "x-table": "dbo.SetCPPAutoReserve",
      "x-parameters": [
        {
          "name": "ClaimID",
          "type": "integer"
        },
        {
          "name": "UserID",
          "type": "string",
          "size": 900
        }
      ],
      "resource": "SetCppAutoReserves",
      "properties": {}
    },
    "SetProgramManagerAsReport": {
      "x-view": "sp",
      "x-table": "dbo.SetProgramManagerAsReport",
      "x-parameters": [
        {
          "name": "ClaimID",
          "type": "integer"
        }
      ],
      "resource": "SetProgramManagerAsReports",
      "properties": {}
    },
    "SpMSforeachWorker": {
      "x-view": "sp",
      "x-table": "dbo.sp_MSforeach_worker",
      "x-parameters": [
        {
          "name": "command1",
          "type": "string",
          "size": 4000
        },
        {
          "name": "replacechar",
          "type": "string",
          "size": 2
        },
        {
          "name": "command2",
          "type": "string",
          "size": 4000
        },
        {
          "name": "command3",
          "type": "string",
          "size": 4000
        },
        {
          "name": "worker_type",
          "type": "integer"
        }
      ],
      "resource": "SpMSforeachWorkers",
      "properties": {}
    },
    "SpMSforeachtable": {
      "x-view": "sp",
      "x-table": "dbo.sp_MSforeachtable",
      "x-parameters": [
        {
          "name": "command1",
          "type": "string",
          "size": 4000
        },
        {
          "name": "replacechar",
          "type": "string",
          "size": 2
        },
        {
          "name": "command2",
          "type": "string",
          "size": 4000
        },
        {
          "name": "command3",
          "type": "string",
          "size": 4000
        },
        {
          "name": "whereand",
          "type": "string",
          "size": 4000
        },
        {
          "name": "precommand",
          "type": "string",
          "size": 4000
        },
        {
          "name": "postcommand",
          "type": "string",
          "size": 4000
        }
      ],
      "resource": "SpMSforeachtables",
      "properties": {}
    },
    "StandardEmailAddress": {
      "x-view": true,
      "x-table": "dbo.StandardEmailAddresses",
      "resource": "StandardEmailAddresses",
      "required": [
        "EmailAddress"
      ],
      "properties": {
        "EmailAddress": {
          "x-nullable": false,
          "type": "string",
          "length": 24,
          "x-key": true,
          "x-virtual": true
        }
      }
    },
    "StoreClaimAuditTrail": {
      "x-view": "sp",
      "x-table": "dbo.StoreClaimAuditTrail",
      "x-parameters": [
        {
          "name": "ClaimID",
          "type": "integer"
        },
        {
          "name": "UserID",
          "type": "string",
          "size": 900
        }
      ],
      "resource": "StoreClaimAuditTrails",
      "properties": {}
    },
    "SystemNotice": {
      "x-table": "dbo.SystemNotices",
      "resource": "SystemNotices",
      "required": [
        "SystemNotice1"
      ],
      "properties": {
        "SystemNoticeID": {
          "x-key": true,
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "SystemNotice1": {
          "x-original-name": "SystemNotice",
          "x-nullable": false,
          "type": "string",
          "length": 2000
        }
      }
    },
    "SystemNoticeRead": {
      "x-table": "dbo.SystemNoticeRead",
      "resource": "SystemNoticeReads",
      "required": [
        "UserID",
        "MessageRead"
      ],
      "properties": {
        "UserID": {
          "x-nullable": false,
          "type": "string",
          "length": 450,
          "x-key": true
        },
        "MessageRead": {
          "x-nullable": false,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        }
      }
    },
    "SystemTemplate": {
      "x-table": "dbo.SystemTemplates",
      "resource": "SystemTemplates",
      "required": [
        "TemplateName",
        "TemplateDocument"
      ],
      "properties": {
        "TemplateID": {
          "x-key": true,
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "TemplateName": {
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "TemplateDocument": {
          "x-nullable": false,
          "type": "string",
          "format": "binary"
        }
      }
    },
    "TemplateDetail": {
      "x-view": true,
      "x-table": "dbo.TemplateDetails",
      "resource": "TemplateDetails",
      "required": [
        "DiaryTemplateID",
        "Title",
        "TemplateType"
      ],
      "properties": {
        "DiaryTemplateID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        },
        "Title": {
          "x-nullable": false,
          "type": "string",
          "length": 50
        },
        "Subject": {
          "type": "string",
          "length": 125
        },
        "TemplateText": {
          "type": "string"
        },
        "DisplayOrder": {
          "x-precision": 5,
          "type": "integer",
          "format": "int16"
        },
        "TemplateType": {
          "x-nullable": false,
          "type": "string",
          "length": 50
        },
        "DefaultSendTo": {
          "type": "string",
          "length": 50
        }
      }
    },
    "TokenCache": {
      "x-table": "dbo.TokenCache",
      "resource": "TokenCaches",
      "required": [
        "UserId",
        "AccessToken",
        "RefreshToken",
        "ExpiresAt"
      ],
      "properties": {
        "Id": {
          "x-key": true,
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "UserId": {
          "x-nullable": false,
          "type": "string",
          "length": 450
        },
        "AccessToken": {
          "x-nullable": false,
          "type": "string"
        },
        "RefreshToken": {
          "x-nullable": false,
          "type": "string"
        },
        "ExpiresAt": {
          "x-nullable": false,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        }
      }
    },
    "TotalClaimsByAllegationAndLossCause": {
      "x-view": "sp",
      "x-table": "dbo.TotalClaimsByAllegationAndLossCause",
      "x-parameters": [
        {
          "name": "ReportDate",
          "type": "string",
          "format": "date-time",
          "size": 8
        },
        {
          "name": "ProgramID",
          "type": "integer"
        }
      ],
      "resource": "TotalClaimsByAllegationAndLossCauses",
      "required": [],
      "properties": {
        "Allegation": {
          "type": "string",
          "length": 100,
          "x-key": true,
          "x-virtual": true
        },
        "LossCause": {
          "type": "string",
          "length": 100
        },
        "ClaimsReported": {
          "x-precision": 10,
          "type": "integer"
        }
      }
    },
    "TotalClaimsByBoardJuridiction": {
      "x-view": "sp",
      "x-table": "dbo.TotalClaimsByBoardJuridiction",
      "x-parameters": [
        {
          "name": "ReportDate",
          "type": "string",
          "format": "date-time",
          "size": 8
        },
        {
          "name": "ProgramID",
          "type": "integer"
        }
      ],
      "resource": "TotalClaimsByBoardJuridictions",
      "required": [],
      "properties": {
        "BoardJurisdiction": {
          "type": "string",
          "length": 100,
          "x-key": true,
          "x-virtual": true
        },
        "TotalClaims": {
          "x-precision": 10,
          "type": "integer"
        }
      }
    },
    "TotalClaimsByClaimTypeAndLossCause": {
      "x-view": "sp",
      "x-table": "dbo.TotalClaimsByClaimTypeAndLossCause",
      "x-parameters": [
        {
          "name": "ReportDate",
          "type": "string",
          "format": "date-time",
          "size": 8
        },
        {
          "name": "ProgramID",
          "type": "integer"
        }
      ],
      "resource": "TotalClaimsByClaimTypeAndLossCauses",
      "required": [],
      "properties": {
        "TradeType": {
          "x-computed": true,
          "type": "string",
          "length": 100,
          "x-key": true,
          "x-virtual": true
        },
        "LossCause": {
          "type": "string",
          "length": 100
        },
        "TotalClaims": {
          "x-precision": 10,
          "type": "integer"
        }
      }
    },
    "TotalClaimsByLitigationType": {
      "x-view": "sp",
      "x-table": "dbo.TotalClaimsByLitigationType",
      "x-parameters": [
        {
          "name": "ReportDate",
          "type": "string",
          "format": "date-time",
          "size": 8
        },
        {
          "name": "ProgramID",
          "type": "integer"
        }
      ],
      "resource": "TotalClaimsByLitigationTypes",
      "required": [
        "PolicyYear"
      ],
      "properties": {
        "PolicyYear": {
          "x-original-name": "Policy Year",
          "x-nullable": false,
          "type": "string",
          "length": 100,
          "x-key": true,
          "x-virtual": true
        },
        "SmallClaims": {
          "x-precision": 10,
          "type": "integer"
        },
        "QueensBench": {
          "x-precision": 10,
          "type": "integer"
        },
        "TotalLitigation": {
          "x-computed": true,
          "x-precision": 10,
          "type": "integer"
        },
        "TotalClaims": {
          "x-precision": 10,
          "type": "integer"
        }
      }
    },
    "TotalClaimsbyAllegation": {
      "x-view": "sp",
      "x-table": "dbo.TotalClaimsbyAllegations",
      "x-parameters": [
        {
          "name": "ReportDate",
          "type": "string",
          "format": "date-time",
          "size": 8
        },
        {
          "name": "ProgramID",
          "type": "integer"
        }
      ],
      "resource": "TotalClaimsbyAllegations",
      "required": [],
      "properties": {
        "Allegation": {
          "type": "string",
          "length": 100,
          "x-key": true,
          "x-virtual": true
        },
        "Open": {
          "x-precision": 10,
          "type": "integer"
        },
        "Closed": {
          "x-precision": 10,
          "type": "integer"
        },
        "TotalClaims": {
          "x-computed": true,
          "x-precision": 10,
          "type": "integer"
        }
      }
    },
    "TotalClosedClaimsWithIndemnityPaid": {
      "x-view": "sp",
      "x-table": "dbo.TotalClosedClaimsWithIndemnityPaid",
      "x-parameters": [
        {
          "name": "ReportDate",
          "type": "string",
          "format": "date-time",
          "size": 8
        },
        {
          "name": "ProgramID",
          "type": "integer"
        }
      ],
      "resource": "TotalClosedClaimsWithIndemnityPaids",
      "required": [],
      "properties": {
        "ClaimStatus": {
          "type": "string",
          "length": 12,
          "x-key": true,
          "x-virtual": true
        },
        "ClaimsReported": {
          "x-precision": 10,
          "type": "integer"
        },
        "LossCause": {
          "type": "string",
          "length": 100
        },
        "IndemnityPaid": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingPaid": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalPaid": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpensePaid": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalIncurred": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "TotalDollarsPaidByLossCause": {
      "x-view": "sp",
      "x-table": "dbo.TotalDollarsPaidByLossCause",
      "x-parameters": [
        {
          "name": "ReportDate",
          "type": "string",
          "format": "date-time",
          "size": 8
        },
        {
          "name": "ProgramID",
          "type": "integer"
        }
      ],
      "resource": "TotalDollarsPaidByLossCauses",
      "required": [],
      "properties": {
        "LossCause": {
          "type": "string",
          "length": 100,
          "x-key": true,
          "x-virtual": true
        },
        "ClaimsReported": {
          "x-precision": 10,
          "type": "integer"
        },
        "TotalPaid": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "TotalIncurredLossesByPolicyYear": {
      "x-view": "sp",
      "x-table": "dbo.TotalIncurredLossesByPolicyYear",
      "x-parameters": [
        {
          "name": "ReportDate",
          "type": "string",
          "format": "date-time",
          "size": 8
        },
        {
          "name": "ProgramID",
          "type": "integer"
        }
      ],
      "resource": "TotalIncurredLossesByPolicyYears",
      "required": [
        "PolicyYear"
      ],
      "properties": {
        "PolicyYear": {
          "x-original-name": "Policy Year",
          "x-nullable": false,
          "type": "string",
          "length": 100,
          "x-key": true,
          "x-virtual": true
        },
        "Open": {
          "x-precision": 10,
          "type": "integer"
        },
        "Closed": {
          "x-precision": 10,
          "type": "integer"
        },
        "TotalClaims": {
          "x-precision": 10,
          "type": "integer"
        },
        "IndemnityReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "IndemnityPaid": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpenseReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpensePaid": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingPaid": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalPaid": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Recovery": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalIncurred": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "TotalPaidByClaimStatus": {
      "x-view": "sp",
      "x-table": "dbo.TotalPaidByClaimStatus",
      "x-parameters": [
        {
          "name": "ReportDate",
          "type": "string",
          "format": "date-time",
          "size": 8
        },
        {
          "name": "ProgramID",
          "type": "integer"
        }
      ],
      "resource": "TotalPaidByClaimStatuses",
      "required": [
        "ClaimStatus"
      ],
      "properties": {
        "ClaimStatus": {
          "x-nullable": false,
          "type": "string",
          "length": 100,
          "x-key": true,
          "x-virtual": true
        },
        "ClaimsReported": {
          "x-precision": 10,
          "type": "integer"
        },
        "IndemnityReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "IndemnityPaid": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpenseReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ExpensePaid": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AdjustingPaid": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalReserve": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "LegalPaid": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Recovery": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalPayment": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "TotalIncurred": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "Trade": {
      "x-table": "dbo.Trades",
      "resource": "Trades",
      "required": [
        "Address1"
      ],
      "properties": {
        "TradeID": {
          "x-key": true,
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-navigation": [
            {
              "inversePropertyName": "Trade",
              "name": "CommissionInstallments",
              "type": "CommissionInstallment"
            }
          ]
        },
        "Claim": {
          "type": "object",
          "$ref": "#/definitions/Claim"
        },
        "ClaimID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Claims",
            "parentEntityType": "Claim",
            "type": "Claim",
            "principalKey": "ClaimID",
            "name": "Claim",
            "textProperty": "ClaimNo",
            "primaryKey": "ID",
            "navigationProperty": "Trades"
          }
        },
        "Address1": {
          "x-nullable": false,
          "type": "string",
          "length": 450
        },
        "Address2": {
          "type": "string",
          "length": 450
        },
        "UnitNumber": {
          "type": "string",
          "length": 20
        },
        "Parameter": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "Province": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Trades"
          }
        },
        "City": {
          "type": "string",
          "length": 100
        },
        "PostalCode": {
          "type": "string",
          "length": 7
        },
        "Parameter1": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "HomeInspection": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter1",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Trades1"
          }
        },
        "Parameter2": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "SPIS": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter2",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Trades2"
          }
        },
        "Parameter3": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "PersonalInterest": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter3",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Trades3"
          }
        },
        "Parameter4": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "Country": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter4",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Trades4"
          }
        },
        "LeaseDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "Price": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "DateClosed": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "DepositAmount": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Parameter5": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "TradeTypeID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter5",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Trades5"
          }
        },
        "DealClosed": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "BuyerName": {
          "type": "string",
          "length": 50
        },
        "BuyerCDFileID": {
          "x-precision": 10,
          "type": "integer"
        },
        "SellerName": {
          "type": "string",
          "length": 50
        },
        "SellerCDFileID": {
          "x-precision": 10,
          "type": "integer"
        },
        "BuilderDeal": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "Builder": {
          "type": "object",
          "$ref": "#/definitions/Builder"
        },
        "BuilderID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Builders",
            "parentEntityType": "Builder",
            "type": "Builder",
            "principalKey": "BuilderID",
            "name": "Builder",
            "textProperty": "Name",
            "primaryKey": "ID",
            "navigationProperty": "Trades"
          }
        },
        "BuilderReferenceNum": {
          "type": "string",
          "length": 25
        },
        "CommissionPercentage": {
          "x-precision": 53,
          "type": "number",
          "format": "double"
        },
        "CommissionGross": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "CommissionPaidInInstallments": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "PreconstructionDeal": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "SharedCommission": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "Registrant": {
          "type": "object",
          "$ref": "#/definitions/Registrant"
        },
        "SharedAgentID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Registrants",
            "parentEntityType": "Registrant",
            "type": "Registrant",
            "principalKey": "RegistrantID",
            "name": "Registrant",
            "textProperty": "Name",
            "primaryKey": "ID",
            "navigationProperty": "Trades"
          }
        },
        "SharedAgentSubmitClaim": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "SharedAgentClaimID": {
          "x-precision": 10,
          "type": "integer"
        },
        "AmountCollected": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "AmountCollectedDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "date"
        },
        "OutstandingMoney": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "OutstandingMoneyInTransit": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "type": "boolean"
        },
        "OutstandingMoneyAmount": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "OutstandingMoneyAction": {
          "type": "string",
          "length": 500
        },
        "Parameter6": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "UrbanOrRuralID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter6",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Trades6"
          }
        },
        "DisplayOrder": {
          "x-default-sql": "((1))",
          "x-precision": 5,
          "type": "integer",
          "format": "int16"
        },
        "CommissionOtherParties": {
          "x-precision": 53,
          "type": "number",
          "format": "double"
        },
        "AmountPreviouslyPaid": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Parameter7": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "DidDealClose": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter7",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Trades7"
          }
        },
        "CommissionInstallments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommissionInstallment"
          }
        }
      }
    },
    "TradeDetail": {
      "x-view": true,
      "x-table": "dbo.TradeDetails",
      "resource": "TradeDetails",
      "required": [
        "TradeID",
        "Address1"
      ],
      "properties": {
        "TradeID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        },
        "Address1": {
          "x-nullable": false,
          "type": "string",
          "length": 450
        },
        "Address2": {
          "type": "string",
          "length": 450
        },
        "UnitNumber": {
          "type": "string",
          "length": 20
        },
        "City": {
          "type": "string",
          "length": 100
        },
        "PostalCode": {
          "type": "string",
          "length": 7
        },
        "DisplayOrder": {
          "x-precision": 5,
          "type": "integer",
          "format": "int16"
        },
        "Province": {
          "type": "string",
          "length": 50
        },
        "ClaimID": {
          "x-precision": 10,
          "type": "integer"
        },
        "TradeType": {
          "type": "string",
          "length": 50
        }
      }
    },
    "Transaction": {
      "x-table": "dbo.Transactions",
      "resource": "Transactions",
      "required": [
        "ClaimID",
        "IncurredTypeID",
        "IncurredCategoryID",
        "TransactionDate",
        "Amount"
      ],
      "properties": {
        "ID": {
          "x-key": true,
          "x-default-sql": "(newid())",
          "x-nullable": false,
          "type": "string",
          "format": "uuid"
        },
        "TransactionID": {
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-navigation": [
            {
              "inversePropertyName": "Transaction1",
              "name": "Transactions1",
              "type": "Transaction"
            }
          ]
        },
        "Claim": {
          "type": "object",
          "$ref": "#/definitions/Claim"
        },
        "ClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Claims",
            "parentEntityType": "Claim",
            "type": "Claim",
            "principalKey": "ClaimID",
            "name": "Claim",
            "textProperty": "ClaimNo",
            "primaryKey": "ID",
            "navigationProperty": "Transactions"
          }
        },
        "Parameter": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "IncurredTypeID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Transactions"
          }
        },
        "Parameter1": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "IncurredCategoryID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter1",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Transactions1"
          }
        },
        "EntryDate": {
          "x-default-sql": "(getdate())",
          "x-nullable": false,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "TransactionDate": {
          "x-nullable": false,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "Amount": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "PayableTo": {
          "type": "string",
          "length": 500
        },
        "ChequeNum": {
          "type": "string",
          "length": 50
        },
        "InvoiceNum": {
          "type": "string",
          "length": 25
        },
        "Comments": {
          "type": "string",
          "length": 500
        },
        "EnteredByID": {
          "type": "string",
          "length": 450
        },
        "Transaction1": {
          "type": "object",
          "$ref": "#/definitions/Transaction"
        },
        "RelatedTransactionID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Transactions",
            "parentEntityType": "Transaction",
            "type": "Transaction",
            "principalKey": "TransactionID",
            "name": "Transaction1",
            "textProperty": "PayableTo",
            "primaryKey": "ID",
            "navigationProperty": "Transactions1"
          }
        },
        "Fees": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Disbursements": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Taxes": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "ApplicableDeductible": {
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Firm": {
          "type": "object",
          "$ref": "#/definitions/Firm"
        },
        "FirmID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Firms",
            "parentEntityType": "Firm",
            "type": "Firm",
            "principalKey": "FirmID",
            "name": "Firm",
            "textProperty": "Name",
            "primaryKey": "ID",
            "navigationProperty": "Transactions"
          }
        },
        "JournalNumber": {
          "type": "string",
          "length": 25
        },
        "VoidDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "SendingInstructions": {
          "type": "string",
          "length": 500
        },
        "ServiceProvider": {
          "type": "object",
          "$ref": "#/definitions/ServiceProvider"
        },
        "ServiceProviderID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "ServiceProviders",
            "parentEntityType": "ServiceProvider",
            "type": "ServiceProvider",
            "principalKey": "ServiceProviderID",
            "name": "ServiceProvider",
            "textProperty": "Name",
            "primaryKey": "ID",
            "navigationProperty": "Transactions"
          }
        },
        "Parameter2": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "ReserveTypeID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter2",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "Transactions2"
          }
        },
        "InvoicePeriodStartDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "InvoicePeriodEndDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "InvoiceDate": {
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "Transactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Transaction"
          }
        }
      }
    },
    "TransactionApprovalLimit": {
      "x-table": "dbo.TransactionApprovalLimits",
      "resource": "TransactionApprovalLimits",
      "required": [
        "IncurredTypeID",
        "IncurredCategoryID"
      ],
      "properties": {
        "TransactionApprovalLimit1": {
          "type": "object",
          "$ref": "#/definitions/TransactionApprovalLimit"
        },
        "ApprovalLimitID": {
          "x-identity": true,
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-foreignKey": {
            "parentTable": "TransactionApprovalLimits",
            "parentEntityType": "TransactionApprovalLimit",
            "type": "TransactionApprovalLimit",
            "principalKey": "ApprovalLimitID",
            "name": "TransactionApprovalLimit1",
            "textProperty": "RoleID",
            "navigationProperty": "TransactionApprovalLimits1"
          },
          "x-navigation": [
            {
              "inversePropertyName": "TransactionApprovalLimit1",
              "name": "TransactionApprovalLimits1",
              "type": "TransactionApprovalLimit"
            }
          ]
        },
        "RoleID": {
          "type": "string",
          "length": 450
        },
        "IncurredTypeID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "IncurredCategoryID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "ApprovalLimit": {
          "x-default-sql": "((0))",
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "UserID": {
          "type": "string",
          "length": 450
        },
        "Parameter": {
          "type": "object",
          "$ref": "#/definitions/Parameter"
        },
        "ProgramID": {
          "x-precision": 10,
          "type": "integer",
          "x-foreignKey": {
            "parentTable": "Parameters",
            "parentEntityType": "Parameter",
            "type": "Parameter",
            "principalKey": "ParameterID",
            "name": "Parameter",
            "textProperty": "ParamAbbrev",
            "navigationProperty": "TransactionApprovalLimits"
          }
        },
        "TransactionApprovalLimits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionApprovalLimit"
          }
        }
      }
    },
    "TransactionListReport": {
      "x-view": "sp",
      "x-table": "dbo.TransactionListReport",
      "x-parameters": [
        {
          "name": "StartDate",
          "type": "string",
          "format": "date-time",
          "size": 8
        },
        {
          "name": "EndDate",
          "type": "string",
          "format": "date-time",
          "size": 8
        }
      ],
      "resource": "TransactionListReports",
      "required": [
        "ClaimNo",
        "ContractYear",
        "TransactionDate",
        "Type"
      ],
      "properties": {
        "ClaimNo": {
          "x-nullable": false,
          "type": "string",
          "length": 40,
          "x-key": true,
          "x-virtual": true
        },
        "Policy": {
          "x-original-name": "Policy #",
          "type": "string",
          "length": 100
        },
        "ContractYear": {
          "x-original-name": "Contract Year",
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "TransactionDate": {
          "x-nullable": false,
          "x-precision": 23,
          "x-scale": 3,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "LossType": {
          "x-original-name": "Loss Type",
          "type": "string",
          "length": 12
        },
        "Type": {
          "x-nullable": false,
          "type": "string",
          "length": 100
        },
        "Reserve": {
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Payment": {
          "x-computed": true,
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        },
        "Comments": {
          "type": "string",
          "length": 1000
        },
        "AddedBy": {
          "x-original-name": "Added By",
          "type": "string",
          "length": 900
        }
      }
    },
    "UpdateCounselClaimNum": {
      "x-view": "sp",
      "x-table": "dbo.UpdateCounselClaimNum",
      "x-parameters": [
        {
          "name": "ClaimID",
          "type": "integer"
        },
        {
          "name": "CounselFileNo",
          "type": "string",
          "size": 100
        }
      ],
      "resource": "UpdateCounselClaimNums",
      "properties": {}
    },
    "UpdateFileDetail": {
      "x-view": "sp",
      "x-table": "dbo.UpdateFileDetails",
      "x-parameters": [
        {
          "name": "FileID",
          "type": "integer"
        },
        {
          "name": "Subject",
          "type": "string",
          "size": 510
        },
        {
          "name": "Filename",
          "type": "string",
          "size": 2000
        },
        {
          "name": "LargeLoss",
          "type": "boolean"
        },
        {
          "name": "Sticky",
          "type": "boolean"
        },
        {
          "name": "Confidential",
          "type": "boolean"
        },
        {
          "name": "VisibleToCounsel",
          "type": "boolean"
        },
        {
          "name": "FileTypeID",
          "type": "integer"
        },
        {
          "name": "Comments",
          "type": "string",
          "size": -1
        },
        {
          "name": "Description",
          "type": "string",
          "size": 510
        }
      ],
      "resource": "UpdateFileDetails",
      "properties": {}
    },
    "UpdateJournalEntryNumber": {
      "x-view": "sp",
      "x-table": "dbo.UpdateJournalEntryNumber",
      "x-parameters": [
        {
          "name": "TransactionID",
          "type": "integer"
        },
        {
          "name": "UserID",
          "type": "string",
          "size": 900
        }
      ],
      "resource": "UpdateJournalEntryNumbers",
      "properties": {}
    },
    "UpdateReportDate": {
      "x-view": "sp",
      "x-table": "dbo.UpdateReportDate",
      "x-parameters": [
        {
          "name": "ReportDate",
          "type": "string",
          "format": "date-time",
          "size": 3
        },
        {
          "name": "UserID",
          "type": "string",
          "size": 900
        },
        {
          "name": "StartDate",
          "type": "string",
          "format": "date-time",
          "size": 3
        }
      ],
      "resource": "UpdateReportDates",
      "properties": {}
    },
    "UpdateUploadedFile": {
      "x-view": "sp",
      "x-table": "dbo.UpdateUploadedFile",
      "x-parameters": [
        {
          "name": "FileID",
          "type": "integer"
        },
        {
          "name": "Subject",
          "type": "string",
          "size": 510
        },
        {
          "name": "LargeLoss",
          "type": "boolean"
        },
        {
          "name": "Sticky",
          "type": "boolean"
        },
        {
          "name": "FileTypeID",
          "type": "integer"
        },
        {
          "name": "Confidential",
          "type": "boolean"
        },
        {
          "name": "FileDescription",
          "type": "string",
          "size": 510
        },
        {
          "name": "VisibleToCounsel",
          "type": "boolean"
        }
      ],
      "resource": "UpdateUploadedFiles",
      "properties": {}
    },
    "UserDetail": {
      "x-view": true,
      "x-table": "dbo.UserDetails",
      "resource": "UserDetails",
      "required": [
        "Id"
      ],
      "properties": {
        "Id": {
          "x-nullable": false,
          "type": "string",
          "length": 450,
          "x-key": true,
          "x-virtual": true
        },
        "Email": {
          "type": "string",
          "length": 256
        },
        "Name": {
          "type": "string",
          "length": 100
        },
        "Firm": {
          "type": "string",
          "length": 100
        },
        "Role": {
          "type": "string",
          "length": 256
        },
        "UserName": {
          "type": "string",
          "length": 256
        },
        "AbbreviatedName": {
          "type": "string",
          "length": 101
        },
        "SubmitPayments": {
          "type": "boolean"
        },
        "Active": {
          "type": "boolean"
        },
        "ViewReports": {
          "type": "boolean"
        },
        "FileHandler": {
          "type": "boolean"
        },
        "AllowedToViewConfidential": {
          "type": "boolean"
        },
        "FirmID": {
          "x-precision": 10,
          "type": "integer"
        },
        "ServiceProviderID": {
          "x-precision": 10,
          "type": "integer"
        },
        "PrimeUser": {
          "type": "boolean"
        }
      }
    },
    "VoidPayment": {
      "x-view": "sp",
      "x-table": "dbo.VoidPayments",
      "x-parameters": [
        {
          "name": "ProgramID",
          "type": "integer"
        },
        {
          "name": "StartDate",
          "type": "string",
          "format": "date-time",
          "size": 3
        },
        {
          "name": "EndDate",
          "type": "string",
          "format": "date-time",
          "size": 3
        }
      ],
      "resource": "VoidPayments",
      "required": [
        "ClaimNo",
        "TransactionDate",
        "Amount"
      ],
      "properties": {
        "ClaimNo": {
          "x-nullable": false,
          "type": "string",
          "length": 40,
          "x-key": true,
          "x-virtual": true
        },
        "ControlNumber": {
          "type": "string",
          "length": 50
        },
        "TransactionDate": {
          "x-nullable": false,
          "x-precision": 23,
          "x-scale": 3,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "VoidDate": {
          "x-precision": 23,
          "x-scale": 3,
          "type": "string",
          "format": "date-time",
          "x-datetime": "datetime"
        },
        "PayTypeDescription": {
          "x-computed": true,
          "x-nullable": false,
          "type": "string",
          "length": 202
        },
        "Payee": {
          "type": "string",
          "length": 1000
        },
        "Amount": {
          "x-nullable": false,
          "x-precision": 19,
          "x-scale": 4,
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "VoidTransaction": {
      "x-view": "sp",
      "x-table": "dbo.VoidTransaction",
      "x-parameters": [
        {
          "name": "TransactionID",
          "type": "integer"
        }
      ],
      "resource": "VoidTransactions",
      "properties": {}
    },
    "XRefClaim": {
      "x-view": true,
      "x-table": "dbo.XRefClaims",
      "resource": "XRefClaims",
      "required": [
        "BaseClaimID",
        "XRefClaimID",
        "XRefClaimNo",
        "ProgramID"
      ],
      "properties": {
        "BaseClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer",
          "x-key": true,
          "x-virtual": true
        },
        "XRefClaimID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "XRefClaimNo": {
          "x-nullable": false,
          "type": "string",
          "length": 20
        },
        "XRefInsureds": {
          "type": "string"
        },
        "XRefClaimants": {
          "type": "string"
        },
        "XRefAddress": {
          "type": "string"
        },
        "ProgramID": {
          "x-nullable": false,
          "x-precision": 10,
          "type": "integer"
        },
        "DefenceCounsel": {
          "type": "string",
          "length": 100
        },
        "FileHandler": {
          "type": "string",
          "length": 100
        }
      }
    }
  },
  "paths": {
    "/AccountingAuditsFunc(ProgramID={ProgramID},StartDate='{StartDate}',EndDate='{EndDate}')": {
      "get": {
        "operationId": "getAccountingAudits",
        "parameters": [
          {
            "in": "path",
            "name": "ProgramID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "StartDate",
            "type": "string"
          },
          {
            "in": "path",
            "name": "EndDate",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/AccountingAudit"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/AccountingRecoveryAuditsFunc(ProgramID={ProgramID},StartDate='{StartDate}',EndDate='{EndDate}')": {
      "get": {
        "operationId": "getAccountingRecoveryAudits",
        "parameters": [
          {
            "in": "path",
            "name": "ProgramID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "StartDate",
            "type": "string"
          },
          {
            "in": "path",
            "name": "EndDate",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/AccountingRecoveryAudit"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ActiveFileHandlerDiaries": {
      "get": {
        "operationId": "getActiveFileHandlerDiaries",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ActiveFileHandlerDiary"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ActiveUserDiaryReportsFunc(ReminderDateFrom='{ReminderDateFrom}',ReminderDateTo='{ReminderDateTo}',UserID='{UserID}')": {
      "get": {
        "operationId": "getActiveUserDiaryReports",
        "parameters": [
          {
            "in": "path",
            "name": "ReminderDateFrom",
            "type": "string"
          },
          {
            "in": "path",
            "name": "ReminderDateTo",
            "type": "string"
          },
          {
            "in": "path",
            "name": "UserID",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ActiveUserDiaryReport"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ActualDaysOpens": {
      "get": {
        "operationId": "getActualDaysOpens",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ActualDaysOpen"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ActuaryBordereausFunc(ReportDate='{ReportDate}')": {
      "get": {
        "operationId": "getActuaryBordereaus",
        "parameters": [
          {
            "in": "path",
            "name": "ReportDate",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ActuaryBordereau"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/AddErrorLogsFunc(ErrorMessage='{ErrorMessage}',UserID='{UserID}',ClaimID={ClaimID})": {
      "get": {
        "operationId": "AddErrorLogs",
        "parameters": [
          {
            "in": "path",
            "name": "ErrorMessage",
            "type": "string"
          },
          {
            "in": "path",
            "name": "UserID",
            "type": "string"
          },
          {
            "in": "path",
            "name": "ClaimID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/AddErrorLog"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Administrators": {
      "get": {
        "operationId": "getAdministrators",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/Administrator"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createAdministrator",
        "parameters": [
          {
            "in": "body",
            "name": "Administrator",
            "schema": {
              "$ref": "#/definitions/Administrator"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Administrator"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Appointments": {
      "get": {
        "operationId": "getAppointments",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/Appointment"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createAppointment",
        "parameters": [
          {
            "in": "body",
            "name": "Appointment",
            "schema": {
              "$ref": "#/definitions/Appointment"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Appointment"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/AuditTrails": {
      "get": {
        "operationId": "getAuditTrails",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/AuditTrail"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createAuditTrail",
        "parameters": [
          {
            "in": "body",
            "name": "AuditTrail",
            "schema": {
              "$ref": "#/definitions/AuditTrail"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/AuditTrail"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/AuditTrailDetails": {
      "get": {
        "operationId": "getAuditTrailDetails",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/AuditTrailDetail"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/AutoReservings": {
      "get": {
        "operationId": "getAutoReservings",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/AutoReserving"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createAutoReserving",
        "parameters": [
          {
            "in": "body",
            "name": "AutoReserving",
            "schema": {
              "$ref": "#/definitions/AutoReserving"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/AutoReserving"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/AvailableIncurredCategories": {
      "get": {
        "operationId": "getAvailableIncurredCategories",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/AvailableIncurredCategory"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/AvailableIncurredTypes": {
      "get": {
        "operationId": "getAvailableIncurredTypes",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/AvailableIncurredType"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/BinaryRoleValues": {
      "get": {
        "operationId": "getBinaryRoleValues",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/BinaryRoleValue"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createBinaryRoleValue",
        "parameters": [
          {
            "in": "body",
            "name": "BinaryRoleValue",
            "schema": {
              "$ref": "#/definitions/BinaryRoleValue"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/BinaryRoleValue"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Brokerages": {
      "get": {
        "operationId": "getBrokerages",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/Brokerage"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createBrokerage",
        "parameters": [
          {
            "in": "body",
            "name": "Brokerage",
            "schema": {
              "$ref": "#/definitions/Brokerage"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Brokerage"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/BrokerageContacts": {
      "get": {
        "operationId": "getBrokerageContacts",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/BrokerageContact"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createBrokerageContact",
        "parameters": [
          {
            "in": "body",
            "name": "BrokerageContact",
            "schema": {
              "$ref": "#/definitions/BrokerageContact"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/BrokerageContact"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Builders": {
      "get": {
        "operationId": "getBuilders",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/Builder"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createBuilder",
        "parameters": [
          {
            "in": "body",
            "name": "Builder",
            "schema": {
              "$ref": "#/definitions/Builder"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Builder"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/BuilderDetails": {
      "get": {
        "operationId": "getBuilderDetails",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/BuilderDetail"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/CdiNoticeOfClaimDetails": {
      "get": {
        "operationId": "getCdiNoticeOfClaimDetails",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/CdiNoticeOfClaimDetail"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createCdiNoticeOfClaimDetail",
        "parameters": [
          {
            "in": "body",
            "name": "CdiNoticeOfClaimDetail",
            "schema": {
              "$ref": "#/definitions/CdiNoticeOfClaimDetail"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/CdiNoticeOfClaimDetail"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/CdpClaimDetails": {
      "get": {
        "operationId": "getCdpClaimDetails",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/CdpClaimDetail"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createCdpClaimDetail",
        "parameters": [
          {
            "in": "body",
            "name": "CdpClaimDetail",
            "schema": {
              "$ref": "#/definitions/CdpClaimDetail"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/CdpClaimDetail"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/CheckInvoicesForErrorsFunc(FirmID={FirmID})": {
      "get": {
        "operationId": "CheckInvoicesForErrors",
        "parameters": [
          {
            "in": "path",
            "name": "FirmID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/CheckInvoicesForError"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/CheckSystemNoticesFunc(UserID='{UserID}')": {
      "get": {
        "operationId": "getCheckSystemNotices",
        "parameters": [
          {
            "in": "path",
            "name": "UserID",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/CheckSystemNotice"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/CheckTransactionLimitsFunc(UserID='{UserID}',IncurredCategoryID={IncurredCategoryID},IncurredTypeID={IncurredTypeID},ProgramID={ProgramID})": {
      "get": {
        "operationId": "getCheckTransactionLimits",
        "parameters": [
          {
            "in": "path",
            "name": "UserID",
            "type": "string"
          },
          {
            "in": "path",
            "name": "IncurredCategoryID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "IncurredTypeID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "ProgramID",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/CheckTransactionLimit"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Claims": {
      "get": {
        "operationId": "getClaims",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/Claim"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createClaim",
        "parameters": [
          {
            "in": "body",
            "name": "Claim",
            "schema": {
              "$ref": "#/definitions/Claim"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Claim"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimActivityLogsFunc(ClaimID={ClaimID},UserID='{UserID}')": {
      "get": {
        "operationId": "getClaimActivityLogs",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "UserID",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClaimActivityLog"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimBasePrincipals": {
      "get": {
        "operationId": "getClaimBasePrincipals",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClaimBasePrincipal"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimClaimants": {
      "get": {
        "operationId": "getClaimClaimants",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClaimClaimant"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimCurrentPayments": {
      "get": {
        "operationId": "getClaimCurrentPayments",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClaimCurrentPayment"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimCurrentReserves": {
      "get": {
        "operationId": "getClaimCurrentReserves",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClaimCurrentReserf"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimDetailsBordereaus": {
      "get": {
        "operationId": "getClaimDetailsBordereaus",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClaimDetailsBordereau"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimDetailsReportsFunc(StartDate='{StartDate}',EndDate='{EndDate}',ClaimStatusID={ClaimStatusID})": {
      "get": {
        "operationId": "getClaimDetailsReports",
        "parameters": [
          {
            "in": "path",
            "name": "StartDate",
            "type": "string"
          },
          {
            "in": "path",
            "name": "EndDate",
            "type": "string"
          },
          {
            "in": "path",
            "name": "ClaimStatusID",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClaimDetailsReport"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimDiaryDetails": {
      "get": {
        "operationId": "getClaimDiaryDetails",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClaimDiaryDetail"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimEmailAddressesFunc(ClaimID={ClaimID})": {
      "get": {
        "operationId": "getClaimEmailAddresses",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimID",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClaimEmailAddress"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimExperts": {
      "get": {
        "operationId": "getClaimExperts",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClaimExpert"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimFileHandlerAndReports": {
      "get": {
        "operationId": "getClaimFileHandlerAndReports",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClaimFileHandlerAndReport"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimFileReportings": {
      "get": {
        "operationId": "getClaimFileReportings",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClaimFileReporting"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createClaimFileReporting",
        "parameters": [
          {
            "in": "body",
            "name": "ClaimFileReporting",
            "schema": {
              "$ref": "#/definitions/ClaimFileReporting"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/ClaimFileReporting"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimFileSummariesFunc(ClaimID={ClaimID},UserID='{UserID}')": {
      "get": {
        "operationId": "getClaimFileSummaries",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "UserID",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClaimFileSummary"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimFilesByUsersFunc(UserID='{UserID}',ClaimID={ClaimID})": {
      "get": {
        "operationId": "getClaimFilesByUsers",
        "parameters": [
          {
            "in": "path",
            "name": "UserID",
            "type": "string"
          },
          {
            "in": "path",
            "name": "ClaimID",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClaimFilesByUser"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimIndividualTransactions": {
      "get": {
        "operationId": "getClaimIndividualTransactions",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClaimIndividualTransaction"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimInsureds": {
      "get": {
        "operationId": "getClaimInsureds",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClaimInsured"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimLagTimeReportsFunc(StartDate='{StartDate}',EndDate='{EndDate}')": {
      "get": {
        "operationId": "getClaimLagTimeReports",
        "parameters": [
          {
            "in": "path",
            "name": "StartDate",
            "type": "string"
          },
          {
            "in": "path",
            "name": "EndDate",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClaimLagTimeReport"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimLists": {
      "get": {
        "operationId": "getClaimLists",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClaimList"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimLitigationDates": {
      "get": {
        "operationId": "getClaimLitigationDates",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClaimLitigationDate"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createClaimLitigationDate",
        "parameters": [
          {
            "in": "body",
            "name": "ClaimLitigationDate",
            "schema": {
              "$ref": "#/definitions/ClaimLitigationDate"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/ClaimLitigationDate"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimOtherParties": {
      "get": {
        "operationId": "getClaimOtherParties",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClaimOtherParty"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimPreferencesDetails": {
      "get": {
        "operationId": "getClaimPreferencesDetails",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClaimPreferencesDetail"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimPrincipals": {
      "get": {
        "operationId": "getClaimPrincipals",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClaimPrincipal"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimRapidSearchLists": {
      "get": {
        "operationId": "getClaimRapidSearchLists",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClaimRapidSearchList"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimReports": {
      "get": {
        "operationId": "getClaimReports",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClaimReport"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createClaimReport",
        "parameters": [
          {
            "in": "body",
            "name": "ClaimReport",
            "schema": {
              "$ref": "#/definitions/ClaimReport"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/ClaimReport"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimReportDetails": {
      "get": {
        "operationId": "getClaimReportDetails",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClaimReportDetail"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimSearchLists": {
      "get": {
        "operationId": "getClaimSearchLists",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClaimSearchList"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimStatusHistories": {
      "get": {
        "operationId": "getClaimStatusHistories",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClaimStatusHistory"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createClaimStatusHistory",
        "parameters": [
          {
            "in": "body",
            "name": "ClaimStatusHistory",
            "schema": {
              "$ref": "#/definitions/ClaimStatusHistory"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/ClaimStatusHistory"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimSummariesFunc(ClaimID={ClaimID})": {
      "get": {
        "operationId": "getClaimSummaries",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimID",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClaimSummary"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimTotalIncurredByCategories": {
      "get": {
        "operationId": "getClaimTotalIncurredByCategories",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClaimTotalIncurredByCategory"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimTotalIncurredByTransactionDates": {
      "get": {
        "operationId": "getClaimTotalIncurredByTransactionDates",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClaimTotalIncurredByTransactionDate"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimTransactionSummaryByDatesFunc(ReportDate='{ReportDate}')": {
      "get": {
        "operationId": "getClaimTransactionSummaryByDates",
        "parameters": [
          {
            "in": "path",
            "name": "ReportDate",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClaimTransactionSummaryByDate"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Claimants": {
      "get": {
        "operationId": "getClaimants",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/Claimant"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createClaimant",
        "parameters": [
          {
            "in": "body",
            "name": "Claimant",
            "schema": {
              "$ref": "#/definitions/Claimant"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Claimant"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimantLitigationRoles": {
      "get": {
        "operationId": "getClaimantLitigationRoles",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClaimantLitigationRole"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createClaimantLitigationRole",
        "parameters": [
          {
            "in": "body",
            "name": "ClaimantLitigationRole",
            "schema": {
              "$ref": "#/definitions/ClaimantLitigationRole"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/ClaimantLitigationRole"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimantPaymentsReceiveds": {
      "get": {
        "operationId": "getClaimantPaymentsReceiveds",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClaimantPaymentsReceived"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createClaimantPaymentsReceived",
        "parameters": [
          {
            "in": "body",
            "name": "ClaimantPaymentsReceived",
            "schema": {
              "$ref": "#/definitions/ClaimantPaymentsReceived"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/ClaimantPaymentsReceived"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimantSolicitors": {
      "get": {
        "operationId": "getClaimantSolicitors",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClaimantSolicitor"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createClaimantSolicitor",
        "parameters": [
          {
            "in": "body",
            "name": "ClaimantSolicitor",
            "schema": {
              "$ref": "#/definitions/ClaimantSolicitor"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/ClaimantSolicitor"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimantTotalIncurredByCategories": {
      "get": {
        "operationId": "getClaimantTotalIncurredByCategories",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClaimantTotalIncurredByCategory"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimsClosedQuarterlyReportsFunc(StartDate='{StartDate}',EndDate='{EndDate}')": {
      "get": {
        "operationId": "getClaimsClosedQuarterlyReports",
        "parameters": [
          {
            "in": "path",
            "name": "StartDate",
            "type": "string"
          },
          {
            "in": "path",
            "name": "EndDate",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClaimsClosedQuarterlyReport"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimsWithIndemnities": {
      "get": {
        "operationId": "getClaimsWithIndemnities",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClaimsWithIndemnity"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimsWithIndemnityPaidsFunc(ProgramID={ProgramID},ReportDate='{ReportDate}')": {
      "get": {
        "operationId": "getClaimsWithIndemnityPaids",
        "parameters": [
          {
            "in": "path",
            "name": "ProgramID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "ReportDate",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClaimsWithIndemnityPaid"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimsWithIndemnityPaidDetailedsFunc(ProgramID={ProgramID},ReportDate='{ReportDate}')": {
      "get": {
        "operationId": "getClaimsWithIndemnityPaidDetaileds",
        "parameters": [
          {
            "in": "path",
            "name": "ProgramID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "ReportDate",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClaimsWithIndemnityPaidDetailed"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimsWithIndemnityReservesFunc(ProgramID={ProgramID})": {
      "get": {
        "operationId": "getClaimsWithIndemnityReserves",
        "parameters": [
          {
            "in": "path",
            "name": "ProgramID",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClaimsWithIndemnityReserf"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimsWithIndemnityReserveWithDetailsFunc(ProgramID={ProgramID})": {
      "get": {
        "operationId": "getClaimsWithIndemnityReserveWithDetails",
        "parameters": [
          {
            "in": "path",
            "name": "ProgramID",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClaimsWithIndemnityReserveWithDetail"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimsWithReserveDetailsReportsFunc(StartDate='{StartDate}',EndDate='{EndDate}')": {
      "get": {
        "operationId": "getClaimsWithReserveDetailsReports",
        "parameters": [
          {
            "in": "path",
            "name": "StartDate",
            "type": "string"
          },
          {
            "in": "path",
            "name": "EndDate",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClaimsWithReserveDetailsReport"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClearClaimantLitigationRolesFunc(ClaimantID={ClaimantID})": {
      "get": {
        "operationId": "ClearClaimantLitigationRoles",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimantID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClearClaimantLitigationRole"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClearInvoiceUploadDataFunc()": {
      "get": {
        "operationId": "ClearInvoiceUploadData",
        "parameters": [],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClearInvoiceUploadDatum"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClearSystemNoticesFunc()": {
      "get": {
        "operationId": "ClearSystemNotices",
        "parameters": [],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ClearSystemNotice"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/CloneClaimPrincipalsFunc(ClaimID={ClaimID},ClonedClaimNo='{ClonedClaimNo}',UserID='{UserID}')": {
      "get": {
        "operationId": "getCloneClaimPrincipals",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "ClonedClaimNo",
            "type": "string"
          },
          {
            "in": "path",
            "name": "UserID",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/CloneClaimPrincipal"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/CloseEntireClaimsFunc(ClaimID={ClaimID},UserID='{UserID}')": {
      "get": {
        "operationId": "CloseEntireClaims",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "UserID",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/CloseEntireClaim"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/CloseIndividualClaimReservesFunc(ClaimID={ClaimID},IncurredTypeID={IncurredTypeID},UserID='{UserID}')": {
      "get": {
        "operationId": "CloseIndividualClaimReserves",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "IncurredTypeID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "UserID",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/CloseIndividualClaimReserf"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/CommissionInstallments": {
      "get": {
        "operationId": "getCommissionInstallments",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/CommissionInstallment"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createCommissionInstallment",
        "parameters": [
          {
            "in": "body",
            "name": "CommissionInstallment",
            "schema": {
              "$ref": "#/definitions/CommissionInstallment"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/CommissionInstallment"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ConsolidateClaimantsFunc(ConsolidatedClaimantID={ConsolidatedClaimantID},DiscontinuedClaimantID={DiscontinuedClaimantID})": {
      "get": {
        "operationId": "ConsolidateClaimants",
        "parameters": [
          {
            "in": "path",
            "name": "ConsolidatedClaimantID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "DiscontinuedClaimantID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ConsolidateClaimant"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/CostAwards": {
      "get": {
        "operationId": "getCostAwards",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/CostAward"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createCostAward",
        "parameters": [
          {
            "in": "body",
            "name": "CostAward",
            "schema": {
              "$ref": "#/definitions/CostAward"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/CostAward"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/CostOfClaimsByTypeReportsFunc()": {
      "get": {
        "operationId": "getCostOfClaimsByTypeReports",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/CostOfClaimsByTypeReport"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/CourtDates": {
      "get": {
        "operationId": "getCourtDates",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/CourtDate"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createCourtDate",
        "parameters": [
          {
            "in": "body",
            "name": "CourtDate",
            "schema": {
              "$ref": "#/definitions/CourtDate"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/CourtDate"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/CppNoticeOfClaimsDetails": {
      "get": {
        "operationId": "getCppNoticeOfClaimsDetails",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/CppNoticeOfClaimsDetail"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createCppNoticeOfClaimsDetail",
        "parameters": [
          {
            "in": "body",
            "name": "CppNoticeOfClaimsDetail",
            "schema": {
              "$ref": "#/definitions/CppNoticeOfClaimsDetail"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/CppNoticeOfClaimsDetail"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/CrossReferencedClaims": {
      "get": {
        "operationId": "getCrossReferencedClaims",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/CrossReferencedClaim"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createCrossReferencedClaim",
        "parameters": [
          {
            "in": "body",
            "name": "CrossReferencedClaim",
            "schema": {
              "$ref": "#/definitions/CrossReferencedClaim"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/CrossReferencedClaim"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/CurrentDiaryReportsFunc()": {
      "get": {
        "operationId": "getCurrentDiaryReports",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/CurrentDiaryReport"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/DefenseCounselWithOpenFilesFunc(ProgramID={ProgramID})": {
      "get": {
        "operationId": "getDefenseCounselWithOpenFiles",
        "parameters": [
          {
            "in": "path",
            "name": "ProgramID",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/DefenseCounselWithOpenFile"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Diaries": {
      "get": {
        "operationId": "getDiaries",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/Diary"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createDiary",
        "parameters": [
          {
            "in": "body",
            "name": "Diary",
            "schema": {
              "$ref": "#/definitions/Diary"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Diary"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/DiaryTemplates": {
      "get": {
        "operationId": "getDiaryTemplates",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/DiaryTemplate"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createDiaryTemplate",
        "parameters": [
          {
            "in": "body",
            "name": "DiaryTemplate",
            "schema": {
              "$ref": "#/definitions/DiaryTemplate"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/DiaryTemplate"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/EmailFolders": {
      "get": {
        "operationId": "getEmailFolders",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/EmailFolder"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createEmailFolder",
        "parameters": [
          {
            "in": "body",
            "name": "EmailFolder",
            "schema": {
              "$ref": "#/definitions/EmailFolder"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/EmailFolder"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/EmailLinkFiles": {
      "get": {
        "operationId": "getEmailLinkFiles",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/EmailLinkFile"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createEmailLinkFile",
        "parameters": [
          {
            "in": "body",
            "name": "EmailLinkFile",
            "schema": {
              "$ref": "#/definitions/EmailLinkFile"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/EmailLinkFile"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/EmailMessages": {
      "get": {
        "operationId": "getEmailMessages",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/EmailMessage"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createEmailMessage",
        "parameters": [
          {
            "in": "body",
            "name": "EmailMessage",
            "schema": {
              "$ref": "#/definitions/EmailMessage"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/EmailMessage"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/EmptyReserveBordereausFunc()": {
      "get": {
        "operationId": "getEmptyReserveBordereaus",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/EmptyReserveBordereau"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/EoClaimDetails": {
      "get": {
        "operationId": "getEoClaimDetails",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/EoClaimDetail"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createEoClaimDetail",
        "parameters": [
          {
            "in": "body",
            "name": "EoClaimDetail",
            "schema": {
              "$ref": "#/definitions/EoClaimDetail"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/EoClaimDetail"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/EoNoticeOfClaimsDetails": {
      "get": {
        "operationId": "getEoNoticeOfClaimsDetails",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/EoNoticeOfClaimsDetail"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createEoNoticeOfClaimsDetail",
        "parameters": [
          {
            "in": "body",
            "name": "EoNoticeOfClaimsDetail",
            "schema": {
              "$ref": "#/definitions/EoNoticeOfClaimsDetail"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/EoNoticeOfClaimsDetail"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ErrorDetails": {
      "get": {
        "operationId": "getErrorDetails",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ErrorDetail"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ErrorLogs": {
      "get": {
        "operationId": "getErrorLogs",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ErrorLog"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createErrorLog",
        "parameters": [
          {
            "in": "body",
            "name": "ErrorLog",
            "schema": {
              "$ref": "#/definitions/ErrorLog"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/ErrorLog"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Experts": {
      "get": {
        "operationId": "getExperts",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/Expert"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createExpert",
        "parameters": [
          {
            "in": "body",
            "name": "Expert",
            "schema": {
              "$ref": "#/definitions/Expert"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Expert"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Files": {
      "get": {
        "operationId": "getFiles",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/File"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createFile",
        "parameters": [
          {
            "in": "body",
            "name": "File",
            "schema": {
              "$ref": "#/definitions/File"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/File"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/FileDetails": {
      "get": {
        "operationId": "getFileDetails",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/FileDetail"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/FileRoleDetails": {
      "get": {
        "operationId": "getFileRoleDetails",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/FileRoleDetail"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/FilesRoles": {
      "get": {
        "operationId": "getFilesRoles",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/FilesRole"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createFilesRole",
        "parameters": [
          {
            "in": "body",
            "name": "FilesRole",
            "schema": {
              "$ref": "#/definitions/FilesRole"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/FilesRole"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/FindOpenFilesForRegistrantsFunc(ClaimID={ClaimID})": {
      "get": {
        "operationId": "getFindOpenFilesForRegistrants",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimID",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/FindOpenFilesForRegistrant"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/FindServiceProviderByIdentityUsersFunc(UserID='{UserID}')": {
      "get": {
        "operationId": "getFindServiceProviderByIdentityUsers",
        "parameters": [
          {
            "in": "path",
            "name": "UserID",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/FindServiceProviderByIdentityUser"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Firms": {
      "get": {
        "operationId": "getFirms",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/Firm"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createFirm",
        "parameters": [
          {
            "in": "body",
            "name": "Firm",
            "schema": {
              "$ref": "#/definitions/Firm"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Firm"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/FirmDetails": {
      "get": {
        "operationId": "getFirmDetails",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/FirmDetail"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/FullBordereausFunc(ReportDate='{ReportDate}')": {
      "get": {
        "operationId": "getFullBordereaus",
        "parameters": [
          {
            "in": "path",
            "name": "ReportDate",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/FullBordereau"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/FullBordereauRecosFunc(ReportDate='{ReportDate}')": {
      "get": {
        "operationId": "getFullBordereauRecos",
        "parameters": [
          {
            "in": "path",
            "name": "ReportDate",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/FullBordereauReco"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/FullClaimStatusHistories": {
      "get": {
        "operationId": "getFullClaimStatusHistories",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/FullClaimStatusHistory"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/GeneralSettings": {
      "get": {
        "operationId": "getGeneralSettings",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/GeneralSetting"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createGeneralSetting",
        "parameters": [
          {
            "in": "body",
            "name": "GeneralSetting",
            "schema": {
              "$ref": "#/definitions/GeneralSetting"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/GeneralSetting"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/GenerateClaimNumbersFunc(ProgramID={ProgramID},ContractYear={ContractYear},SelectedOccurrence={SelectedOccurrence},IsIncident={IsIncident})": {
      "get": {
        "operationId": "getGenerateClaimNumbers",
        "parameters": [
          {
            "in": "path",
            "name": "ProgramID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "ContractYear",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "SelectedOccurrence",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "IsIncident",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/GenerateClaimNumber"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/GenerateNewClaimantClaimsFunc(MasterFileID={MasterFileID},ClaimantID={ClaimantID},UserID='{UserID}')": {
      "get": {
        "operationId": "getGenerateNewClaimantClaims",
        "parameters": [
          {
            "in": "path",
            "name": "MasterFileID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "ClaimantID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "UserID",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/GenerateNewClaimantClaim"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/GenerateNewClaimantTradeClaimsFunc(MasterClaimID={MasterClaimID},ClaimantID={ClaimantID},ReportDate='{ReportDate}',UserID='{UserID}')": {
      "get": {
        "operationId": "getGenerateNewClaimantTradeClaims",
        "parameters": [
          {
            "in": "path",
            "name": "MasterClaimID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "ClaimantID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "ReportDate",
            "type": "string"
          },
          {
            "in": "path",
            "name": "UserID",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/GenerateNewClaimantTradeClaim"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/GenerateNewOccurrencesFunc(ProgramID={ProgramID},ContractYear={ContractYear},UserID='{UserID}')": {
      "get": {
        "operationId": "getGenerateNewOccurrences",
        "parameters": [
          {
            "in": "path",
            "name": "ProgramID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "ContractYear",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "UserID",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/GenerateNewOccurrence"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/GetAvailableServiceProvidersFunc(ClaimID={ClaimID})": {
      "get": {
        "operationId": "getGetAvailableServiceProviders",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimID",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/GetAvailableServiceProvider"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/GetFileByIdsFunc(Id='{Id}')": {
      "get": {
        "operationId": "getGetFileByIds",
        "parameters": [
          {
            "in": "path",
            "name": "Id",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/GetFileById"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/GetHigherRankedRolesFunc(UserID='{UserID}')": {
      "get": {
        "operationId": "getGetHigherRankedRoles",
        "parameters": [
          {
            "in": "path",
            "name": "UserID",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/GetHigherRankedRole"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/GetLowerRankedRolesFunc(UserID='{UserID}')": {
      "get": {
        "operationId": "getGetLowerRankedRoles",
        "parameters": [
          {
            "in": "path",
            "name": "UserID",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/GetLowerRankedRole"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/GetMaxDiaryTemplateDisplayOrdersFunc()": {
      "get": {
        "operationId": "getGetMaxDiaryTemplateDisplayOrders",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/GetMaxDiaryTemplateDisplayOrder"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/GetNextClaimantOrderNumsFunc(claimid={claimid})": {
      "get": {
        "operationId": "getGetNextClaimantOrderNums",
        "parameters": [
          {
            "in": "path",
            "name": "claimid",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/GetNextClaimantOrderNum"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/GetNextInsuredOrderNumsFunc(claimid={claimid})": {
      "get": {
        "operationId": "getGetNextInsuredOrderNums",
        "parameters": [
          {
            "in": "path",
            "name": "claimid",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/GetNextInsuredOrderNum"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/GetReportDatesFunc(ServiceProviderID={ServiceProviderID})": {
      "get": {
        "operationId": "getGetReportDates",
        "parameters": [
          {
            "in": "path",
            "name": "ServiceProviderID",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/GetReportDate"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/GetSevenYearsClaimIndemnitiesFunc(ClaimID={ClaimID})": {
      "get": {
        "operationId": "getGetSevenYearsClaimIndemnities",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimID",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/GetSevenYearsClaimIndemnity"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Insureds": {
      "get": {
        "operationId": "getInsureds",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/Insured"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createInsured",
        "parameters": [
          {
            "in": "body",
            "name": "Insured",
            "schema": {
              "$ref": "#/definitions/Insured"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Insured"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/InsuredLitigationRoles": {
      "get": {
        "operationId": "getInsuredLitigationRoles",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/InsuredLitigationRole"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createInsuredLitigationRole",
        "parameters": [
          {
            "in": "body",
            "name": "InsuredLitigationRole",
            "schema": {
              "$ref": "#/definitions/InsuredLitigationRole"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/InsuredLitigationRole"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/InvoiceUploads": {
      "get": {
        "operationId": "getInvoiceUploads",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/InvoiceUpload"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createInvoiceUpload",
        "parameters": [
          {
            "in": "body",
            "name": "InvoiceUpload",
            "schema": {
              "$ref": "#/definitions/InvoiceUpload"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/InvoiceUpload"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/InvoiceUploadFiles": {
      "get": {
        "operationId": "getInvoiceUploadFiles",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/InvoiceUploadFile"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createInvoiceUploadFile",
        "parameters": [
          {
            "in": "body",
            "name": "InvoiceUploadFile",
            "schema": {
              "$ref": "#/definitions/InvoiceUploadFile"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/InvoiceUploadFile"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/InvoiceUploadRowErrors": {
      "get": {
        "operationId": "getInvoiceUploadRowErrors",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/InvoiceUploadRowError"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createInvoiceUploadRowError",
        "parameters": [
          {
            "in": "body",
            "name": "InvoiceUploadRowError",
            "schema": {
              "$ref": "#/definitions/InvoiceUploadRowError"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/InvoiceUploadRowError"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/IssueReportings": {
      "get": {
        "operationId": "getIssueReportings",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/IssueReporting"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createIssueReporting",
        "parameters": [
          {
            "in": "body",
            "name": "IssueReporting",
            "schema": {
              "$ref": "#/definitions/IssueReporting"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/IssueReporting"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/LargeLossBordereausFunc(ReportDate='{ReportDate}')": {
      "get": {
        "operationId": "getLargeLossBordereaus",
        "parameters": [
          {
            "in": "path",
            "name": "ReportDate",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/LargeLossBordereau"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/LastDefenceClaimReportsFunc()": {
      "get": {
        "operationId": "getLastDefenceClaimReports",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/LastDefenceClaimReport"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/LossCauseTags": {
      "get": {
        "operationId": "getLossCauseTags",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/LossCauseTag"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createLossCauseTag",
        "parameters": [
          {
            "in": "body",
            "name": "LossCauseTag",
            "schema": {
              "$ref": "#/definitions/LossCauseTag"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/LossCauseTag"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/LossCauseTagCounts": {
      "get": {
        "operationId": "getLossCauseTagCounts",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/LossCauseTagCount"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/MostRecentStatusChangeDates": {
      "get": {
        "operationId": "getMostRecentStatusChangeDates",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/MostRecentStatusChangeDate"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/MovementBordereausFunc(ReportDate='{ReportDate}',PreviousDate='{PreviousDate}')": {
      "get": {
        "operationId": "getMovementBordereaus",
        "parameters": [
          {
            "in": "path",
            "name": "ReportDate",
            "type": "string"
          },
          {
            "in": "path",
            "name": "PreviousDate",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/MovementBordereau"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/NextClaimDisplayOrders": {
      "get": {
        "operationId": "getNextClaimDisplayOrders",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/NextClaimDisplayOrder"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/NoActiveDiaryBordereausFunc()": {
      "get": {
        "operationId": "getNoActiveDiaryBordereaus",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/NoActiveDiaryBordereau"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Notes": {
      "get": {
        "operationId": "getNotes",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/Note"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createNote",
        "parameters": [
          {
            "in": "body",
            "name": "Note",
            "schema": {
              "$ref": "#/definitions/Note"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Note"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/NoteRoles": {
      "get": {
        "operationId": "getNoteRoles",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/NoteRole"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createNoteRole",
        "parameters": [
          {
            "in": "body",
            "name": "NoteRole",
            "schema": {
              "$ref": "#/definitions/NoteRole"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/NoteRole"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/NoticeOfClaims": {
      "get": {
        "operationId": "getNoticeOfClaims",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/NoticeOfClaim"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createNoticeOfClaim",
        "parameters": [
          {
            "in": "body",
            "name": "NoticeOfClaim",
            "schema": {
              "$ref": "#/definitions/NoticeOfClaim"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/NoticeOfClaim"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/NoticeOfClaimBrokerages": {
      "get": {
        "operationId": "getNoticeOfClaimBrokerages",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/NoticeOfClaimBrokerage"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createNoticeOfClaimBrokerage",
        "parameters": [
          {
            "in": "body",
            "name": "NoticeOfClaimBrokerage",
            "schema": {
              "$ref": "#/definitions/NoticeOfClaimBrokerage"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/NoticeOfClaimBrokerage"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/NoticeOfClaimClaimants": {
      "get": {
        "operationId": "getNoticeOfClaimClaimants",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/NoticeOfClaimClaimant"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createNoticeOfClaimClaimant",
        "parameters": [
          {
            "in": "body",
            "name": "NoticeOfClaimClaimant",
            "schema": {
              "$ref": "#/definitions/NoticeOfClaimClaimant"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/NoticeOfClaimClaimant"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/NoticeOfClaimFiles": {
      "get": {
        "operationId": "getNoticeOfClaimFiles",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/NoticeOfClaimFile"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createNoticeOfClaimFile",
        "parameters": [
          {
            "in": "body",
            "name": "NoticeOfClaimFile",
            "schema": {
              "$ref": "#/definitions/NoticeOfClaimFile"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/NoticeOfClaimFile"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/NoticeOfClaimLists": {
      "get": {
        "operationId": "getNoticeOfClaimLists",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/NoticeOfClaimList"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/NoticeOfClaimPurchasers": {
      "get": {
        "operationId": "getNoticeOfClaimPurchasers",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/NoticeOfClaimPurchaser"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createNoticeOfClaimPurchaser",
        "parameters": [
          {
            "in": "body",
            "name": "NoticeOfClaimPurchaser",
            "schema": {
              "$ref": "#/definitions/NoticeOfClaimPurchaser"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/NoticeOfClaimPurchaser"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/NoticeOfClaimRegistrants": {
      "get": {
        "operationId": "getNoticeOfClaimRegistrants",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/NoticeOfClaimRegistrant"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createNoticeOfClaimRegistrant",
        "parameters": [
          {
            "in": "body",
            "name": "NoticeOfClaimRegistrant",
            "schema": {
              "$ref": "#/definitions/NoticeOfClaimRegistrant"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/NoticeOfClaimRegistrant"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/NoticeOfClaimTrades": {
      "get": {
        "operationId": "getNoticeOfClaimTrades",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/NoticeOfClaimTrade"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createNoticeOfClaimTrade",
        "parameters": [
          {
            "in": "body",
            "name": "NoticeOfClaimTrade",
            "schema": {
              "$ref": "#/definitions/NoticeOfClaimTrade"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/NoticeOfClaimTrade"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/NoticeOfClaimVendors": {
      "get": {
        "operationId": "getNoticeOfClaimVendors",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/NoticeOfClaimVendor"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createNoticeOfClaimVendor",
        "parameters": [
          {
            "in": "body",
            "name": "NoticeOfClaimVendor",
            "schema": {
              "$ref": "#/definitions/NoticeOfClaimVendor"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/NoticeOfClaimVendor"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Occurrences": {
      "get": {
        "operationId": "getOccurrences",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/Occurrence"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createOccurrence",
        "parameters": [
          {
            "in": "body",
            "name": "Occurrence",
            "schema": {
              "$ref": "#/definitions/Occurrence"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Occurrence"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/OccurrenceClaimTrades": {
      "get": {
        "operationId": "getOccurrenceClaimTrades",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/OccurrenceClaimTrade"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/OccurrenceClaimants": {
      "get": {
        "operationId": "getOccurrenceClaimants",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/OccurrenceClaimant"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/OccurrenceDetails": {
      "get": {
        "operationId": "getOccurrenceDetails",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/OccurrenceDetail"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/OccurrenceTotalIncurredByCategories": {
      "get": {
        "operationId": "getOccurrenceTotalIncurredByCategories",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/OccurrenceTotalIncurredByCategory"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/OpenClaimsByLawFirmReportsFunc(ProgramID={ProgramID})": {
      "get": {
        "operationId": "getOpenClaimsByLawFirmReports",
        "parameters": [
          {
            "in": "path",
            "name": "ProgramID",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/OpenClaimsByLawFirmReport"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/OpenClaimsReportsFunc(ProgramID={ProgramID},ReportDate='{ReportDate}')": {
      "get": {
        "operationId": "getOpenClaimsReports",
        "parameters": [
          {
            "in": "path",
            "name": "ProgramID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "ReportDate",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/OpenClaimsReport"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/OpenFilesByLawyers": {
      "get": {
        "operationId": "getOpenFilesByLawyers",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/OpenFilesByLawyer"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/OpenStatusHistories": {
      "get": {
        "operationId": "getOpenStatusHistories",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/OpenStatusHistory"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/OtherParties": {
      "get": {
        "operationId": "getOtherParties",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/OtherParty"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createOtherParty",
        "parameters": [
          {
            "in": "body",
            "name": "OtherParty",
            "schema": {
              "$ref": "#/definitions/OtherParty"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/OtherParty"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ParamTypes": {
      "get": {
        "operationId": "getParamTypes",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ParamType"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createParamType",
        "parameters": [
          {
            "in": "body",
            "name": "ParamType",
            "schema": {
              "$ref": "#/definitions/ParamType"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/ParamType"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Parameters": {
      "get": {
        "operationId": "getParameters",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/Parameter"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createParameter",
        "parameters": [
          {
            "in": "body",
            "name": "Parameter",
            "schema": {
              "$ref": "#/definitions/Parameter"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Parameter"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ParameterDetails": {
      "get": {
        "operationId": "getParameterDetails",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ParameterDetail"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/PeriodPaymentBreakdowns": {
      "get": {
        "operationId": "getPeriodPaymentBreakdowns",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/PeriodPaymentBreakdown"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/PolicySummariesFunc(ReportDate='{ReportDate}',ProgramID={ProgramID})": {
      "get": {
        "operationId": "getPolicySummaries",
        "parameters": [
          {
            "in": "path",
            "name": "ReportDate",
            "type": "string"
          },
          {
            "in": "path",
            "name": "ProgramID",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/PolicySummary"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/PostalCodes": {
      "get": {
        "operationId": "getPostalCodes",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/PostalCode"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createPostalCode",
        "parameters": [
          {
            "in": "body",
            "name": "PostalCode",
            "schema": {
              "$ref": "#/definitions/PostalCode"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/PostalCode"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/PostalCodeDetails": {
      "get": {
        "operationId": "getPostalCodeDetails",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/PostalCodeDetail"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ProcessInvoicePaymentsFunc(InvoiceUploadID={InvoiceUploadID},FirmID={FirmID},TransactionDate='{TransactionDate}',Comments='{Comments}',EnteredBy='{EnteredBy}')": {
      "get": {
        "operationId": "ProcessInvoicePayments",
        "parameters": [
          {
            "in": "path",
            "name": "InvoiceUploadID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "FirmID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "TransactionDate",
            "type": "string"
          },
          {
            "in": "path",
            "name": "Comments",
            "type": "string"
          },
          {
            "in": "path",
            "name": "EnteredBy",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ProcessInvoicePayment"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ProcessPaymentsFunc(TransactionID={TransactionID})": {
      "get": {
        "operationId": "ProcessPayments",
        "parameters": [
          {
            "in": "path",
            "name": "TransactionID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ProcessPayment"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ProvincialCourtActionsReportsFunc(StartDate='{StartDate}',EndDate='{EndDate}')": {
      "get": {
        "operationId": "getProvincialCourtActionsReports",
        "parameters": [
          {
            "in": "path",
            "name": "StartDate",
            "type": "string"
          },
          {
            "in": "path",
            "name": "EndDate",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ProvincialCourtActionsReport"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/QueensBenchActionsReportsFunc(StartDate='{StartDate}',EndDate='{EndDate}')": {
      "get": {
        "operationId": "getQueensBenchActionsReports",
        "parameters": [
          {
            "in": "path",
            "name": "StartDate",
            "type": "string"
          },
          {
            "in": "path",
            "name": "EndDate",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/QueensBenchActionsReport"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Receivers": {
      "get": {
        "operationId": "getReceivers",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/Receiver"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createReceiver",
        "parameters": [
          {
            "in": "body",
            "name": "Receiver",
            "schema": {
              "$ref": "#/definitions/Receiver"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Receiver"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/RecoLloydsBordereausFunc(ReportDate='{ReportDate}')": {
      "get": {
        "operationId": "getRecoLloydsBordereaus",
        "parameters": [
          {
            "in": "path",
            "name": "ReportDate",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/RecoLloydsBordereau"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/RefactorLogs": {
      "get": {
        "operationId": "getRefactorLogs",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/RefactorLog"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createRefactorLog",
        "parameters": [
          {
            "in": "body",
            "name": "RefactorLog",
            "schema": {
              "$ref": "#/definitions/RefactorLog"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/RefactorLog"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Registrants": {
      "get": {
        "operationId": "getRegistrants",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/Registrant"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createRegistrant",
        "parameters": [
          {
            "in": "body",
            "name": "Registrant",
            "schema": {
              "$ref": "#/definitions/Registrant"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Registrant"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/RemoveCrossReferencesFunc(BaseClaimID={BaseClaimID},XRefClaimID={XRefClaimID})": {
      "get": {
        "operationId": "RemoveCrossReferences",
        "parameters": [
          {
            "in": "path",
            "name": "BaseClaimID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "XRefClaimID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/RemoveCrossReference"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/RemoveFutureCounselDiariesFunc(ClaimID={ClaimID})": {
      "get": {
        "operationId": "RemoveFutureCounselDiaries",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/RemoveFutureCounselDiary"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/RemoveFutureDiariesFunc(ClaimID={ClaimID})": {
      "get": {
        "operationId": "RemoveFutureDiaries",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/RemoveFutureDiary"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ReorderAllClaimOrdersFunc()": {
      "get": {
        "operationId": "ReorderAllClaimOrders",
        "parameters": [],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ReorderAllClaimOrder"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ReorderClaimantOrdersFunc(ClaimID={ClaimID})": {
      "get": {
        "operationId": "ReorderClaimantOrders",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ReorderClaimantOrder"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ReorderExpertOrdersFunc(ClaimID={ClaimID})": {
      "get": {
        "operationId": "ReorderExpertOrders",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ReorderExpertOrder"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ReorderInsuredOrdersFunc(ClaimID={ClaimID})": {
      "get": {
        "operationId": "ReorderInsuredOrders",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ReorderInsuredOrder"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ReorderOtherPartiesOrdersFunc(ClaimID={ClaimID})": {
      "get": {
        "operationId": "ReorderOtherPartiesOrders",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ReorderOtherPartiesOrder"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ReorderTradesOrdersFunc(ClaimID={ClaimID})": {
      "get": {
        "operationId": "ReorderTradesOrders",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ReorderTradesOrder"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ReserveChangeHistoriesFunc(StartDate='{StartDate}',EndDate='{EndDate}',ProgramID={ProgramID})": {
      "get": {
        "operationId": "getReserveChangeHistories",
        "parameters": [
          {
            "in": "path",
            "name": "StartDate",
            "type": "string"
          },
          {
            "in": "path",
            "name": "EndDate",
            "type": "string"
          },
          {
            "in": "path",
            "name": "ProgramID",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ReserveChangeHistory"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Roles": {
      "get": {
        "operationId": "getRoles",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/Role"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createRole",
        "parameters": [
          {
            "in": "body",
            "name": "Role",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Role"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/SalesClassificationBreakdownByPolicyYearAndTradeTypesFunc(ReportDate='{ReportDate}',ProgramID={ProgramID})": {
      "get": {
        "operationId": "getSalesClassificationBreakdownByPolicyYearAndTradeTypes",
        "parameters": [
          {
            "in": "path",
            "name": "ReportDate",
            "type": "string"
          },
          {
            "in": "path",
            "name": "ProgramID",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/SalesClassificationBreakdownByPolicyYearAndTradeType"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/SalesClassificationBreakdownByTradeTypesFunc(ReportDate='{ReportDate}',ProgramID={ProgramID})": {
      "get": {
        "operationId": "getSalesClassificationBreakdownByTradeTypes",
        "parameters": [
          {
            "in": "path",
            "name": "ReportDate",
            "type": "string"
          },
          {
            "in": "path",
            "name": "ProgramID",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/SalesClassificationBreakdownByTradeType"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/SentLetters": {
      "get": {
        "operationId": "getSentLetters",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/SentLetter"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createSentLetter",
        "parameters": [
          {
            "in": "body",
            "name": "SentLetter",
            "schema": {
              "$ref": "#/definitions/SentLetter"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/SentLetter"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ServiceProviders": {
      "get": {
        "operationId": "getServiceProviders",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ServiceProvider"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createServiceProvider",
        "parameters": [
          {
            "in": "body",
            "name": "ServiceProvider",
            "schema": {
              "$ref": "#/definitions/ServiceProvider"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/ServiceProvider"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ServiceProviderBordereausFunc(ReportDate='{ReportDate}')": {
      "get": {
        "operationId": "getServiceProviderBordereaus",
        "parameters": [
          {
            "in": "path",
            "name": "ReportDate",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ServiceProviderBordereau"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ServiceProviderClaimPreferences": {
      "get": {
        "operationId": "getServiceProviderClaimPreferences",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ServiceProviderClaimPreference"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createServiceProviderClaimPreference",
        "parameters": [
          {
            "in": "body",
            "name": "ServiceProviderClaimPreference",
            "schema": {
              "$ref": "#/definitions/ServiceProviderClaimPreference"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/ServiceProviderClaimPreference"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ServiceProviderDetails": {
      "get": {
        "operationId": "getServiceProviderDetails",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/ServiceProviderDetail"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/SetAutoReservesFunc(ClaimID={ClaimID},UserID='{UserID}')": {
      "get": {
        "operationId": "SetAutoReserves",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "UserID",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/SetAutoReserve"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/SetAutoResizesFunc(ClaimID={ClaimID},UserID='{UserID}')": {
      "get": {
        "operationId": "SetAutoResizes",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "UserID",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/SetAutoResize"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/SetCppAutoReservesFunc(ClaimID={ClaimID},UserID='{UserID}')": {
      "get": {
        "operationId": "SetCppAutoReserves",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "UserID",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/SetCppAutoReserve"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/SetProgramManagerAsReportsFunc(ClaimID={ClaimID})": {
      "get": {
        "operationId": "SetProgramManagerAsReports",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/SetProgramManagerAsReport"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/SpMSforeachWorkersFunc(command1='{command1}',replacechar='{replacechar}',command2='{command2}',command3='{command3}',worker_type={worker_type})": {
      "get": {
        "operationId": "SpMSforeachWorkers",
        "parameters": [
          {
            "in": "path",
            "name": "command1",
            "type": "string"
          },
          {
            "in": "path",
            "name": "replacechar",
            "type": "string"
          },
          {
            "in": "path",
            "name": "command2",
            "type": "string"
          },
          {
            "in": "path",
            "name": "command3",
            "type": "string"
          },
          {
            "in": "path",
            "name": "worker_type",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/SpMSforeachWorker"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/SpMSforeachtablesFunc(command1='{command1}',replacechar='{replacechar}',command2='{command2}',command3='{command3}',whereand='{whereand}',precommand='{precommand}',postcommand='{postcommand}')": {
      "get": {
        "operationId": "SpMSforeachtables",
        "parameters": [
          {
            "in": "path",
            "name": "command1",
            "type": "string"
          },
          {
            "in": "path",
            "name": "replacechar",
            "type": "string"
          },
          {
            "in": "path",
            "name": "command2",
            "type": "string"
          },
          {
            "in": "path",
            "name": "command3",
            "type": "string"
          },
          {
            "in": "path",
            "name": "whereand",
            "type": "string"
          },
          {
            "in": "path",
            "name": "precommand",
            "type": "string"
          },
          {
            "in": "path",
            "name": "postcommand",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/SpMSforeachtable"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/StandardEmailAddresses": {
      "get": {
        "operationId": "getStandardEmailAddresses",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/StandardEmailAddress"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/StoreClaimAuditTrailsFunc(ClaimID={ClaimID},UserID='{UserID}')": {
      "get": {
        "operationId": "StoreClaimAuditTrails",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "UserID",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/StoreClaimAuditTrail"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/SystemNotices": {
      "get": {
        "operationId": "getSystemNotices",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/SystemNotice"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createSystemNotice",
        "parameters": [
          {
            "in": "body",
            "name": "SystemNotice",
            "schema": {
              "$ref": "#/definitions/SystemNotice"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/SystemNotice"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/SystemNoticeReads": {
      "get": {
        "operationId": "getSystemNoticeReads",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/SystemNoticeRead"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createSystemNoticeRead",
        "parameters": [
          {
            "in": "body",
            "name": "SystemNoticeRead",
            "schema": {
              "$ref": "#/definitions/SystemNoticeRead"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/SystemNoticeRead"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/SystemTemplates": {
      "get": {
        "operationId": "getSystemTemplates",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/SystemTemplate"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createSystemTemplate",
        "parameters": [
          {
            "in": "body",
            "name": "SystemTemplate",
            "schema": {
              "$ref": "#/definitions/SystemTemplate"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/SystemTemplate"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/TemplateDetails": {
      "get": {
        "operationId": "getTemplateDetails",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/TemplateDetail"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/TokenCaches": {
      "get": {
        "operationId": "getTokenCaches",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/TokenCache"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createTokenCache",
        "parameters": [
          {
            "in": "body",
            "name": "TokenCache",
            "schema": {
              "$ref": "#/definitions/TokenCache"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/TokenCache"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/TotalClaimsByAllegationAndLossCausesFunc(ReportDate='{ReportDate}',ProgramID={ProgramID})": {
      "get": {
        "operationId": "getTotalClaimsByAllegationAndLossCauses",
        "parameters": [
          {
            "in": "path",
            "name": "ReportDate",
            "type": "string"
          },
          {
            "in": "path",
            "name": "ProgramID",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/TotalClaimsByAllegationAndLossCause"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/TotalClaimsByBoardJuridictionsFunc(ReportDate='{ReportDate}',ProgramID={ProgramID})": {
      "get": {
        "operationId": "getTotalClaimsByBoardJuridictions",
        "parameters": [
          {
            "in": "path",
            "name": "ReportDate",
            "type": "string"
          },
          {
            "in": "path",
            "name": "ProgramID",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/TotalClaimsByBoardJuridiction"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/TotalClaimsByClaimTypeAndLossCausesFunc(ReportDate='{ReportDate}',ProgramID={ProgramID})": {
      "get": {
        "operationId": "getTotalClaimsByClaimTypeAndLossCauses",
        "parameters": [
          {
            "in": "path",
            "name": "ReportDate",
            "type": "string"
          },
          {
            "in": "path",
            "name": "ProgramID",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/TotalClaimsByClaimTypeAndLossCause"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/TotalClaimsByLitigationTypesFunc(ReportDate='{ReportDate}',ProgramID={ProgramID})": {
      "get": {
        "operationId": "getTotalClaimsByLitigationTypes",
        "parameters": [
          {
            "in": "path",
            "name": "ReportDate",
            "type": "string"
          },
          {
            "in": "path",
            "name": "ProgramID",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/TotalClaimsByLitigationType"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/TotalClaimsbyAllegationsFunc(ReportDate='{ReportDate}',ProgramID={ProgramID})": {
      "get": {
        "operationId": "getTotalClaimsbyAllegations",
        "parameters": [
          {
            "in": "path",
            "name": "ReportDate",
            "type": "string"
          },
          {
            "in": "path",
            "name": "ProgramID",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/TotalClaimsbyAllegation"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/TotalClosedClaimsWithIndemnityPaidsFunc(ReportDate='{ReportDate}',ProgramID={ProgramID})": {
      "get": {
        "operationId": "getTotalClosedClaimsWithIndemnityPaids",
        "parameters": [
          {
            "in": "path",
            "name": "ReportDate",
            "type": "string"
          },
          {
            "in": "path",
            "name": "ProgramID",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/TotalClosedClaimsWithIndemnityPaid"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/TotalDollarsPaidByLossCausesFunc(ReportDate='{ReportDate}',ProgramID={ProgramID})": {
      "get": {
        "operationId": "getTotalDollarsPaidByLossCauses",
        "parameters": [
          {
            "in": "path",
            "name": "ReportDate",
            "type": "string"
          },
          {
            "in": "path",
            "name": "ProgramID",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/TotalDollarsPaidByLossCause"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/TotalIncurredLossesByPolicyYearsFunc(ReportDate='{ReportDate}',ProgramID={ProgramID})": {
      "get": {
        "operationId": "getTotalIncurredLossesByPolicyYears",
        "parameters": [
          {
            "in": "path",
            "name": "ReportDate",
            "type": "string"
          },
          {
            "in": "path",
            "name": "ProgramID",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/TotalIncurredLossesByPolicyYear"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/TotalPaidByClaimStatusesFunc(ReportDate='{ReportDate}',ProgramID={ProgramID})": {
      "get": {
        "operationId": "getTotalPaidByClaimStatuses",
        "parameters": [
          {
            "in": "path",
            "name": "ReportDate",
            "type": "string"
          },
          {
            "in": "path",
            "name": "ProgramID",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/TotalPaidByClaimStatus"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Trades": {
      "get": {
        "operationId": "getTrades",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/Trade"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createTrade",
        "parameters": [
          {
            "in": "body",
            "name": "Trade",
            "schema": {
              "$ref": "#/definitions/Trade"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Trade"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/TradeDetails": {
      "get": {
        "operationId": "getTradeDetails",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/TradeDetail"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Transactions": {
      "get": {
        "operationId": "getTransactions",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/Transaction"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createTransaction",
        "parameters": [
          {
            "in": "body",
            "name": "Transaction",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/TransactionApprovalLimits": {
      "get": {
        "operationId": "getTransactionApprovalLimits",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/TransactionApprovalLimit"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createTransactionApprovalLimit",
        "parameters": [
          {
            "in": "body",
            "name": "TransactionApprovalLimit",
            "schema": {
              "$ref": "#/definitions/TransactionApprovalLimit"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/TransactionApprovalLimit"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/TransactionListReportsFunc(StartDate='{StartDate}',EndDate='{EndDate}')": {
      "get": {
        "operationId": "getTransactionListReports",
        "parameters": [
          {
            "in": "path",
            "name": "StartDate",
            "type": "string"
          },
          {
            "in": "path",
            "name": "EndDate",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/TransactionListReport"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/UpdateCounselClaimNumsFunc(ClaimID={ClaimID},CounselFileNo='{CounselFileNo}')": {
      "get": {
        "operationId": "UpdateCounselClaimNums",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "CounselFileNo",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/UpdateCounselClaimNum"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/UpdateFileDetailsFunc(FileID={FileID},Subject='{Subject}',Filename='{Filename}',LargeLoss={LargeLoss},Sticky={Sticky},Confidential={Confidential},VisibleToCounsel={VisibleToCounsel},FileTypeID={FileTypeID},Comments='{Comments}',Description='{Description}')": {
      "get": {
        "operationId": "UpdateFileDetails",
        "parameters": [
          {
            "in": "path",
            "name": "FileID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "Subject",
            "type": "string"
          },
          {
            "in": "path",
            "name": "Filename",
            "type": "string"
          },
          {
            "in": "path",
            "name": "LargeLoss",
            "type": "boolean"
          },
          {
            "in": "path",
            "name": "Sticky",
            "type": "boolean"
          },
          {
            "in": "path",
            "name": "Confidential",
            "type": "boolean"
          },
          {
            "in": "path",
            "name": "VisibleToCounsel",
            "type": "boolean"
          },
          {
            "in": "path",
            "name": "FileTypeID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "Comments",
            "type": "string"
          },
          {
            "in": "path",
            "name": "Description",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/UpdateFileDetail"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/UpdateJournalEntryNumbersFunc(TransactionID={TransactionID},UserID='{UserID}')": {
      "get": {
        "operationId": "UpdateJournalEntryNumbers",
        "parameters": [
          {
            "in": "path",
            "name": "TransactionID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "UserID",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/UpdateJournalEntryNumber"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/UpdateReportDatesFunc(ReportDate='{ReportDate}',UserID='{UserID}',StartDate='{StartDate}')": {
      "get": {
        "operationId": "UpdateReportDates",
        "parameters": [
          {
            "in": "path",
            "name": "ReportDate",
            "type": "string"
          },
          {
            "in": "path",
            "name": "UserID",
            "type": "string"
          },
          {
            "in": "path",
            "name": "StartDate",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/UpdateReportDate"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/UpdateUploadedFilesFunc(FileID={FileID},Subject='{Subject}',LargeLoss={LargeLoss},Sticky={Sticky},FileTypeID={FileTypeID},Confidential={Confidential},FileDescription='{FileDescription}',VisibleToCounsel={VisibleToCounsel})": {
      "get": {
        "operationId": "UpdateUploadedFiles",
        "parameters": [
          {
            "in": "path",
            "name": "FileID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "Subject",
            "type": "string"
          },
          {
            "in": "path",
            "name": "LargeLoss",
            "type": "boolean"
          },
          {
            "in": "path",
            "name": "Sticky",
            "type": "boolean"
          },
          {
            "in": "path",
            "name": "FileTypeID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "Confidential",
            "type": "boolean"
          },
          {
            "in": "path",
            "name": "FileDescription",
            "type": "string"
          },
          {
            "in": "path",
            "name": "VisibleToCounsel",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/UpdateUploadedFile"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/UserDetails": {
      "get": {
        "operationId": "getUserDetails",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/UserDetail"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/VoidPaymentsFunc(ProgramID={ProgramID},StartDate='{StartDate}',EndDate='{EndDate}')": {
      "get": {
        "operationId": "getVoidPayments",
        "parameters": [
          {
            "in": "path",
            "name": "ProgramID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "StartDate",
            "type": "string"
          },
          {
            "in": "path",
            "name": "EndDate",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/VoidPayment"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/VoidTransactionsFunc(TransactionID={TransactionID})": {
      "get": {
        "operationId": "VoidTransactions",
        "parameters": [
          {
            "in": "path",
            "name": "TransactionID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/VoidTransaction"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/XRefClaims": {
      "get": {
        "operationId": "getXRefClaims",
        "parameters": [
          {
            "in": "query",
            "name": "$filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$skip",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "$format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "properties": {
                "value": {
                  "items": {
                    "$ref": "#/definitions/XRefClaim"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Administrators({ID})": {
      "delete": {
        "operationId": "deleteAdministrator",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getAdministratorByID",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Administrator"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateAdministrator",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "Administrator",
            "schema": {
              "$ref": "#/definitions/Administrator"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelAdministratorChanges",
        "parameters": [
          {
            "in": "body",
            "name": "Administrator",
            "schema": {
              "$ref": "#/definitions/Administrator"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Appointments({ID})": {
      "delete": {
        "operationId": "deleteAppointment",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getAppointmentByID",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Appointment"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateAppointment",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "Appointment",
            "schema": {
              "$ref": "#/definitions/Appointment"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelAppointmentChanges",
        "parameters": [
          {
            "in": "body",
            "name": "Appointment",
            "schema": {
              "$ref": "#/definitions/Appointment"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/AuditTrails({AuditTrailID})": {
      "delete": {
        "operationId": "deleteAuditTrail",
        "parameters": [
          {
            "in": "path",
            "name": "AuditTrailID",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getAuditTrailByAuditTrailID",
        "parameters": [
          {
            "in": "path",
            "name": "AuditTrailID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AuditTrail"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateAuditTrail",
        "parameters": [
          {
            "in": "path",
            "name": "AuditTrailID",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "AuditTrail",
            "schema": {
              "$ref": "#/definitions/AuditTrail"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelAuditTrailChanges",
        "parameters": [
          {
            "in": "body",
            "name": "AuditTrail",
            "schema": {
              "$ref": "#/definitions/AuditTrail"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/AutoReservings(ProgramID={ProgramID},ClaimInitiationID={ClaimInitiationID},ClaimOrIncident={ClaimOrIncident})": {
      "delete": {
        "operationId": "deleteAutoReserving",
        "parameters": [
          {
            "in": "path",
            "name": "ProgramID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "ClaimInitiationID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "ClaimOrIncident",
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getAutoReservingByProgramIDAndClaimInitiationIDAndClaimOrIncident",
        "parameters": [
          {
            "in": "path",
            "name": "ProgramID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "ClaimInitiationID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "ClaimOrIncident",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AutoReserving"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateAutoReserving",
        "parameters": [
          {
            "in": "path",
            "name": "ProgramID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "ClaimInitiationID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "ClaimOrIncident",
            "type": "boolean"
          },
          {
            "in": "body",
            "name": "AutoReserving",
            "schema": {
              "$ref": "#/definitions/AutoReserving"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelAutoReservingChanges",
        "parameters": [
          {
            "in": "body",
            "name": "AutoReserving",
            "schema": {
              "$ref": "#/definitions/AutoReserving"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/BinaryRoleValues('{RoleID}')": {
      "delete": {
        "operationId": "deleteBinaryRoleValue",
        "parameters": [
          {
            "in": "path",
            "name": "RoleID",
            "type": "string"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getBinaryRoleValueByRoleID",
        "parameters": [
          {
            "in": "path",
            "name": "RoleID",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BinaryRoleValue"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateBinaryRoleValue",
        "parameters": [
          {
            "in": "path",
            "name": "RoleID",
            "type": "string"
          },
          {
            "in": "body",
            "name": "BinaryRoleValue",
            "schema": {
              "$ref": "#/definitions/BinaryRoleValue"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelBinaryRoleValueChanges",
        "parameters": [
          {
            "in": "body",
            "name": "BinaryRoleValue",
            "schema": {
              "$ref": "#/definitions/BinaryRoleValue"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Brokerages({BrokerageID})": {
      "delete": {
        "operationId": "deleteBrokerage",
        "parameters": [
          {
            "in": "path",
            "name": "BrokerageID",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getBrokerageByBrokerageID",
        "parameters": [
          {
            "in": "path",
            "name": "BrokerageID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Brokerage"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateBrokerage",
        "parameters": [
          {
            "in": "path",
            "name": "BrokerageID",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Brokerage",
            "schema": {
              "$ref": "#/definitions/Brokerage"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelBrokerageChanges",
        "parameters": [
          {
            "in": "body",
            "name": "Brokerage",
            "schema": {
              "$ref": "#/definitions/Brokerage"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/BrokerageContacts({BrokerageContactID})": {
      "delete": {
        "operationId": "deleteBrokerageContact",
        "parameters": [
          {
            "in": "path",
            "name": "BrokerageContactID",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getBrokerageContactByBrokerageContactID",
        "parameters": [
          {
            "in": "path",
            "name": "BrokerageContactID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BrokerageContact"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateBrokerageContact",
        "parameters": [
          {
            "in": "path",
            "name": "BrokerageContactID",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "BrokerageContact",
            "schema": {
              "$ref": "#/definitions/BrokerageContact"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelBrokerageContactChanges",
        "parameters": [
          {
            "in": "body",
            "name": "BrokerageContact",
            "schema": {
              "$ref": "#/definitions/BrokerageContact"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Builders({ID})": {
      "delete": {
        "operationId": "deleteBuilder",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getBuilderByID",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Builder"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateBuilder",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "Builder",
            "schema": {
              "$ref": "#/definitions/Builder"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelBuilderChanges",
        "parameters": [
          {
            "in": "body",
            "name": "Builder",
            "schema": {
              "$ref": "#/definitions/Builder"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/CdiNoticeOfClaimDetails({ID})": {
      "delete": {
        "operationId": "deleteCdiNoticeOfClaimDetail",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getCdiNoticeOfClaimDetailByID",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CdiNoticeOfClaimDetail"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateCdiNoticeOfClaimDetail",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "CdiNoticeOfClaimDetail",
            "schema": {
              "$ref": "#/definitions/CdiNoticeOfClaimDetail"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelCdiNoticeOfClaimDetailChanges",
        "parameters": [
          {
            "in": "body",
            "name": "CdiNoticeOfClaimDetail",
            "schema": {
              "$ref": "#/definitions/CdiNoticeOfClaimDetail"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/CdpClaimDetails({ClaimID})": {
      "delete": {
        "operationId": "deleteCdpClaimDetail",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimID",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getCdpClaimDetailByClaimID",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CdpClaimDetail"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateCdpClaimDetail",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimID",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "CdpClaimDetail",
            "schema": {
              "$ref": "#/definitions/CdpClaimDetail"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelCdpClaimDetailChanges",
        "parameters": [
          {
            "in": "body",
            "name": "CdpClaimDetail",
            "schema": {
              "$ref": "#/definitions/CdpClaimDetail"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Claims({ID})": {
      "delete": {
        "operationId": "deleteClaim",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getClaimByID",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Claim"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateClaim",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "Claim",
            "schema": {
              "$ref": "#/definitions/Claim"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelClaimChanges",
        "parameters": [
          {
            "in": "body",
            "name": "Claim",
            "schema": {
              "$ref": "#/definitions/Claim"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimFileReportings({FileReportID})": {
      "delete": {
        "operationId": "deleteClaimFileReporting",
        "parameters": [
          {
            "in": "path",
            "name": "FileReportID",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getClaimFileReportingByFileReportID",
        "parameters": [
          {
            "in": "path",
            "name": "FileReportID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ClaimFileReporting"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateClaimFileReporting",
        "parameters": [
          {
            "in": "path",
            "name": "FileReportID",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "ClaimFileReporting",
            "schema": {
              "$ref": "#/definitions/ClaimFileReporting"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelClaimFileReportingChanges",
        "parameters": [
          {
            "in": "body",
            "name": "ClaimFileReporting",
            "schema": {
              "$ref": "#/definitions/ClaimFileReporting"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimLitigationDates({LitigationDateID})": {
      "delete": {
        "operationId": "deleteClaimLitigationDate",
        "parameters": [
          {
            "in": "path",
            "name": "LitigationDateID",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getClaimLitigationDateByLitigationDateID",
        "parameters": [
          {
            "in": "path",
            "name": "LitigationDateID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ClaimLitigationDate"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateClaimLitigationDate",
        "parameters": [
          {
            "in": "path",
            "name": "LitigationDateID",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "ClaimLitigationDate",
            "schema": {
              "$ref": "#/definitions/ClaimLitigationDate"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelClaimLitigationDateChanges",
        "parameters": [
          {
            "in": "body",
            "name": "ClaimLitigationDate",
            "schema": {
              "$ref": "#/definitions/ClaimLitigationDate"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimReports({ClaimReportID})": {
      "delete": {
        "operationId": "deleteClaimReport",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimReportID",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getClaimReportByClaimReportID",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimReportID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ClaimReport"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateClaimReport",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimReportID",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "ClaimReport",
            "schema": {
              "$ref": "#/definitions/ClaimReport"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelClaimReportChanges",
        "parameters": [
          {
            "in": "body",
            "name": "ClaimReport",
            "schema": {
              "$ref": "#/definitions/ClaimReport"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimStatusHistories({ClaimStatusID})": {
      "delete": {
        "operationId": "deleteClaimStatusHistory",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimStatusID",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getClaimStatusHistoryByClaimStatusID",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimStatusID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ClaimStatusHistory"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateClaimStatusHistory",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimStatusID",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "ClaimStatusHistory",
            "schema": {
              "$ref": "#/definitions/ClaimStatusHistory"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelClaimStatusHistoryChanges",
        "parameters": [
          {
            "in": "body",
            "name": "ClaimStatusHistory",
            "schema": {
              "$ref": "#/definitions/ClaimStatusHistory"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Claimants({ID})": {
      "delete": {
        "operationId": "deleteClaimant",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getClaimantByID",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Claimant"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateClaimant",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "Claimant",
            "schema": {
              "$ref": "#/definitions/Claimant"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelClaimantChanges",
        "parameters": [
          {
            "in": "body",
            "name": "Claimant",
            "schema": {
              "$ref": "#/definitions/Claimant"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimantLitigationRoles(ClaimantID={ClaimantID},LitigationRole={LitigationRole})": {
      "delete": {
        "operationId": "deleteClaimantLitigationRole",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimantID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "LitigationRole",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getClaimantLitigationRoleByClaimantIDAndLitigationRole",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimantID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "LitigationRole",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ClaimantLitigationRole"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateClaimantLitigationRole",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimantID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "LitigationRole",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "ClaimantLitigationRole",
            "schema": {
              "$ref": "#/definitions/ClaimantLitigationRole"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelClaimantLitigationRoleChanges",
        "parameters": [
          {
            "in": "body",
            "name": "ClaimantLitigationRole",
            "schema": {
              "$ref": "#/definitions/ClaimantLitigationRole"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimantPaymentsReceiveds(ClaimantID={ClaimantID},PaymentReceivedDate={PaymentReceivedDate})": {
      "delete": {
        "operationId": "deleteClaimantPaymentsReceived",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimantID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "PaymentReceivedDate",
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getClaimantPaymentsReceivedByClaimantIDAndPaymentReceivedDate",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimantID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "PaymentReceivedDate",
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ClaimantPaymentsReceived"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateClaimantPaymentsReceived",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimantID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "PaymentReceivedDate",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "body",
            "name": "ClaimantPaymentsReceived",
            "schema": {
              "$ref": "#/definitions/ClaimantPaymentsReceived"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelClaimantPaymentsReceivedChanges",
        "parameters": [
          {
            "in": "body",
            "name": "ClaimantPaymentsReceived",
            "schema": {
              "$ref": "#/definitions/ClaimantPaymentsReceived"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ClaimantSolicitors({ID})": {
      "delete": {
        "operationId": "deleteClaimantSolicitor",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getClaimantSolicitorByID",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ClaimantSolicitor"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateClaimantSolicitor",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "ClaimantSolicitor",
            "schema": {
              "$ref": "#/definitions/ClaimantSolicitor"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelClaimantSolicitorChanges",
        "parameters": [
          {
            "in": "body",
            "name": "ClaimantSolicitor",
            "schema": {
              "$ref": "#/definitions/ClaimantSolicitor"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/CommissionInstallments({CommissionInstallmentID})": {
      "delete": {
        "operationId": "deleteCommissionInstallment",
        "parameters": [
          {
            "in": "path",
            "name": "CommissionInstallmentID",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getCommissionInstallmentByCommissionInstallmentID",
        "parameters": [
          {
            "in": "path",
            "name": "CommissionInstallmentID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CommissionInstallment"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateCommissionInstallment",
        "parameters": [
          {
            "in": "path",
            "name": "CommissionInstallmentID",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "CommissionInstallment",
            "schema": {
              "$ref": "#/definitions/CommissionInstallment"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelCommissionInstallmentChanges",
        "parameters": [
          {
            "in": "body",
            "name": "CommissionInstallment",
            "schema": {
              "$ref": "#/definitions/CommissionInstallment"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/CostAwards({CostAwardID})": {
      "delete": {
        "operationId": "deleteCostAward",
        "parameters": [
          {
            "in": "path",
            "name": "CostAwardID",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getCostAwardByCostAwardID",
        "parameters": [
          {
            "in": "path",
            "name": "CostAwardID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CostAward"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateCostAward",
        "parameters": [
          {
            "in": "path",
            "name": "CostAwardID",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "CostAward",
            "schema": {
              "$ref": "#/definitions/CostAward"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelCostAwardChanges",
        "parameters": [
          {
            "in": "body",
            "name": "CostAward",
            "schema": {
              "$ref": "#/definitions/CostAward"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/CourtDates({CourtDateID})": {
      "delete": {
        "operationId": "deleteCourtDate",
        "parameters": [
          {
            "in": "path",
            "name": "CourtDateID",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getCourtDateByCourtDateID",
        "parameters": [
          {
            "in": "path",
            "name": "CourtDateID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CourtDate"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateCourtDate",
        "parameters": [
          {
            "in": "path",
            "name": "CourtDateID",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "CourtDate",
            "schema": {
              "$ref": "#/definitions/CourtDate"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelCourtDateChanges",
        "parameters": [
          {
            "in": "body",
            "name": "CourtDate",
            "schema": {
              "$ref": "#/definitions/CourtDate"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/CppNoticeOfClaimsDetails({NoticeOfClaimDetailsID})": {
      "delete": {
        "operationId": "deleteCppNoticeOfClaimsDetail",
        "parameters": [
          {
            "in": "path",
            "name": "NoticeOfClaimDetailsID",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getCppNoticeOfClaimsDetailByNoticeOfClaimDetailsID",
        "parameters": [
          {
            "in": "path",
            "name": "NoticeOfClaimDetailsID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CppNoticeOfClaimsDetail"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateCppNoticeOfClaimsDetail",
        "parameters": [
          {
            "in": "path",
            "name": "NoticeOfClaimDetailsID",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "CppNoticeOfClaimsDetail",
            "schema": {
              "$ref": "#/definitions/CppNoticeOfClaimsDetail"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelCppNoticeOfClaimsDetailChanges",
        "parameters": [
          {
            "in": "body",
            "name": "CppNoticeOfClaimsDetail",
            "schema": {
              "$ref": "#/definitions/CppNoticeOfClaimsDetail"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/CrossReferencedClaims(ClaimID={ClaimID},XRefClaimID={XRefClaimID})": {
      "delete": {
        "operationId": "deleteCrossReferencedClaim",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "XRefClaimID",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getCrossReferencedClaimByClaimIDAndXRefClaimID",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "XRefClaimID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CrossReferencedClaim"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateCrossReferencedClaim",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "XRefClaimID",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "CrossReferencedClaim",
            "schema": {
              "$ref": "#/definitions/CrossReferencedClaim"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelCrossReferencedClaimChanges",
        "parameters": [
          {
            "in": "body",
            "name": "CrossReferencedClaim",
            "schema": {
              "$ref": "#/definitions/CrossReferencedClaim"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Diaries({ID})": {
      "delete": {
        "operationId": "deleteDiary",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getDiaryByID",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Diary"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateDiary",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "Diary",
            "schema": {
              "$ref": "#/definitions/Diary"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelDiaryChanges",
        "parameters": [
          {
            "in": "body",
            "name": "Diary",
            "schema": {
              "$ref": "#/definitions/Diary"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/DiaryTemplates({DiaryTemplateID})": {
      "delete": {
        "operationId": "deleteDiaryTemplate",
        "parameters": [
          {
            "in": "path",
            "name": "DiaryTemplateID",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getDiaryTemplateByDiaryTemplateID",
        "parameters": [
          {
            "in": "path",
            "name": "DiaryTemplateID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DiaryTemplate"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateDiaryTemplate",
        "parameters": [
          {
            "in": "path",
            "name": "DiaryTemplateID",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "DiaryTemplate",
            "schema": {
              "$ref": "#/definitions/DiaryTemplate"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelDiaryTemplateChanges",
        "parameters": [
          {
            "in": "body",
            "name": "DiaryTemplate",
            "schema": {
              "$ref": "#/definitions/DiaryTemplate"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/EmailFolders('{ID}')": {
      "delete": {
        "operationId": "deleteEmailFolder",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getEmailFolderByID",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/EmailFolder"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateEmailFolder",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string"
          },
          {
            "in": "body",
            "name": "EmailFolder",
            "schema": {
              "$ref": "#/definitions/EmailFolder"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelEmailFolderChanges",
        "parameters": [
          {
            "in": "body",
            "name": "EmailFolder",
            "schema": {
              "$ref": "#/definitions/EmailFolder"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/EmailLinkFiles({ID})": {
      "delete": {
        "operationId": "deleteEmailLinkFile",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getEmailLinkFileByID",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/EmailLinkFile"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateEmailLinkFile",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "EmailLinkFile",
            "schema": {
              "$ref": "#/definitions/EmailLinkFile"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelEmailLinkFileChanges",
        "parameters": [
          {
            "in": "body",
            "name": "EmailLinkFile",
            "schema": {
              "$ref": "#/definitions/EmailLinkFile"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/EmailMessages('{ID}')": {
      "delete": {
        "operationId": "deleteEmailMessage",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getEmailMessageByID",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/EmailMessage"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateEmailMessage",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string"
          },
          {
            "in": "body",
            "name": "EmailMessage",
            "schema": {
              "$ref": "#/definitions/EmailMessage"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelEmailMessageChanges",
        "parameters": [
          {
            "in": "body",
            "name": "EmailMessage",
            "schema": {
              "$ref": "#/definitions/EmailMessage"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/EoClaimDetails({ClaimID})": {
      "delete": {
        "operationId": "deleteEoClaimDetail",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimID",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getEoClaimDetailByClaimID",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/EoClaimDetail"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateEoClaimDetail",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimID",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "EoClaimDetail",
            "schema": {
              "$ref": "#/definitions/EoClaimDetail"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelEoClaimDetailChanges",
        "parameters": [
          {
            "in": "body",
            "name": "EoClaimDetail",
            "schema": {
              "$ref": "#/definitions/EoClaimDetail"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/EoNoticeOfClaimsDetails({NoticeOfClaimID})": {
      "delete": {
        "operationId": "deleteEoNoticeOfClaimsDetail",
        "parameters": [
          {
            "in": "path",
            "name": "NoticeOfClaimID",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getEoNoticeOfClaimsDetailByNoticeOfClaimID",
        "parameters": [
          {
            "in": "path",
            "name": "NoticeOfClaimID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/EoNoticeOfClaimsDetail"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateEoNoticeOfClaimsDetail",
        "parameters": [
          {
            "in": "path",
            "name": "NoticeOfClaimID",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "EoNoticeOfClaimsDetail",
            "schema": {
              "$ref": "#/definitions/EoNoticeOfClaimsDetail"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelEoNoticeOfClaimsDetailChanges",
        "parameters": [
          {
            "in": "body",
            "name": "EoNoticeOfClaimsDetail",
            "schema": {
              "$ref": "#/definitions/EoNoticeOfClaimsDetail"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ErrorLogs({ErrorLogID})": {
      "delete": {
        "operationId": "deleteErrorLog",
        "parameters": [
          {
            "in": "path",
            "name": "ErrorLogID",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getErrorLogByErrorLogID",
        "parameters": [
          {
            "in": "path",
            "name": "ErrorLogID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ErrorLog"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateErrorLog",
        "parameters": [
          {
            "in": "path",
            "name": "ErrorLogID",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "ErrorLog",
            "schema": {
              "$ref": "#/definitions/ErrorLog"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelErrorLogChanges",
        "parameters": [
          {
            "in": "body",
            "name": "ErrorLog",
            "schema": {
              "$ref": "#/definitions/ErrorLog"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Experts({ExpertID})": {
      "delete": {
        "operationId": "deleteExpert",
        "parameters": [
          {
            "in": "path",
            "name": "ExpertID",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getExpertByExpertID",
        "parameters": [
          {
            "in": "path",
            "name": "ExpertID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Expert"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateExpert",
        "parameters": [
          {
            "in": "path",
            "name": "ExpertID",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Expert",
            "schema": {
              "$ref": "#/definitions/Expert"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelExpertChanges",
        "parameters": [
          {
            "in": "body",
            "name": "Expert",
            "schema": {
              "$ref": "#/definitions/Expert"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Files({ID})": {
      "delete": {
        "operationId": "deleteFile",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getFileByID",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/File"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateFile",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "File",
            "schema": {
              "$ref": "#/definitions/File"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelFileChanges",
        "parameters": [
          {
            "in": "body",
            "name": "File",
            "schema": {
              "$ref": "#/definitions/File"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/FilesRoles({Id})": {
      "delete": {
        "operationId": "deleteFilesRole",
        "parameters": [
          {
            "in": "path",
            "name": "Id",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getFilesRoleById",
        "parameters": [
          {
            "in": "path",
            "name": "Id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/FilesRole"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateFilesRole",
        "parameters": [
          {
            "in": "path",
            "name": "Id",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "FilesRole",
            "schema": {
              "$ref": "#/definitions/FilesRole"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelFilesRoleChanges",
        "parameters": [
          {
            "in": "body",
            "name": "FilesRole",
            "schema": {
              "$ref": "#/definitions/FilesRole"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Firms({ID})": {
      "delete": {
        "operationId": "deleteFirm",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getFirmByID",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Firm"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateFirm",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "Firm",
            "schema": {
              "$ref": "#/definitions/Firm"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelFirmChanges",
        "parameters": [
          {
            "in": "body",
            "name": "Firm",
            "schema": {
              "$ref": "#/definitions/Firm"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/GeneralSettings({ID})": {
      "delete": {
        "operationId": "deleteGeneralSetting",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getGeneralSettingByID",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/GeneralSetting"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateGeneralSetting",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "GeneralSetting",
            "schema": {
              "$ref": "#/definitions/GeneralSetting"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelGeneralSettingChanges",
        "parameters": [
          {
            "in": "body",
            "name": "GeneralSetting",
            "schema": {
              "$ref": "#/definitions/GeneralSetting"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Insureds({ID})": {
      "delete": {
        "operationId": "deleteInsured",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getInsuredByID",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Insured"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateInsured",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "Insured",
            "schema": {
              "$ref": "#/definitions/Insured"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelInsuredChanges",
        "parameters": [
          {
            "in": "body",
            "name": "Insured",
            "schema": {
              "$ref": "#/definitions/Insured"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/InsuredLitigationRoles(InsuredID={InsuredID},LitigationRoleID={LitigationRoleID})": {
      "delete": {
        "operationId": "deleteInsuredLitigationRole",
        "parameters": [
          {
            "in": "path",
            "name": "InsuredID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "LitigationRoleID",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getInsuredLitigationRoleByInsuredIDAndLitigationRoleID",
        "parameters": [
          {
            "in": "path",
            "name": "InsuredID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "LitigationRoleID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/InsuredLitigationRole"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateInsuredLitigationRole",
        "parameters": [
          {
            "in": "path",
            "name": "InsuredID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "LitigationRoleID",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "InsuredLitigationRole",
            "schema": {
              "$ref": "#/definitions/InsuredLitigationRole"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelInsuredLitigationRoleChanges",
        "parameters": [
          {
            "in": "body",
            "name": "InsuredLitigationRole",
            "schema": {
              "$ref": "#/definitions/InsuredLitigationRole"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/InvoiceUploads({InvoiceUploadID})": {
      "delete": {
        "operationId": "deleteInvoiceUpload",
        "parameters": [
          {
            "in": "path",
            "name": "InvoiceUploadID",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getInvoiceUploadByInvoiceUploadID",
        "parameters": [
          {
            "in": "path",
            "name": "InvoiceUploadID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/InvoiceUpload"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateInvoiceUpload",
        "parameters": [
          {
            "in": "path",
            "name": "InvoiceUploadID",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "InvoiceUpload",
            "schema": {
              "$ref": "#/definitions/InvoiceUpload"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelInvoiceUploadChanges",
        "parameters": [
          {
            "in": "body",
            "name": "InvoiceUpload",
            "schema": {
              "$ref": "#/definitions/InvoiceUpload"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/InvoiceUploadFiles({FileID})": {
      "delete": {
        "operationId": "deleteInvoiceUploadFile",
        "parameters": [
          {
            "in": "path",
            "name": "FileID",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getInvoiceUploadFileByFileID",
        "parameters": [
          {
            "in": "path",
            "name": "FileID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/InvoiceUploadFile"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateInvoiceUploadFile",
        "parameters": [
          {
            "in": "path",
            "name": "FileID",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "InvoiceUploadFile",
            "schema": {
              "$ref": "#/definitions/InvoiceUploadFile"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelInvoiceUploadFileChanges",
        "parameters": [
          {
            "in": "body",
            "name": "InvoiceUploadFile",
            "schema": {
              "$ref": "#/definitions/InvoiceUploadFile"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/InvoiceUploadRowErrors({ErrorID})": {
      "delete": {
        "operationId": "deleteInvoiceUploadRowError",
        "parameters": [
          {
            "in": "path",
            "name": "ErrorID",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getInvoiceUploadRowErrorByErrorID",
        "parameters": [
          {
            "in": "path",
            "name": "ErrorID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/InvoiceUploadRowError"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateInvoiceUploadRowError",
        "parameters": [
          {
            "in": "path",
            "name": "ErrorID",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "InvoiceUploadRowError",
            "schema": {
              "$ref": "#/definitions/InvoiceUploadRowError"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelInvoiceUploadRowErrorChanges",
        "parameters": [
          {
            "in": "body",
            "name": "InvoiceUploadRowError",
            "schema": {
              "$ref": "#/definitions/InvoiceUploadRowError"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/IssueReportings({IssueReportingID})": {
      "delete": {
        "operationId": "deleteIssueReporting",
        "parameters": [
          {
            "in": "path",
            "name": "IssueReportingID",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getIssueReportingByIssueReportingID",
        "parameters": [
          {
            "in": "path",
            "name": "IssueReportingID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/IssueReporting"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateIssueReporting",
        "parameters": [
          {
            "in": "path",
            "name": "IssueReportingID",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "IssueReporting",
            "schema": {
              "$ref": "#/definitions/IssueReporting"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelIssueReportingChanges",
        "parameters": [
          {
            "in": "body",
            "name": "IssueReporting",
            "schema": {
              "$ref": "#/definitions/IssueReporting"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/LossCauseTags(ClaimID={ClaimID},LossCauseTag1='{LossCauseTag1}')": {
      "delete": {
        "operationId": "deleteLossCauseTag",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "LossCauseTag1",
            "type": "string"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getLossCauseTagByClaimIDAndLossCauseTag1",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "LossCauseTag1",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/LossCauseTag"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateLossCauseTag",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "LossCauseTag1",
            "type": "string"
          },
          {
            "in": "body",
            "name": "LossCauseTag",
            "schema": {
              "$ref": "#/definitions/LossCauseTag"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelLossCauseTagChanges",
        "parameters": [
          {
            "in": "body",
            "name": "LossCauseTag",
            "schema": {
              "$ref": "#/definitions/LossCauseTag"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Notes({ID})": {
      "delete": {
        "operationId": "deleteNote",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getNoteByID",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Note"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateNote",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "Note",
            "schema": {
              "$ref": "#/definitions/Note"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelNoteChanges",
        "parameters": [
          {
            "in": "body",
            "name": "Note",
            "schema": {
              "$ref": "#/definitions/Note"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/NoteRoles({Id})": {
      "delete": {
        "operationId": "deleteNoteRole",
        "parameters": [
          {
            "in": "path",
            "name": "Id",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getNoteRoleById",
        "parameters": [
          {
            "in": "path",
            "name": "Id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/NoteRole"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateNoteRole",
        "parameters": [
          {
            "in": "path",
            "name": "Id",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "NoteRole",
            "schema": {
              "$ref": "#/definitions/NoteRole"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelNoteRoleChanges",
        "parameters": [
          {
            "in": "body",
            "name": "NoteRole",
            "schema": {
              "$ref": "#/definitions/NoteRole"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/NoticeOfClaims({NoticeOfClaimID})": {
      "delete": {
        "operationId": "deleteNoticeOfClaim",
        "parameters": [
          {
            "in": "path",
            "name": "NoticeOfClaimID",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getNoticeOfClaimByNoticeOfClaimID",
        "parameters": [
          {
            "in": "path",
            "name": "NoticeOfClaimID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/NoticeOfClaim"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateNoticeOfClaim",
        "parameters": [
          {
            "in": "path",
            "name": "NoticeOfClaimID",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "NoticeOfClaim",
            "schema": {
              "$ref": "#/definitions/NoticeOfClaim"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelNoticeOfClaimChanges",
        "parameters": [
          {
            "in": "body",
            "name": "NoticeOfClaim",
            "schema": {
              "$ref": "#/definitions/NoticeOfClaim"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/NoticeOfClaimBrokerages({BrokerageID})": {
      "delete": {
        "operationId": "deleteNoticeOfClaimBrokerage",
        "parameters": [
          {
            "in": "path",
            "name": "BrokerageID",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getNoticeOfClaimBrokerageByBrokerageID",
        "parameters": [
          {
            "in": "path",
            "name": "BrokerageID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/NoticeOfClaimBrokerage"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateNoticeOfClaimBrokerage",
        "parameters": [
          {
            "in": "path",
            "name": "BrokerageID",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "NoticeOfClaimBrokerage",
            "schema": {
              "$ref": "#/definitions/NoticeOfClaimBrokerage"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelNoticeOfClaimBrokerageChanges",
        "parameters": [
          {
            "in": "body",
            "name": "NoticeOfClaimBrokerage",
            "schema": {
              "$ref": "#/definitions/NoticeOfClaimBrokerage"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/NoticeOfClaimClaimants({ID})": {
      "delete": {
        "operationId": "deleteNoticeOfClaimClaimant",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getNoticeOfClaimClaimantByID",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/NoticeOfClaimClaimant"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateNoticeOfClaimClaimant",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "NoticeOfClaimClaimant",
            "schema": {
              "$ref": "#/definitions/NoticeOfClaimClaimant"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelNoticeOfClaimClaimantChanges",
        "parameters": [
          {
            "in": "body",
            "name": "NoticeOfClaimClaimant",
            "schema": {
              "$ref": "#/definitions/NoticeOfClaimClaimant"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/NoticeOfClaimFiles({FileID})": {
      "delete": {
        "operationId": "deleteNoticeOfClaimFile",
        "parameters": [
          {
            "in": "path",
            "name": "FileID",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getNoticeOfClaimFileByFileID",
        "parameters": [
          {
            "in": "path",
            "name": "FileID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/NoticeOfClaimFile"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateNoticeOfClaimFile",
        "parameters": [
          {
            "in": "path",
            "name": "FileID",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "NoticeOfClaimFile",
            "schema": {
              "$ref": "#/definitions/NoticeOfClaimFile"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelNoticeOfClaimFileChanges",
        "parameters": [
          {
            "in": "body",
            "name": "NoticeOfClaimFile",
            "schema": {
              "$ref": "#/definitions/NoticeOfClaimFile"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/NoticeOfClaimPurchasers({PurchaserID})": {
      "delete": {
        "operationId": "deleteNoticeOfClaimPurchaser",
        "parameters": [
          {
            "in": "path",
            "name": "PurchaserID",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getNoticeOfClaimPurchaserByPurchaserID",
        "parameters": [
          {
            "in": "path",
            "name": "PurchaserID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/NoticeOfClaimPurchaser"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateNoticeOfClaimPurchaser",
        "parameters": [
          {
            "in": "path",
            "name": "PurchaserID",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "NoticeOfClaimPurchaser",
            "schema": {
              "$ref": "#/definitions/NoticeOfClaimPurchaser"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelNoticeOfClaimPurchaserChanges",
        "parameters": [
          {
            "in": "body",
            "name": "NoticeOfClaimPurchaser",
            "schema": {
              "$ref": "#/definitions/NoticeOfClaimPurchaser"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/NoticeOfClaimRegistrants({NOCRegistrantID})": {
      "delete": {
        "operationId": "deleteNoticeOfClaimRegistrant",
        "parameters": [
          {
            "in": "path",
            "name": "NOCRegistrantID",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getNoticeOfClaimRegistrantByNOCRegistrantID",
        "parameters": [
          {
            "in": "path",
            "name": "NOCRegistrantID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/NoticeOfClaimRegistrant"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateNoticeOfClaimRegistrant",
        "parameters": [
          {
            "in": "path",
            "name": "NOCRegistrantID",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "NoticeOfClaimRegistrant",
            "schema": {
              "$ref": "#/definitions/NoticeOfClaimRegistrant"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelNoticeOfClaimRegistrantChanges",
        "parameters": [
          {
            "in": "body",
            "name": "NoticeOfClaimRegistrant",
            "schema": {
              "$ref": "#/definitions/NoticeOfClaimRegistrant"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/NoticeOfClaimTrades({NoticeOfClaimID})": {
      "delete": {
        "operationId": "deleteNoticeOfClaimTrade",
        "parameters": [
          {
            "in": "path",
            "name": "NoticeOfClaimID",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getNoticeOfClaimTradeByNoticeOfClaimID",
        "parameters": [
          {
            "in": "path",
            "name": "NoticeOfClaimID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/NoticeOfClaimTrade"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateNoticeOfClaimTrade",
        "parameters": [
          {
            "in": "path",
            "name": "NoticeOfClaimID",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "NoticeOfClaimTrade",
            "schema": {
              "$ref": "#/definitions/NoticeOfClaimTrade"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelNoticeOfClaimTradeChanges",
        "parameters": [
          {
            "in": "body",
            "name": "NoticeOfClaimTrade",
            "schema": {
              "$ref": "#/definitions/NoticeOfClaimTrade"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/NoticeOfClaimVendors({VendorID})": {
      "delete": {
        "operationId": "deleteNoticeOfClaimVendor",
        "parameters": [
          {
            "in": "path",
            "name": "VendorID",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getNoticeOfClaimVendorByVendorID",
        "parameters": [
          {
            "in": "path",
            "name": "VendorID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/NoticeOfClaimVendor"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateNoticeOfClaimVendor",
        "parameters": [
          {
            "in": "path",
            "name": "VendorID",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "NoticeOfClaimVendor",
            "schema": {
              "$ref": "#/definitions/NoticeOfClaimVendor"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelNoticeOfClaimVendorChanges",
        "parameters": [
          {
            "in": "body",
            "name": "NoticeOfClaimVendor",
            "schema": {
              "$ref": "#/definitions/NoticeOfClaimVendor"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Occurrences({ID})": {
      "delete": {
        "operationId": "deleteOccurrence",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getOccurrenceByID",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Occurrence"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateOccurrence",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "Occurrence",
            "schema": {
              "$ref": "#/definitions/Occurrence"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelOccurrenceChanges",
        "parameters": [
          {
            "in": "body",
            "name": "Occurrence",
            "schema": {
              "$ref": "#/definitions/Occurrence"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/OtherParties({ID})": {
      "delete": {
        "operationId": "deleteOtherParty",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getOtherPartyByID",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/OtherParty"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateOtherParty",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "OtherParty",
            "schema": {
              "$ref": "#/definitions/OtherParty"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelOtherPartyChanges",
        "parameters": [
          {
            "in": "body",
            "name": "OtherParty",
            "schema": {
              "$ref": "#/definitions/OtherParty"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ParamTypes({ParamTypeID})": {
      "delete": {
        "operationId": "deleteParamType",
        "parameters": [
          {
            "in": "path",
            "name": "ParamTypeID",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getParamTypeByParamTypeID",
        "parameters": [
          {
            "in": "path",
            "name": "ParamTypeID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ParamType"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateParamType",
        "parameters": [
          {
            "in": "path",
            "name": "ParamTypeID",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "ParamType",
            "schema": {
              "$ref": "#/definitions/ParamType"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelParamTypeChanges",
        "parameters": [
          {
            "in": "body",
            "name": "ParamType",
            "schema": {
              "$ref": "#/definitions/ParamType"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Parameters({ParameterID})": {
      "delete": {
        "operationId": "deleteParameter",
        "parameters": [
          {
            "in": "path",
            "name": "ParameterID",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getParameterByParameterID",
        "parameters": [
          {
            "in": "path",
            "name": "ParameterID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Parameter"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateParameter",
        "parameters": [
          {
            "in": "path",
            "name": "ParameterID",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Parameter",
            "schema": {
              "$ref": "#/definitions/Parameter"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelParameterChanges",
        "parameters": [
          {
            "in": "body",
            "name": "Parameter",
            "schema": {
              "$ref": "#/definitions/Parameter"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/PostalCodes('{PostalCode1}')": {
      "delete": {
        "operationId": "deletePostalCode",
        "parameters": [
          {
            "in": "path",
            "name": "PostalCode1",
            "type": "string"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getPostalCodeByPostalCode1",
        "parameters": [
          {
            "in": "path",
            "name": "PostalCode1",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PostalCode"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updatePostalCode",
        "parameters": [
          {
            "in": "path",
            "name": "PostalCode1",
            "type": "string"
          },
          {
            "in": "body",
            "name": "PostalCode",
            "schema": {
              "$ref": "#/definitions/PostalCode"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelPostalCodeChanges",
        "parameters": [
          {
            "in": "body",
            "name": "PostalCode",
            "schema": {
              "$ref": "#/definitions/PostalCode"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Receivers({ID})": {
      "delete": {
        "operationId": "deleteReceiver",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getReceiverByID",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Receiver"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateReceiver",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "Receiver",
            "schema": {
              "$ref": "#/definitions/Receiver"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelReceiverChanges",
        "parameters": [
          {
            "in": "body",
            "name": "Receiver",
            "schema": {
              "$ref": "#/definitions/Receiver"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/RefactorLogs({OperationKey})": {
      "delete": {
        "operationId": "deleteRefactorLog",
        "parameters": [
          {
            "in": "path",
            "name": "OperationKey",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getRefactorLogByOperationKey",
        "parameters": [
          {
            "in": "path",
            "name": "OperationKey",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RefactorLog"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateRefactorLog",
        "parameters": [
          {
            "in": "path",
            "name": "OperationKey",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "RefactorLog",
            "schema": {
              "$ref": "#/definitions/RefactorLog"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelRefactorLogChanges",
        "parameters": [
          {
            "in": "body",
            "name": "RefactorLog",
            "schema": {
              "$ref": "#/definitions/RefactorLog"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Registrants({ID})": {
      "delete": {
        "operationId": "deleteRegistrant",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getRegistrantByID",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Registrant"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateRegistrant",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "Registrant",
            "schema": {
              "$ref": "#/definitions/Registrant"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelRegistrantChanges",
        "parameters": [
          {
            "in": "body",
            "name": "Registrant",
            "schema": {
              "$ref": "#/definitions/Registrant"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Roles({Id})": {
      "delete": {
        "operationId": "deleteRole",
        "parameters": [
          {
            "in": "path",
            "name": "Id",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getRoleById",
        "parameters": [
          {
            "in": "path",
            "name": "Id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Role"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateRole",
        "parameters": [
          {
            "in": "path",
            "name": "Id",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Role",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelRoleChanges",
        "parameters": [
          {
            "in": "body",
            "name": "Role",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/SentLetters(ClaimID={ClaimID},DateLetterSent={DateLetterSent},LetterTypeID={LetterTypeID})": {
      "delete": {
        "operationId": "deleteSentLetter",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "DateLetterSent",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "path",
            "name": "LetterTypeID",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getSentLetterByClaimIDAndDateLetterSentAndLetterTypeID",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "DateLetterSent",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "path",
            "name": "LetterTypeID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SentLetter"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateSentLetter",
        "parameters": [
          {
            "in": "path",
            "name": "ClaimID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "DateLetterSent",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "path",
            "name": "LetterTypeID",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "SentLetter",
            "schema": {
              "$ref": "#/definitions/SentLetter"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelSentLetterChanges",
        "parameters": [
          {
            "in": "body",
            "name": "SentLetter",
            "schema": {
              "$ref": "#/definitions/SentLetter"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ServiceProviders({ID})": {
      "delete": {
        "operationId": "deleteServiceProvider",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getServiceProviderByID",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ServiceProvider"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateServiceProvider",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "ServiceProvider",
            "schema": {
              "$ref": "#/definitions/ServiceProvider"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelServiceProviderChanges",
        "parameters": [
          {
            "in": "body",
            "name": "ServiceProvider",
            "schema": {
              "$ref": "#/definitions/ServiceProvider"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ServiceProviderClaimPreferences(ServiceProviderID={ServiceProviderID},ClaimID={ClaimID})": {
      "delete": {
        "operationId": "deleteServiceProviderClaimPreference",
        "parameters": [
          {
            "in": "path",
            "name": "ServiceProviderID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "ClaimID",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getServiceProviderClaimPreferenceByServiceProviderIDAndClaimID",
        "parameters": [
          {
            "in": "path",
            "name": "ServiceProviderID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "ClaimID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ServiceProviderClaimPreference"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateServiceProviderClaimPreference",
        "parameters": [
          {
            "in": "path",
            "name": "ServiceProviderID",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "ClaimID",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "ServiceProviderClaimPreference",
            "schema": {
              "$ref": "#/definitions/ServiceProviderClaimPreference"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelServiceProviderClaimPreferenceChanges",
        "parameters": [
          {
            "in": "body",
            "name": "ServiceProviderClaimPreference",
            "schema": {
              "$ref": "#/definitions/ServiceProviderClaimPreference"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/SystemNotices({SystemNoticeID})": {
      "delete": {
        "operationId": "deleteSystemNotice",
        "parameters": [
          {
            "in": "path",
            "name": "SystemNoticeID",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getSystemNoticeBySystemNoticeID",
        "parameters": [
          {
            "in": "path",
            "name": "SystemNoticeID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SystemNotice"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateSystemNotice",
        "parameters": [
          {
            "in": "path",
            "name": "SystemNoticeID",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "SystemNotice",
            "schema": {
              "$ref": "#/definitions/SystemNotice"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelSystemNoticeChanges",
        "parameters": [
          {
            "in": "body",
            "name": "SystemNotice",
            "schema": {
              "$ref": "#/definitions/SystemNotice"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/SystemNoticeReads('{UserID}')": {
      "delete": {
        "operationId": "deleteSystemNoticeRead",
        "parameters": [
          {
            "in": "path",
            "name": "UserID",
            "type": "string"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getSystemNoticeReadByUserID",
        "parameters": [
          {
            "in": "path",
            "name": "UserID",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SystemNoticeRead"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateSystemNoticeRead",
        "parameters": [
          {
            "in": "path",
            "name": "UserID",
            "type": "string"
          },
          {
            "in": "body",
            "name": "SystemNoticeRead",
            "schema": {
              "$ref": "#/definitions/SystemNoticeRead"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelSystemNoticeReadChanges",
        "parameters": [
          {
            "in": "body",
            "name": "SystemNoticeRead",
            "schema": {
              "$ref": "#/definitions/SystemNoticeRead"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/SystemTemplates({TemplateID})": {
      "delete": {
        "operationId": "deleteSystemTemplate",
        "parameters": [
          {
            "in": "path",
            "name": "TemplateID",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getSystemTemplateByTemplateID",
        "parameters": [
          {
            "in": "path",
            "name": "TemplateID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SystemTemplate"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateSystemTemplate",
        "parameters": [
          {
            "in": "path",
            "name": "TemplateID",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "SystemTemplate",
            "schema": {
              "$ref": "#/definitions/SystemTemplate"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelSystemTemplateChanges",
        "parameters": [
          {
            "in": "body",
            "name": "SystemTemplate",
            "schema": {
              "$ref": "#/definitions/SystemTemplate"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/TokenCaches({Id})": {
      "delete": {
        "operationId": "deleteTokenCache",
        "parameters": [
          {
            "in": "path",
            "name": "Id",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getTokenCacheById",
        "parameters": [
          {
            "in": "path",
            "name": "Id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TokenCache"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateTokenCache",
        "parameters": [
          {
            "in": "path",
            "name": "Id",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "TokenCache",
            "schema": {
              "$ref": "#/definitions/TokenCache"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelTokenCacheChanges",
        "parameters": [
          {
            "in": "body",
            "name": "TokenCache",
            "schema": {
              "$ref": "#/definitions/TokenCache"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Trades({TradeID})": {
      "delete": {
        "operationId": "deleteTrade",
        "parameters": [
          {
            "in": "path",
            "name": "TradeID",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getTradeByTradeID",
        "parameters": [
          {
            "in": "path",
            "name": "TradeID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Trade"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateTrade",
        "parameters": [
          {
            "in": "path",
            "name": "TradeID",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Trade",
            "schema": {
              "$ref": "#/definitions/Trade"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelTradeChanges",
        "parameters": [
          {
            "in": "body",
            "name": "Trade",
            "schema": {
              "$ref": "#/definitions/Trade"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/Transactions({ID})": {
      "delete": {
        "operationId": "deleteTransaction",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getTransactionByID",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateTransaction",
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "Transaction",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelTransactionChanges",
        "parameters": [
          {
            "in": "body",
            "name": "Transaction",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/TransactionApprovalLimits({ApprovalLimitID})": {
      "delete": {
        "operationId": "deleteTransactionApprovalLimit",
        "parameters": [
          {
            "in": "path",
            "name": "ApprovalLimitID",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "getTransactionApprovalLimitByApprovalLimitID",
        "parameters": [
          {
            "in": "path",
            "name": "ApprovalLimitID",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TransactionApprovalLimit"
            }
          },
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "operationId": "updateTransactionApprovalLimit",
        "parameters": [
          {
            "in": "path",
            "name": "ApprovalLimitID",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "TransactionApprovalLimit",
            "schema": {
              "$ref": "#/definitions/TransactionApprovalLimit"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "cancel": {
        "operationId": "cancelTransactionApprovalLimitChanges",
        "parameters": [
          {
            "in": "body",
            "name": "TransactionApprovalLimit",
            "schema": {
              "$ref": "#/definitions/TransactionApprovalLimit"
            }
          }
        ],
        "responses": {
          "204": {},
          "default": {
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "basePath": "/odata/RECODb",
  "host": "localhost:5000",
  "schemes": [
    "http"
  ]
}