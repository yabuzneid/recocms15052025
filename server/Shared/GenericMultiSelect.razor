@typeparam TItem

@using Syncfusion.Blazor.DropDowns

@if (Visible)
{
    <SfMultiSelect TItem="TItem" TValue="List<int>"
                   @bind-Value=SelectedKeys
                   DataSource=@DataSource
                   AllowCustomValue="true"
                   Mode="@VisualMode.Box">
        <MultiSelectFieldSettings Text="@TextField" Value="@ValueField" />
    </SfMultiSelect>
}

@code {
    private List<int> _selectedKeys = new List<int>() { };
    [Parameter]
    public List<int> SelectedKeys
    {
        get => _selectedKeys;
        set
        {
            if (_selectedKeys == value) return;
            _selectedKeys = value;
            SelectedKeysChanged.InvokeAsync(_selectedKeys);
        }
    }


    [Parameter]
    public EventCallback<List<int>> SelectedKeysChanged { get; set; }

    [Parameter]
    public IEnumerable<TItem> DataSource { get; set; }

    [Parameter]
    public string TextField { get; set; } = "Value";

    [Parameter]
    public string ValueField { get; set; } = "Key";

    [Parameter]
    public VisualMode VisualMode { get; set; } = VisualMode.Box;

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public bool Visible { get; set; } = true;

    private List<int> _dataContainer = null;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        if (SelectedKeys?.Any() == true)
        {
            _dataContainer = SelectedKeys;
            SelectedKeys = new();
        }
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        if (_dataContainer is not null)
        {
            SelectedKeys = _dataContainer;
            _dataContainer = null;
            SelectedKeysChanged.InvokeAsync(SelectedKeys);
        }
    }
}
